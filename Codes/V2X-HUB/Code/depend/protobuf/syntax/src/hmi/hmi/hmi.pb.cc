// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: hmi/hmi.proto
// Protobuf C++ Version: 6.31.1

#include "hmi/hmi.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace HMI {

inline constexpr Hmi::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        system_{nullptr},
        transport_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Hmi::Hmi(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Hmi_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HmiDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HmiDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HmiDefaultTypeInternal() {}
  union {
    Hmi _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HmiDefaultTypeInternal _Hmi_default_instance_;
}  // namespace HMI
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_hmi_2fhmi_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_hmi_2fhmi_2eproto = nullptr;
const ::uint32_t
    TableStruct_hmi_2fhmi_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::HMI::Hmi, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::HMI::Hmi, _impl_.system_),
        PROTOBUF_FIELD_OFFSET(::HMI::Hmi, _impl_.transport_),
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::HMI::Hmi)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::HMI::_Hmi_default_instance_._instance,
};
const char descriptor_table_protodef_hmi_2fhmi_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\rhmi/hmi.proto\022\003HMI\032\027hmi/system/system."
    "proto\032\035hmi/transport/transport.proto\"y\n\003"
    "Hmi\022\'\n\006system\030\001 \001(\0132\022.HMI.SYSTEM.SystemH"
    "\000\210\001\001\0220\n\ttransport\030\002 \001(\0132\030.HMI.TRANSPORT."
    "TransportH\001\210\001\001B\t\n\007_systemB\014\n\n_transportb"
    "\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_hmi_2fhmi_2eproto_deps[2] = {
        &::descriptor_table_hmi_2fsystem_2fsystem_2eproto,
        &::descriptor_table_hmi_2ftransport_2ftransport_2eproto,
};
static ::absl::once_flag descriptor_table_hmi_2fhmi_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_hmi_2fhmi_2eproto = {
    false,
    false,
    207,
    descriptor_table_protodef_hmi_2fhmi_2eproto,
    "hmi/hmi.proto",
    &descriptor_table_hmi_2fhmi_2eproto_once,
    descriptor_table_hmi_2fhmi_2eproto_deps,
    2,
    1,
    schemas,
    file_default_instances,
    TableStruct_hmi_2fhmi_2eproto::offsets,
    file_level_enum_descriptors_hmi_2fhmi_2eproto,
    file_level_service_descriptors_hmi_2fhmi_2eproto,
};
namespace HMI {
// ===================================================================

class Hmi::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Hmi>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Hmi, _impl_._has_bits_);
};

void Hmi::clear_system() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.system_ != nullptr) _impl_.system_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Hmi::clear_transport() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.transport_ != nullptr) _impl_.transport_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
Hmi::Hmi(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Hmi_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HMI.Hmi)
}
PROTOBUF_NDEBUG_INLINE Hmi::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::HMI::Hmi& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Hmi::Hmi(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Hmi& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Hmi_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Hmi* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.system_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.system_)
                : nullptr;
  _impl_.transport_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.transport_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:HMI.Hmi)
}
PROTOBUF_NDEBUG_INLINE Hmi::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Hmi::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, system_),
           0,
           offsetof(Impl_, transport_) -
               offsetof(Impl_, system_) +
               sizeof(Impl_::transport_));
}
Hmi::~Hmi() {
  // @@protoc_insertion_point(destructor:HMI.Hmi)
  SharedDtor(*this);
}
inline void Hmi::SharedDtor(MessageLite& self) {
  Hmi& this_ = static_cast<Hmi&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.system_;
  delete this_._impl_.transport_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Hmi::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Hmi(arena);
}
constexpr auto Hmi::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Hmi),
                                            alignof(Hmi));
}
constexpr auto Hmi::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Hmi_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Hmi::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Hmi>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Hmi::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Hmi>(), &Hmi::ByteSizeLong,
              &Hmi::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Hmi, _impl_._cached_size_),
          false,
      },
      &Hmi::kDescriptorMethods,
      &descriptor_table_hmi_2fhmi_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Hmi_class_data_ =
        Hmi::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Hmi::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Hmi_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Hmi_class_data_.tc_table);
  return Hmi_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
Hmi::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Hmi, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Hmi_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::HMI::Hmi>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .HMI.TRANSPORT.Transport transport = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Hmi, _impl_.transport_)}},
    // optional .HMI.SYSTEM.System system = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Hmi, _impl_.system_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .HMI.SYSTEM.System system = 1;
    {PROTOBUF_FIELD_OFFSET(Hmi, _impl_.system_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .HMI.TRANSPORT.Transport transport = 2;
    {PROTOBUF_FIELD_OFFSET(Hmi, _impl_.transport_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::HMI::SYSTEM::System>()},
      {::_pbi::TcParser::GetTable<::HMI::TRANSPORT::Transport>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Hmi::Clear() {
// @@protoc_insertion_point(message_clear_start:HMI.Hmi)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.system_ != nullptr);
      _impl_.system_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.transport_ != nullptr);
      _impl_.transport_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Hmi::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Hmi& this_ = static_cast<const Hmi&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Hmi::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Hmi& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:HMI.Hmi)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .HMI.SYSTEM.System system = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.system_, this_._impl_.system_->GetCachedSize(), target,
        stream);
  }

  // optional .HMI.TRANSPORT.Transport transport = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.transport_, this_._impl_.transport_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HMI.Hmi)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Hmi::ByteSizeLong(const MessageLite& base) {
  const Hmi& this_ = static_cast<const Hmi&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Hmi::ByteSizeLong() const {
  const Hmi& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:HMI.Hmi)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional .HMI.SYSTEM.System system = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.system_);
    }
    // optional .HMI.TRANSPORT.Transport transport = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.transport_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Hmi::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Hmi*>(&to_msg);
  auto& from = static_cast<const Hmi&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:HMI.Hmi)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.system_ != nullptr);
      if (_this->_impl_.system_ == nullptr) {
        _this->_impl_.system_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.system_);
      } else {
        _this->_impl_.system_->MergeFrom(*from._impl_.system_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.transport_ != nullptr);
      if (_this->_impl_.transport_ == nullptr) {
        _this->_impl_.transport_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.transport_);
      } else {
        _this->_impl_.transport_->MergeFrom(*from._impl_.transport_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Hmi::CopyFrom(const Hmi& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HMI.Hmi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Hmi::InternalSwap(Hmi* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Hmi, _impl_.transport_)
      + sizeof(Hmi::_impl_.transport_)
      - PROTOBUF_FIELD_OFFSET(Hmi, _impl_.system_)>(
          reinterpret_cast<char*>(&_impl_.system_),
          reinterpret_cast<char*>(&other->_impl_.system_));
}

::google::protobuf::Metadata Hmi::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace HMI
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_hmi_2fhmi_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
