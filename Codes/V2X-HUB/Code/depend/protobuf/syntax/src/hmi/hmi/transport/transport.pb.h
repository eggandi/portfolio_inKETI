// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: hmi/transport/transport.proto
// Protobuf C++ Version: 6.31.1

#ifndef hmi_2ftransport_2ftransport_2eproto_2epb_2eh
#define hmi_2ftransport_2ftransport_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "validate/validate.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_hmi_2ftransport_2ftransport_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_hmi_2ftransport_2ftransport_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_hmi_2ftransport_2ftransport_2eproto;
}  // extern "C"
namespace HMI {
namespace TRANSPORT {
enum Transport_Phase : int;
extern const uint32_t Transport_Phase_internal_data_[];
class Transport;
struct TransportDefaultTypeInternal;
extern TransportDefaultTypeInternal _Transport_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Transport_class_data_;
}  // namespace TRANSPORT
}  // namespace HMI
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::HMI::TRANSPORT::Transport_Phase_internal_data_>
    internal::EnumTraitsImpl::value<::HMI::TRANSPORT::Transport_Phase>;
}  // namespace protobuf
}  // namespace google

namespace HMI {
namespace TRANSPORT {
enum Transport_Phase : int {
  Transport_Phase_PHASE_UNKNOWN = 0,
  Transport_Phase_PHASE_DRIVING_START = 1,
  Transport_Phase_PHASE_CUSTOMS_ARRIVAL = 2,
  Transport_Phase_PHASE_LOADING_START = 3,
  Transport_Phase_PHASE_LOADING_COMPLETE = 4,
  Transport_Phase_PHASE_TRANSPORT_START = 5,
  Transport_Phase_PHASE_TRANSPORT_ONGOING = 6,
  Transport_Phase_PHASE_TRANSPORT_COMPLETE = 7,
  Transport_Phase_PHASE_DEFECT_START = 8,
  Transport_Phase_PHASE_UNLOADING_COMPLETE = 9,
  Transport_Phase_PHASE_DRIVING_END = 10,
  Transport_Phase_PHASE_TURNAROUND_START = 11,
  Transport_Phase_PHASE_TURNAROUND_END = 12,
  Transport_Phase_Transport_Phase_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  Transport_Phase_Transport_Phase_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t Transport_Phase_internal_data_[];
inline constexpr Transport_Phase Transport_Phase_Phase_MIN =
    static_cast<Transport_Phase>(0);
inline constexpr Transport_Phase Transport_Phase_Phase_MAX =
    static_cast<Transport_Phase>(12);
inline bool Transport_Phase_IsValid(int value) {
  return 0 <= value && value <= 12;
}
inline constexpr int Transport_Phase_Phase_ARRAYSIZE = 12 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Transport_Phase_descriptor();
template <typename T>
const ::std::string& Transport_Phase_Name(T value) {
  static_assert(::std::is_same<T, Transport_Phase>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to Phase_Name().");
  return Transport_Phase_Name(static_cast<Transport_Phase>(value));
}
template <>
inline const ::std::string& Transport_Phase_Name(Transport_Phase value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Transport_Phase_descriptor, 0, 12>(
      static_cast<int>(value));
}
inline bool Transport_Phase_Parse(
    ::absl::string_view name, Transport_Phase* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<Transport_Phase>(Transport_Phase_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class Transport final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:HMI.TRANSPORT.Transport) */ {
 public:
  inline Transport() : Transport(nullptr) {}
  ~Transport() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Transport* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Transport));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Transport(::google::protobuf::internal::ConstantInitialized);

  inline Transport(const Transport& from) : Transport(nullptr, from) {}
  inline Transport(Transport&& from) noexcept
      : Transport(nullptr, ::std::move(from)) {}
  inline Transport& operator=(const Transport& from) {
    CopyFrom(from);
    return *this;
  }
  inline Transport& operator=(Transport&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Transport& default_instance() {
    return *reinterpret_cast<const Transport*>(
        &_Transport_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Transport& a, Transport& b) { a.Swap(&b); }
  inline void Swap(Transport* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Transport* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Transport* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Transport>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Transport& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Transport& from) { Transport::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Transport* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "HMI.TRANSPORT.Transport"; }

 protected:
  explicit Transport(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Transport(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Transport& from);
  Transport(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Transport&& from) noexcept
      : Transport(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Phase = Transport_Phase;
  static constexpr Phase PHASE_UNKNOWN = Transport_Phase_PHASE_UNKNOWN;
  static constexpr Phase PHASE_DRIVING_START = Transport_Phase_PHASE_DRIVING_START;
  static constexpr Phase PHASE_CUSTOMS_ARRIVAL = Transport_Phase_PHASE_CUSTOMS_ARRIVAL;
  static constexpr Phase PHASE_LOADING_START = Transport_Phase_PHASE_LOADING_START;
  static constexpr Phase PHASE_LOADING_COMPLETE = Transport_Phase_PHASE_LOADING_COMPLETE;
  static constexpr Phase PHASE_TRANSPORT_START = Transport_Phase_PHASE_TRANSPORT_START;
  static constexpr Phase PHASE_TRANSPORT_ONGOING = Transport_Phase_PHASE_TRANSPORT_ONGOING;
  static constexpr Phase PHASE_TRANSPORT_COMPLETE = Transport_Phase_PHASE_TRANSPORT_COMPLETE;
  static constexpr Phase PHASE_DEFECT_START = Transport_Phase_PHASE_DEFECT_START;
  static constexpr Phase PHASE_UNLOADING_COMPLETE = Transport_Phase_PHASE_UNLOADING_COMPLETE;
  static constexpr Phase PHASE_DRIVING_END = Transport_Phase_PHASE_DRIVING_END;
  static constexpr Phase PHASE_TURNAROUND_START = Transport_Phase_PHASE_TURNAROUND_START;
  static constexpr Phase PHASE_TURNAROUND_END = Transport_Phase_PHASE_TURNAROUND_END;
  static inline bool Phase_IsValid(int value) {
    return Transport_Phase_IsValid(value);
  }
  static constexpr Phase Phase_MIN = Transport_Phase_Phase_MIN;
  static constexpr Phase Phase_MAX = Transport_Phase_Phase_MAX;
  static constexpr int Phase_ARRAYSIZE = Transport_Phase_Phase_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Phase_descriptor() {
    return Transport_Phase_descriptor();
  }
  template <typename T>
  static inline const ::std::string& Phase_Name(T value) {
    return Transport_Phase_Name(value);
  }
  static inline bool Phase_Parse(
      ::absl::string_view name, Phase* PROTOBUF_NONNULL value) {
    return Transport_Phase_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kPhaseFieldNumber = 1,
  };
  // optional .HMI.TRANSPORT.Transport.Phase phase = 1 [(.validate.rules) = {
  bool has_phase() const;
  void clear_phase() ;
  ::HMI::TRANSPORT::Transport_Phase phase() const;
  void set_phase(::HMI::TRANSPORT::Transport_Phase value);

  private:
  ::HMI::TRANSPORT::Transport_Phase _internal_phase() const;
  void _internal_set_phase(::HMI::TRANSPORT::Transport_Phase value);

  public:
  // @@protoc_insertion_point(class_scope:HMI.TRANSPORT.Transport)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Transport& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    int phase_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hmi_2ftransport_2ftransport_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Transport_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Transport

// optional .HMI.TRANSPORT.Transport.Phase phase = 1 [(.validate.rules) = {
inline bool Transport::has_phase() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Transport::clear_phase() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.phase_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::HMI::TRANSPORT::Transport_Phase Transport::phase() const {
  // @@protoc_insertion_point(field_get:HMI.TRANSPORT.Transport.phase)
  return _internal_phase();
}
inline void Transport::set_phase(::HMI::TRANSPORT::Transport_Phase value) {
  _internal_set_phase(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:HMI.TRANSPORT.Transport.phase)
}
inline ::HMI::TRANSPORT::Transport_Phase Transport::_internal_phase() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::HMI::TRANSPORT::Transport_Phase>(_impl_.phase_);
}
inline void Transport::_internal_set_phase(::HMI::TRANSPORT::Transport_Phase value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.phase_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace TRANSPORT
}  // namespace HMI


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::HMI::TRANSPORT::Transport_Phase> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::HMI::TRANSPORT::Transport_Phase>() {
  return ::HMI::TRANSPORT::Transport_Phase_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // hmi_2ftransport_2ftransport_2eproto_2epb_2eh
