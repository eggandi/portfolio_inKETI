// Code generated by protoc-gen-validate
// source: dms/dms.proto
// DO NOT EDIT!!!

#include "dms/dms.pb.validate.h"

#include <google/protobuf/message.h>
#include <google/protobuf/util/time_util.h>
#include "re2/re2.h"

namespace pgv {

namespace protobuf = google::protobuf;
namespace protobuf_wkt = google::protobuf;

namespace validate {
using std::string;

// define the regex for a UUID once up-front
const re2::RE2 _uuidPattern("^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$");

pgv::Validator<::DMS::Dms> validator___DMS__Dms(static_cast<bool(*)(const ::DMS::Dms&, pgv::ValidationMsg*)>(::DMS::Validate));


} // namespace validate
} // namespace pgv


namespace DMS {


// Validate checks the field values on ::DMS::Dms with the rules defined in the
// proto definition for this message. If any rules are violated, the return
// value is false and an error message is written to the input string argument.

	

	

	

	

        

	

	

	



bool Validate(const ::DMS::Dms& m, pgv::ValidationMsg* err) {
	(void)m;
	(void)err;
			if (m.has_status()) {
				
		
		
	

		


		

			}
		
		
	return true;
}


} // namespace

