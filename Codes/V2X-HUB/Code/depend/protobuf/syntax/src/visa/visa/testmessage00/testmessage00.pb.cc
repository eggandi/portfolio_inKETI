// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: visa/testmessage00/testmessage00.proto
// Protobuf C++ Version: 6.31.1

#include "visa/testmessage00/testmessage00.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace VISA {
namespace TestMessage00 {

inline constexpr TestMessage00_REGION_Reg_TestMessage00::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        isused_{false} {}

template <typename>
PROTOBUF_CONSTEXPR TestMessage00_REGION_Reg_TestMessage00::TestMessage00_REGION_Reg_TestMessage00(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TestMessage00_REGION_Reg_TestMessage00_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TestMessage00_REGION_Reg_TestMessage00DefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMessage00_REGION_Reg_TestMessage00DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMessage00_REGION_Reg_TestMessage00DefaultTypeInternal() {}
  union {
    TestMessage00_REGION_Reg_TestMessage00 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMessage00_REGION_Reg_TestMessage00DefaultTypeInternal _TestMessage00_REGION_Reg_TestMessage00_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR TestMessage00_REGION::TestMessage00_REGION(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(TestMessage00_REGION_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct TestMessage00_REGIONDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMessage00_REGIONDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMessage00_REGIONDefaultTypeInternal() {}
  union {
    TestMessage00_REGION _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMessage00_REGIONDefaultTypeInternal _TestMessage00_REGION_default_instance_;

inline constexpr TestMessage00_Header::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        year_{0},
        timestamp_{0},
        secmark_{0},
        msgissuerevision_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TestMessage00_Header::TestMessage00_Header(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TestMessage00_Header_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TestMessage00_HeaderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMessage00_HeaderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMessage00_HeaderDefaultTypeInternal() {}
  union {
    TestMessage00_Header _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMessage00_HeaderDefaultTypeInternal _TestMessage00_Header_default_instance_;

inline constexpr TestMessage00::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        header_{nullptr},
        regional_{nullptr},
        infrasafetymsg_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR TestMessage00::TestMessage00(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TestMessage00_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TestMessage00DefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMessage00DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMessage00DefaultTypeInternal() {}
  union {
    TestMessage00 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMessage00DefaultTypeInternal _TestMessage00_default_instance_;
}  // namespace TestMessage00
}  // namespace VISA
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_visa_2ftestmessage00_2ftestmessage00_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_visa_2ftestmessage00_2ftestmessage00_2eproto = nullptr;
const ::uint32_t
    TableStruct_visa_2ftestmessage00_2ftestmessage00_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::VISA::TestMessage00::TestMessage00_Header, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::VISA::TestMessage00::TestMessage00_Header, _impl_.year_),
        PROTOBUF_FIELD_OFFSET(::VISA::TestMessage00::TestMessage00_Header, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::VISA::TestMessage00::TestMessage00_Header, _impl_.secmark_),
        PROTOBUF_FIELD_OFFSET(::VISA::TestMessage00::TestMessage00_Header, _impl_.msgissuerevision_),
        0,
        1,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::VISA::TestMessage00::TestMessage00_REGION_Reg_TestMessage00, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::VISA::TestMessage00::TestMessage00_REGION_Reg_TestMessage00, _impl_.isused_),
        0,
        0x000, // bitmap
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::VISA::TestMessage00::TestMessage00, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::VISA::TestMessage00::TestMessage00, _impl_.header_),
        PROTOBUF_FIELD_OFFSET(::VISA::TestMessage00::TestMessage00, _impl_.regional_),
        PROTOBUF_FIELD_OFFSET(::VISA::TestMessage00::TestMessage00, _impl_.infrasafetymsg_),
        0,
        1,
        2,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::VISA::TestMessage00::TestMessage00_Header)},
        {11, sizeof(::VISA::TestMessage00::TestMessage00_REGION_Reg_TestMessage00)},
        {16, sizeof(::VISA::TestMessage00::TestMessage00_REGION)},
        {17, sizeof(::VISA::TestMessage00::TestMessage00)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::VISA::TestMessage00::_TestMessage00_Header_default_instance_._instance,
    &::VISA::TestMessage00::_TestMessage00_REGION_Reg_TestMessage00_default_instance_._instance,
    &::VISA::TestMessage00::_TestMessage00_REGION_default_instance_._instance,
    &::VISA::TestMessage00::_TestMessage00_default_instance_._instance,
};
const char descriptor_table_protodef_visa_2ftestmessage00_2ftestmessage00_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n&visa/testmessage00/testmessage00.proto"
    "\022\022VISA.TestMessage00\032\036google/protobuf/wr"
    "appers.proto\0326visa/testmessage00/infrasa"
    "fetymsg/infrasafetymsg.proto\032\027validate/v"
    "alidate.proto\"\220\004\n\rTestMessage00\022=\n\006heade"
    "r\030\001 \001(\0132(.VISA.TestMessage00.TestMessage"
    "00.HeaderH\000\210\001\001\022\?\n\010regional\030\002 \001(\0132(.VISA."
    "TestMessage00.TestMessage00.REGIONH\001\210\001\001\022"
    "I\n\016infrasafetymsg\030\003 \001(\01321.VISA.TestMessa"
    "ge00.InfraSafetyMsg.InfraSafetyMsg\032\323\001\n\006H"
    "eader\022\035\n\004year\030\001 \001(\005B\n\372B\007\032\005\030\377\037(\000H\000\210\001\001\022#\n\t"
    "timestamp\030\002 \001(\005B\013\372B\010\032\006\030\300\225 (\000H\001\210\001\001\022!\n\007sec"
    "mark\030\003 \001(\005B\013\372B\010\032\006\030\377\377\003(\000H\002\210\001\001\022*\n\020msgissue"
    "revision\030\004 \001(\005B\013\372B\010\032\006\030\377\377\003(\000H\003\210\001\001B\007\n\005_yea"
    "rB\014\n\n_timestampB\n\n\010_secmarkB\023\n\021_msgissue"
    "revision\032F\n\006REGION\032<\n\021Reg_TestMessage00\022"
    "\034\n\006isused\030\001 \001(\010B\007\372B\004j\002\010\000H\000\210\001\001B\t\n\007_isused"
    "B\t\n\007_headerB\013\n\t_regionalb\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_visa_2ftestmessage00_2ftestmessage00_2eproto_deps[3] = {
        &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
        &::descriptor_table_validate_2fvalidate_2eproto,
        &::descriptor_table_visa_2ftestmessage00_2finfrasafetymsg_2finfrasafetymsg_2eproto,
};
static ::absl::once_flag descriptor_table_visa_2ftestmessage00_2ftestmessage00_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_visa_2ftestmessage00_2ftestmessage00_2eproto = {
    false,
    false,
    712,
    descriptor_table_protodef_visa_2ftestmessage00_2ftestmessage00_2eproto,
    "visa/testmessage00/testmessage00.proto",
    &descriptor_table_visa_2ftestmessage00_2ftestmessage00_2eproto_once,
    descriptor_table_visa_2ftestmessage00_2ftestmessage00_2eproto_deps,
    3,
    4,
    schemas,
    file_default_instances,
    TableStruct_visa_2ftestmessage00_2ftestmessage00_2eproto::offsets,
    file_level_enum_descriptors_visa_2ftestmessage00_2ftestmessage00_2eproto,
    file_level_service_descriptors_visa_2ftestmessage00_2ftestmessage00_2eproto,
};
namespace VISA {
namespace TestMessage00 {
// ===================================================================

class TestMessage00_Header::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TestMessage00_Header>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TestMessage00_Header, _impl_._has_bits_);
};

TestMessage00_Header::TestMessage00_Header(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TestMessage00_Header_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:VISA.TestMessage00.TestMessage00.Header)
}
TestMessage00_Header::TestMessage00_Header(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TestMessage00_Header& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TestMessage00_Header_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE TestMessage00_Header::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void TestMessage00_Header::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, year_),
           0,
           offsetof(Impl_, msgissuerevision_) -
               offsetof(Impl_, year_) +
               sizeof(Impl_::msgissuerevision_));
}
TestMessage00_Header::~TestMessage00_Header() {
  // @@protoc_insertion_point(destructor:VISA.TestMessage00.TestMessage00.Header)
  SharedDtor(*this);
}
inline void TestMessage00_Header::SharedDtor(MessageLite& self) {
  TestMessage00_Header& this_ = static_cast<TestMessage00_Header&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TestMessage00_Header::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TestMessage00_Header(arena);
}
constexpr auto TestMessage00_Header::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TestMessage00_Header),
                                            alignof(TestMessage00_Header));
}
constexpr auto TestMessage00_Header::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TestMessage00_Header_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TestMessage00_Header::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TestMessage00_Header>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TestMessage00_Header::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TestMessage00_Header>(), &TestMessage00_Header::ByteSizeLong,
              &TestMessage00_Header::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TestMessage00_Header, _impl_._cached_size_),
          false,
      },
      &TestMessage00_Header::kDescriptorMethods,
      &descriptor_table_visa_2ftestmessage00_2ftestmessage00_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TestMessage00_Header_class_data_ =
        TestMessage00_Header::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TestMessage00_Header::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TestMessage00_Header_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TestMessage00_Header_class_data_.tc_table);
  return TestMessage00_Header_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2>
TestMessage00_Header::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestMessage00_Header, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    TestMessage00_Header_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::VISA::TestMessage00::TestMessage00_Header>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 msgissuerevision = 4 [(.validate.rules) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestMessage00_Header, _impl_.msgissuerevision_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(TestMessage00_Header, _impl_.msgissuerevision_)}},
    // optional int32 year = 1 [(.validate.rules) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestMessage00_Header, _impl_.year_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(TestMessage00_Header, _impl_.year_)}},
    // optional int32 timestamp = 2 [(.validate.rules) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestMessage00_Header, _impl_.timestamp_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(TestMessage00_Header, _impl_.timestamp_)}},
    // optional int32 secmark = 3 [(.validate.rules) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestMessage00_Header, _impl_.secmark_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(TestMessage00_Header, _impl_.secmark_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 year = 1 [(.validate.rules) = {
    {PROTOBUF_FIELD_OFFSET(TestMessage00_Header, _impl_.year_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 timestamp = 2 [(.validate.rules) = {
    {PROTOBUF_FIELD_OFFSET(TestMessage00_Header, _impl_.timestamp_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 secmark = 3 [(.validate.rules) = {
    {PROTOBUF_FIELD_OFFSET(TestMessage00_Header, _impl_.secmark_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 msgissuerevision = 4 [(.validate.rules) = {
    {PROTOBUF_FIELD_OFFSET(TestMessage00_Header, _impl_.msgissuerevision_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void TestMessage00_Header::Clear() {
// @@protoc_insertion_point(message_clear_start:VISA.TestMessage00.TestMessage00.Header)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    ::memset(&_impl_.year_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.msgissuerevision_) -
        reinterpret_cast<char*>(&_impl_.year_)) + sizeof(_impl_.msgissuerevision_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TestMessage00_Header::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TestMessage00_Header& this_ = static_cast<const TestMessage00_Header&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TestMessage00_Header::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TestMessage00_Header& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:VISA.TestMessage00.TestMessage00.Header)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int32 year = 1 [(.validate.rules) = {
  if ((cached_has_bits & 0x00000001u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
            stream, this_._internal_year(), target);
  }

  // optional int32 timestamp = 2 [(.validate.rules) = {
  if ((cached_has_bits & 0x00000002u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
            stream, this_._internal_timestamp(), target);
  }

  // optional int32 secmark = 3 [(.validate.rules) = {
  if ((cached_has_bits & 0x00000004u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
            stream, this_._internal_secmark(), target);
  }

  // optional int32 msgissuerevision = 4 [(.validate.rules) = {
  if ((cached_has_bits & 0x00000008u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
            stream, this_._internal_msgissuerevision(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:VISA.TestMessage00.TestMessage00.Header)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TestMessage00_Header::ByteSizeLong(const MessageLite& base) {
  const TestMessage00_Header& this_ = static_cast<const TestMessage00_Header&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TestMessage00_Header::ByteSizeLong() const {
  const TestMessage00_Header& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:VISA.TestMessage00.TestMessage00.Header)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // optional int32 year = 1 [(.validate.rules) = {
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_year());
    }
    // optional int32 timestamp = 2 [(.validate.rules) = {
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_timestamp());
    }
    // optional int32 secmark = 3 [(.validate.rules) = {
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_secmark());
    }
    // optional int32 msgissuerevision = 4 [(.validate.rules) = {
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_msgissuerevision());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TestMessage00_Header::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TestMessage00_Header*>(&to_msg);
  auto& from = static_cast<const TestMessage00_Header&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:VISA.TestMessage00.TestMessage00.Header)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.year_ = from._impl_.year_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.timestamp_ = from._impl_.timestamp_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.secmark_ = from._impl_.secmark_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.msgissuerevision_ = from._impl_.msgissuerevision_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestMessage00_Header::CopyFrom(const TestMessage00_Header& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:VISA.TestMessage00.TestMessage00.Header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TestMessage00_Header::InternalSwap(TestMessage00_Header* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestMessage00_Header, _impl_.msgissuerevision_)
      + sizeof(TestMessage00_Header::_impl_.msgissuerevision_)
      - PROTOBUF_FIELD_OFFSET(TestMessage00_Header, _impl_.year_)>(
          reinterpret_cast<char*>(&_impl_.year_),
          reinterpret_cast<char*>(&other->_impl_.year_));
}

::google::protobuf::Metadata TestMessage00_Header::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TestMessage00_REGION_Reg_TestMessage00::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TestMessage00_REGION_Reg_TestMessage00>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TestMessage00_REGION_Reg_TestMessage00, _impl_._has_bits_);
};

TestMessage00_REGION_Reg_TestMessage00::TestMessage00_REGION_Reg_TestMessage00(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TestMessage00_REGION_Reg_TestMessage00_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:VISA.TestMessage00.TestMessage00.REGION.Reg_TestMessage00)
}
TestMessage00_REGION_Reg_TestMessage00::TestMessage00_REGION_Reg_TestMessage00(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TestMessage00_REGION_Reg_TestMessage00& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TestMessage00_REGION_Reg_TestMessage00_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE TestMessage00_REGION_Reg_TestMessage00::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void TestMessage00_REGION_Reg_TestMessage00::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.isused_ = {};
}
TestMessage00_REGION_Reg_TestMessage00::~TestMessage00_REGION_Reg_TestMessage00() {
  // @@protoc_insertion_point(destructor:VISA.TestMessage00.TestMessage00.REGION.Reg_TestMessage00)
  SharedDtor(*this);
}
inline void TestMessage00_REGION_Reg_TestMessage00::SharedDtor(MessageLite& self) {
  TestMessage00_REGION_Reg_TestMessage00& this_ = static_cast<TestMessage00_REGION_Reg_TestMessage00&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TestMessage00_REGION_Reg_TestMessage00::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TestMessage00_REGION_Reg_TestMessage00(arena);
}
constexpr auto TestMessage00_REGION_Reg_TestMessage00::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TestMessage00_REGION_Reg_TestMessage00),
                                            alignof(TestMessage00_REGION_Reg_TestMessage00));
}
constexpr auto TestMessage00_REGION_Reg_TestMessage00::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TestMessage00_REGION_Reg_TestMessage00_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TestMessage00_REGION_Reg_TestMessage00::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TestMessage00_REGION_Reg_TestMessage00>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TestMessage00_REGION_Reg_TestMessage00::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TestMessage00_REGION_Reg_TestMessage00>(), &TestMessage00_REGION_Reg_TestMessage00::ByteSizeLong,
              &TestMessage00_REGION_Reg_TestMessage00::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TestMessage00_REGION_Reg_TestMessage00, _impl_._cached_size_),
          false,
      },
      &TestMessage00_REGION_Reg_TestMessage00::kDescriptorMethods,
      &descriptor_table_visa_2ftestmessage00_2ftestmessage00_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TestMessage00_REGION_Reg_TestMessage00_class_data_ =
        TestMessage00_REGION_Reg_TestMessage00::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TestMessage00_REGION_Reg_TestMessage00::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TestMessage00_REGION_Reg_TestMessage00_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TestMessage00_REGION_Reg_TestMessage00_class_data_.tc_table);
  return TestMessage00_REGION_Reg_TestMessage00_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
TestMessage00_REGION_Reg_TestMessage00::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestMessage00_REGION_Reg_TestMessage00, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    TestMessage00_REGION_Reg_TestMessage00_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::VISA::TestMessage00::TestMessage00_REGION_Reg_TestMessage00>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional bool isused = 1 [(.validate.rules) = {
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TestMessage00_REGION_Reg_TestMessage00, _impl_.isused_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(TestMessage00_REGION_Reg_TestMessage00, _impl_.isused_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool isused = 1 [(.validate.rules) = {
    {PROTOBUF_FIELD_OFFSET(TestMessage00_REGION_Reg_TestMessage00, _impl_.isused_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void TestMessage00_REGION_Reg_TestMessage00::Clear() {
// @@protoc_insertion_point(message_clear_start:VISA.TestMessage00.TestMessage00.REGION.Reg_TestMessage00)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.isused_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TestMessage00_REGION_Reg_TestMessage00::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TestMessage00_REGION_Reg_TestMessage00& this_ = static_cast<const TestMessage00_REGION_Reg_TestMessage00&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TestMessage00_REGION_Reg_TestMessage00::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TestMessage00_REGION_Reg_TestMessage00& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:VISA.TestMessage00.TestMessage00.REGION.Reg_TestMessage00)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional bool isused = 1 [(.validate.rules) = {
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this_._internal_isused(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:VISA.TestMessage00.TestMessage00.REGION.Reg_TestMessage00)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TestMessage00_REGION_Reg_TestMessage00::ByteSizeLong(const MessageLite& base) {
  const TestMessage00_REGION_Reg_TestMessage00& this_ = static_cast<const TestMessage00_REGION_Reg_TestMessage00&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TestMessage00_REGION_Reg_TestMessage00::ByteSizeLong() const {
  const TestMessage00_REGION_Reg_TestMessage00& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:VISA.TestMessage00.TestMessage00.REGION.Reg_TestMessage00)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000001u & cached_has_bits) * 2;
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TestMessage00_REGION_Reg_TestMessage00::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TestMessage00_REGION_Reg_TestMessage00*>(&to_msg);
  auto& from = static_cast<const TestMessage00_REGION_Reg_TestMessage00&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:VISA.TestMessage00.TestMessage00.REGION.Reg_TestMessage00)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_impl_.isused_ = from._impl_.isused_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestMessage00_REGION_Reg_TestMessage00::CopyFrom(const TestMessage00_REGION_Reg_TestMessage00& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:VISA.TestMessage00.TestMessage00.REGION.Reg_TestMessage00)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TestMessage00_REGION_Reg_TestMessage00::InternalSwap(TestMessage00_REGION_Reg_TestMessage00* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.isused_, other->_impl_.isused_);
}

::google::protobuf::Metadata TestMessage00_REGION_Reg_TestMessage00::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TestMessage00_REGION::_Internal {
 public:
};

TestMessage00_REGION::TestMessage00_REGION(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, TestMessage00_REGION_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:VISA.TestMessage00.TestMessage00.REGION)
}
TestMessage00_REGION::TestMessage00_REGION(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TestMessage00_REGION& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, TestMessage00_REGION_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TestMessage00_REGION* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:VISA.TestMessage00.TestMessage00.REGION)
}

inline void* PROTOBUF_NONNULL TestMessage00_REGION::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TestMessage00_REGION(arena);
}
constexpr auto TestMessage00_REGION::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TestMessage00_REGION),
                                            alignof(TestMessage00_REGION));
}
constexpr auto TestMessage00_REGION::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TestMessage00_REGION_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TestMessage00_REGION::MergeImpl,
          ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<TestMessage00_REGION>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TestMessage00_REGION::SharedDtor,
          ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<TestMessage00_REGION>(), &TestMessage00_REGION::ByteSizeLong,
              &TestMessage00_REGION::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TestMessage00_REGION, _impl_._cached_size_),
          false,
      },
      &TestMessage00_REGION::kDescriptorMethods,
      &descriptor_table_visa_2ftestmessage00_2ftestmessage00_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TestMessage00_REGION_class_data_ =
        TestMessage00_REGION::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TestMessage00_REGION::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TestMessage00_REGION_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TestMessage00_REGION_class_data_.tc_table);
  return TestMessage00_REGION_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2>
TestMessage00_REGION::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    TestMessage00_REGION_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::VISA::TestMessage00::TestMessage00_REGION>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, // no field_entries, or aux_entries
  {{
  }},
};







::google::protobuf::Metadata TestMessage00_REGION::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TestMessage00::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TestMessage00>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TestMessage00, _impl_._has_bits_);
};

void TestMessage00::clear_infrasafetymsg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.infrasafetymsg_ != nullptr) _impl_.infrasafetymsg_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
TestMessage00::TestMessage00(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TestMessage00_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:VISA.TestMessage00.TestMessage00)
}
PROTOBUF_NDEBUG_INLINE TestMessage00::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::VISA::TestMessage00::TestMessage00& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

TestMessage00::TestMessage00(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TestMessage00& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TestMessage00_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TestMessage00* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_)
                : nullptr;
  _impl_.regional_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.regional_)
                : nullptr;
  _impl_.infrasafetymsg_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.infrasafetymsg_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:VISA.TestMessage00.TestMessage00)
}
PROTOBUF_NDEBUG_INLINE TestMessage00::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void TestMessage00::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, header_),
           0,
           offsetof(Impl_, infrasafetymsg_) -
               offsetof(Impl_, header_) +
               sizeof(Impl_::infrasafetymsg_));
}
TestMessage00::~TestMessage00() {
  // @@protoc_insertion_point(destructor:VISA.TestMessage00.TestMessage00)
  SharedDtor(*this);
}
inline void TestMessage00::SharedDtor(MessageLite& self) {
  TestMessage00& this_ = static_cast<TestMessage00&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.header_;
  delete this_._impl_.regional_;
  delete this_._impl_.infrasafetymsg_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TestMessage00::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TestMessage00(arena);
}
constexpr auto TestMessage00::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TestMessage00),
                                            alignof(TestMessage00));
}
constexpr auto TestMessage00::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TestMessage00_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TestMessage00::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TestMessage00>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TestMessage00::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TestMessage00>(), &TestMessage00::ByteSizeLong,
              &TestMessage00::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TestMessage00, _impl_._cached_size_),
          false,
      },
      &TestMessage00::kDescriptorMethods,
      &descriptor_table_visa_2ftestmessage00_2ftestmessage00_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TestMessage00_class_data_ =
        TestMessage00::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TestMessage00::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TestMessage00_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TestMessage00_class_data_.tc_table);
  return TestMessage00_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2>
TestMessage00::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestMessage00, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TestMessage00_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::VISA::TestMessage00::TestMessage00>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .VISA.TestMessage00.TestMessage00.Header header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TestMessage00, _impl_.header_)}},
    // optional .VISA.TestMessage00.TestMessage00.REGION regional = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(TestMessage00, _impl_.regional_)}},
    // .VISA.TestMessage00.InfraSafetyMsg.InfraSafetyMsg infrasafetymsg = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(TestMessage00, _impl_.infrasafetymsg_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .VISA.TestMessage00.TestMessage00.Header header = 1;
    {PROTOBUF_FIELD_OFFSET(TestMessage00, _impl_.header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .VISA.TestMessage00.TestMessage00.REGION regional = 2;
    {PROTOBUF_FIELD_OFFSET(TestMessage00, _impl_.regional_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .VISA.TestMessage00.InfraSafetyMsg.InfraSafetyMsg infrasafetymsg = 3;
    {PROTOBUF_FIELD_OFFSET(TestMessage00, _impl_.infrasafetymsg_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::VISA::TestMessage00::TestMessage00_Header>()},
      {::_pbi::TcParser::GetTable<::VISA::TestMessage00::TestMessage00_REGION>()},
      {::_pbi::TcParser::GetTable<::VISA::TestMessage00::InfraSafetyMsg::InfraSafetyMsg>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void TestMessage00::Clear() {
// @@protoc_insertion_point(message_clear_start:VISA.TestMessage00.TestMessage00)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.header_ != nullptr);
      _impl_.header_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.regional_ != nullptr);
      _impl_.regional_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.infrasafetymsg_ != nullptr);
      _impl_.infrasafetymsg_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TestMessage00::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TestMessage00& this_ = static_cast<const TestMessage00&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TestMessage00::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TestMessage00& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:VISA.TestMessage00.TestMessage00)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .VISA.TestMessage00.TestMessage00.Header header = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
        stream);
  }

  // optional .VISA.TestMessage00.TestMessage00.REGION regional = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.regional_, this_._impl_.regional_->GetCachedSize(), target,
        stream);
  }

  // .VISA.TestMessage00.InfraSafetyMsg.InfraSafetyMsg infrasafetymsg = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.infrasafetymsg_, this_._impl_.infrasafetymsg_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:VISA.TestMessage00.TestMessage00)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TestMessage00::ByteSizeLong(const MessageLite& base) {
  const TestMessage00& this_ = static_cast<const TestMessage00&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TestMessage00::ByteSizeLong() const {
  const TestMessage00& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:VISA.TestMessage00.TestMessage00)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // optional .VISA.TestMessage00.TestMessage00.Header header = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
    }
    // optional .VISA.TestMessage00.TestMessage00.REGION regional = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.regional_);
    }
    // .VISA.TestMessage00.InfraSafetyMsg.InfraSafetyMsg infrasafetymsg = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.infrasafetymsg_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TestMessage00::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TestMessage00*>(&to_msg);
  auto& from = static_cast<const TestMessage00&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:VISA.TestMessage00.TestMessage00)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.header_ != nullptr);
      if (_this->_impl_.header_ == nullptr) {
        _this->_impl_.header_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_);
      } else {
        _this->_impl_.header_->MergeFrom(*from._impl_.header_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.regional_ != nullptr);
      if (_this->_impl_.regional_ == nullptr) {
        _this->_impl_.regional_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.regional_);
      } else {
        _this->_impl_.regional_->MergeFrom(*from._impl_.regional_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.infrasafetymsg_ != nullptr);
      if (_this->_impl_.infrasafetymsg_ == nullptr) {
        _this->_impl_.infrasafetymsg_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.infrasafetymsg_);
      } else {
        _this->_impl_.infrasafetymsg_->MergeFrom(*from._impl_.infrasafetymsg_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestMessage00::CopyFrom(const TestMessage00& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:VISA.TestMessage00.TestMessage00)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TestMessage00::InternalSwap(TestMessage00* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestMessage00, _impl_.infrasafetymsg_)
      + sizeof(TestMessage00::_impl_.infrasafetymsg_)
      - PROTOBUF_FIELD_OFFSET(TestMessage00, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::google::protobuf::Metadata TestMessage00::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace TestMessage00
}  // namespace VISA
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_visa_2ftestmessage00_2ftestmessage00_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
