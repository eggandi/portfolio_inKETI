// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: visa/testmessage00/testmessage00.proto
// Protobuf C++ Version: 6.31.1

#ifndef visa_2ftestmessage00_2ftestmessage00_2eproto_2epb_2eh
#define visa_2ftestmessage00_2ftestmessage00_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/wrappers.pb.h"
#include "visa/testmessage00/infrasafetymsg/infrasafetymsg.pb.h"
#include "validate/validate.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_visa_2ftestmessage00_2ftestmessage00_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_visa_2ftestmessage00_2ftestmessage00_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_visa_2ftestmessage00_2ftestmessage00_2eproto;
}  // extern "C"
namespace VISA {
namespace TestMessage00 {
class TestMessage00;
struct TestMessage00DefaultTypeInternal;
extern TestMessage00DefaultTypeInternal _TestMessage00_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull TestMessage00_class_data_;
class TestMessage00_Header;
struct TestMessage00_HeaderDefaultTypeInternal;
extern TestMessage00_HeaderDefaultTypeInternal _TestMessage00_Header_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull TestMessage00_Header_class_data_;
class TestMessage00_REGION;
struct TestMessage00_REGIONDefaultTypeInternal;
extern TestMessage00_REGIONDefaultTypeInternal _TestMessage00_REGION_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull TestMessage00_REGION_class_data_;
class TestMessage00_REGION_Reg_TestMessage00;
struct TestMessage00_REGION_Reg_TestMessage00DefaultTypeInternal;
extern TestMessage00_REGION_Reg_TestMessage00DefaultTypeInternal _TestMessage00_REGION_Reg_TestMessage00_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull TestMessage00_REGION_Reg_TestMessage00_class_data_;
}  // namespace TestMessage00
}  // namespace VISA
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace VISA {
namespace TestMessage00 {

// ===================================================================


// -------------------------------------------------------------------

class TestMessage00_REGION_Reg_TestMessage00 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:VISA.TestMessage00.TestMessage00.REGION.Reg_TestMessage00) */ {
 public:
  inline TestMessage00_REGION_Reg_TestMessage00() : TestMessage00_REGION_Reg_TestMessage00(nullptr) {}
  ~TestMessage00_REGION_Reg_TestMessage00() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TestMessage00_REGION_Reg_TestMessage00* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TestMessage00_REGION_Reg_TestMessage00));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMessage00_REGION_Reg_TestMessage00(::google::protobuf::internal::ConstantInitialized);

  inline TestMessage00_REGION_Reg_TestMessage00(const TestMessage00_REGION_Reg_TestMessage00& from) : TestMessage00_REGION_Reg_TestMessage00(nullptr, from) {}
  inline TestMessage00_REGION_Reg_TestMessage00(TestMessage00_REGION_Reg_TestMessage00&& from) noexcept
      : TestMessage00_REGION_Reg_TestMessage00(nullptr, ::std::move(from)) {}
  inline TestMessage00_REGION_Reg_TestMessage00& operator=(const TestMessage00_REGION_Reg_TestMessage00& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestMessage00_REGION_Reg_TestMessage00& operator=(TestMessage00_REGION_Reg_TestMessage00&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestMessage00_REGION_Reg_TestMessage00& default_instance() {
    return *reinterpret_cast<const TestMessage00_REGION_Reg_TestMessage00*>(
        &_TestMessage00_REGION_Reg_TestMessage00_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(TestMessage00_REGION_Reg_TestMessage00& a, TestMessage00_REGION_Reg_TestMessage00& b) { a.Swap(&b); }
  inline void Swap(TestMessage00_REGION_Reg_TestMessage00* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestMessage00_REGION_Reg_TestMessage00* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestMessage00_REGION_Reg_TestMessage00* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TestMessage00_REGION_Reg_TestMessage00>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestMessage00_REGION_Reg_TestMessage00& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestMessage00_REGION_Reg_TestMessage00& from) { TestMessage00_REGION_Reg_TestMessage00::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TestMessage00_REGION_Reg_TestMessage00* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "VISA.TestMessage00.TestMessage00.REGION.Reg_TestMessage00"; }

 protected:
  explicit TestMessage00_REGION_Reg_TestMessage00(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  TestMessage00_REGION_Reg_TestMessage00(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TestMessage00_REGION_Reg_TestMessage00& from);
  TestMessage00_REGION_Reg_TestMessage00(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, TestMessage00_REGION_Reg_TestMessage00&& from) noexcept
      : TestMessage00_REGION_Reg_TestMessage00(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIsusedFieldNumber = 1,
  };
  // optional bool isused = 1 [(.validate.rules) = {
  bool has_isused() const;
  void clear_isused() ;
  bool isused() const;
  void set_isused(bool value);

  private:
  bool _internal_isused() const;
  void _internal_set_isused(bool value);

  public:
  // @@protoc_insertion_point(class_scope:VISA.TestMessage00.TestMessage00.REGION.Reg_TestMessage00)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const TestMessage00_REGION_Reg_TestMessage00& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    bool isused_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_visa_2ftestmessage00_2ftestmessage00_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull TestMessage00_REGION_Reg_TestMessage00_class_data_;
// -------------------------------------------------------------------

class TestMessage00_REGION final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:VISA.TestMessage00.TestMessage00.REGION) */ {
 public:
  inline TestMessage00_REGION() : TestMessage00_REGION(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TestMessage00_REGION* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TestMessage00_REGION));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMessage00_REGION(::google::protobuf::internal::ConstantInitialized);

  inline TestMessage00_REGION(const TestMessage00_REGION& from) : TestMessage00_REGION(nullptr, from) {}
  inline TestMessage00_REGION(TestMessage00_REGION&& from) noexcept
      : TestMessage00_REGION(nullptr, ::std::move(from)) {}
  inline TestMessage00_REGION& operator=(const TestMessage00_REGION& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestMessage00_REGION& operator=(TestMessage00_REGION&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestMessage00_REGION& default_instance() {
    return *reinterpret_cast<const TestMessage00_REGION*>(
        &_TestMessage00_REGION_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(TestMessage00_REGION& a, TestMessage00_REGION& b) { a.Swap(&b); }
  inline void Swap(TestMessage00_REGION* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestMessage00_REGION* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestMessage00_REGION* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<TestMessage00_REGION>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const TestMessage00_REGION& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const TestMessage00_REGION& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "VISA.TestMessage00.TestMessage00.REGION"; }

 protected:
  explicit TestMessage00_REGION(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  TestMessage00_REGION(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TestMessage00_REGION& from);
  TestMessage00_REGION(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, TestMessage00_REGION&& from) noexcept
      : TestMessage00_REGION(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Reg_TestMessage00 = TestMessage00_REGION_Reg_TestMessage00;

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:VISA.TestMessage00.TestMessage00.REGION)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const TestMessage00_REGION& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_visa_2ftestmessage00_2ftestmessage00_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull TestMessage00_REGION_class_data_;
// -------------------------------------------------------------------

class TestMessage00_Header final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:VISA.TestMessage00.TestMessage00.Header) */ {
 public:
  inline TestMessage00_Header() : TestMessage00_Header(nullptr) {}
  ~TestMessage00_Header() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TestMessage00_Header* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TestMessage00_Header));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMessage00_Header(::google::protobuf::internal::ConstantInitialized);

  inline TestMessage00_Header(const TestMessage00_Header& from) : TestMessage00_Header(nullptr, from) {}
  inline TestMessage00_Header(TestMessage00_Header&& from) noexcept
      : TestMessage00_Header(nullptr, ::std::move(from)) {}
  inline TestMessage00_Header& operator=(const TestMessage00_Header& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestMessage00_Header& operator=(TestMessage00_Header&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestMessage00_Header& default_instance() {
    return *reinterpret_cast<const TestMessage00_Header*>(
        &_TestMessage00_Header_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(TestMessage00_Header& a, TestMessage00_Header& b) { a.Swap(&b); }
  inline void Swap(TestMessage00_Header* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestMessage00_Header* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestMessage00_Header* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TestMessage00_Header>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestMessage00_Header& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestMessage00_Header& from) { TestMessage00_Header::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TestMessage00_Header* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "VISA.TestMessage00.TestMessage00.Header"; }

 protected:
  explicit TestMessage00_Header(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  TestMessage00_Header(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TestMessage00_Header& from);
  TestMessage00_Header(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, TestMessage00_Header&& from) noexcept
      : TestMessage00_Header(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kYearFieldNumber = 1,
    kTimestampFieldNumber = 2,
    kSecmarkFieldNumber = 3,
    kMsgissuerevisionFieldNumber = 4,
  };
  // optional int32 year = 1 [(.validate.rules) = {
  bool has_year() const;
  void clear_year() ;
  ::int32_t year() const;
  void set_year(::int32_t value);

  private:
  ::int32_t _internal_year() const;
  void _internal_set_year(::int32_t value);

  public:
  // optional int32 timestamp = 2 [(.validate.rules) = {
  bool has_timestamp() const;
  void clear_timestamp() ;
  ::int32_t timestamp() const;
  void set_timestamp(::int32_t value);

  private:
  ::int32_t _internal_timestamp() const;
  void _internal_set_timestamp(::int32_t value);

  public:
  // optional int32 secmark = 3 [(.validate.rules) = {
  bool has_secmark() const;
  void clear_secmark() ;
  ::int32_t secmark() const;
  void set_secmark(::int32_t value);

  private:
  ::int32_t _internal_secmark() const;
  void _internal_set_secmark(::int32_t value);

  public:
  // optional int32 msgissuerevision = 4 [(.validate.rules) = {
  bool has_msgissuerevision() const;
  void clear_msgissuerevision() ;
  ::int32_t msgissuerevision() const;
  void set_msgissuerevision(::int32_t value);

  private:
  ::int32_t _internal_msgissuerevision() const;
  void _internal_set_msgissuerevision(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:VISA.TestMessage00.TestMessage00.Header)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const TestMessage00_Header& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t year_;
    ::int32_t timestamp_;
    ::int32_t secmark_;
    ::int32_t msgissuerevision_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_visa_2ftestmessage00_2ftestmessage00_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull TestMessage00_Header_class_data_;
// -------------------------------------------------------------------

class TestMessage00 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:VISA.TestMessage00.TestMessage00) */ {
 public:
  inline TestMessage00() : TestMessage00(nullptr) {}
  ~TestMessage00() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TestMessage00* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TestMessage00));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMessage00(::google::protobuf::internal::ConstantInitialized);

  inline TestMessage00(const TestMessage00& from) : TestMessage00(nullptr, from) {}
  inline TestMessage00(TestMessage00&& from) noexcept
      : TestMessage00(nullptr, ::std::move(from)) {}
  inline TestMessage00& operator=(const TestMessage00& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestMessage00& operator=(TestMessage00&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestMessage00& default_instance() {
    return *reinterpret_cast<const TestMessage00*>(
        &_TestMessage00_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(TestMessage00& a, TestMessage00& b) { a.Swap(&b); }
  inline void Swap(TestMessage00* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestMessage00* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestMessage00* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TestMessage00>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestMessage00& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestMessage00& from) { TestMessage00::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TestMessage00* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "VISA.TestMessage00.TestMessage00"; }

 protected:
  explicit TestMessage00(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  TestMessage00(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TestMessage00& from);
  TestMessage00(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, TestMessage00&& from) noexcept
      : TestMessage00(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Header = TestMessage00_Header;
  using REGION = TestMessage00_REGION;

  // accessors -------------------------------------------------------
  enum : int {
    kHeaderFieldNumber = 1,
    kRegionalFieldNumber = 2,
    kInfrasafetymsgFieldNumber = 3,
  };
  // optional .VISA.TestMessage00.TestMessage00.Header header = 1;
  bool has_header() const;
  void clear_header() ;
  const ::VISA::TestMessage00::TestMessage00_Header& header() const;
  [[nodiscard]] ::VISA::TestMessage00::TestMessage00_Header* PROTOBUF_NULLABLE release_header();
  ::VISA::TestMessage00::TestMessage00_Header* PROTOBUF_NONNULL mutable_header();
  void set_allocated_header(::VISA::TestMessage00::TestMessage00_Header* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_header(::VISA::TestMessage00::TestMessage00_Header* PROTOBUF_NULLABLE value);
  ::VISA::TestMessage00::TestMessage00_Header* PROTOBUF_NULLABLE unsafe_arena_release_header();

  private:
  const ::VISA::TestMessage00::TestMessage00_Header& _internal_header() const;
  ::VISA::TestMessage00::TestMessage00_Header* PROTOBUF_NONNULL _internal_mutable_header();

  public:
  // optional .VISA.TestMessage00.TestMessage00.REGION regional = 2;
  bool has_regional() const;
  void clear_regional() ;
  const ::VISA::TestMessage00::TestMessage00_REGION& regional() const;
  [[nodiscard]] ::VISA::TestMessage00::TestMessage00_REGION* PROTOBUF_NULLABLE release_regional();
  ::VISA::TestMessage00::TestMessage00_REGION* PROTOBUF_NONNULL mutable_regional();
  void set_allocated_regional(::VISA::TestMessage00::TestMessage00_REGION* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_regional(::VISA::TestMessage00::TestMessage00_REGION* PROTOBUF_NULLABLE value);
  ::VISA::TestMessage00::TestMessage00_REGION* PROTOBUF_NULLABLE unsafe_arena_release_regional();

  private:
  const ::VISA::TestMessage00::TestMessage00_REGION& _internal_regional() const;
  ::VISA::TestMessage00::TestMessage00_REGION* PROTOBUF_NONNULL _internal_mutable_regional();

  public:
  // .VISA.TestMessage00.InfraSafetyMsg.InfraSafetyMsg infrasafetymsg = 3;
  bool has_infrasafetymsg() const;
  void clear_infrasafetymsg() ;
  const ::VISA::TestMessage00::InfraSafetyMsg::InfraSafetyMsg& infrasafetymsg() const;
  [[nodiscard]] ::VISA::TestMessage00::InfraSafetyMsg::InfraSafetyMsg* PROTOBUF_NULLABLE release_infrasafetymsg();
  ::VISA::TestMessage00::InfraSafetyMsg::InfraSafetyMsg* PROTOBUF_NONNULL mutable_infrasafetymsg();
  void set_allocated_infrasafetymsg(::VISA::TestMessage00::InfraSafetyMsg::InfraSafetyMsg* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_infrasafetymsg(::VISA::TestMessage00::InfraSafetyMsg::InfraSafetyMsg* PROTOBUF_NULLABLE value);
  ::VISA::TestMessage00::InfraSafetyMsg::InfraSafetyMsg* PROTOBUF_NULLABLE unsafe_arena_release_infrasafetymsg();

  private:
  const ::VISA::TestMessage00::InfraSafetyMsg::InfraSafetyMsg& _internal_infrasafetymsg() const;
  ::VISA::TestMessage00::InfraSafetyMsg::InfraSafetyMsg* PROTOBUF_NONNULL _internal_mutable_infrasafetymsg();

  public:
  // @@protoc_insertion_point(class_scope:VISA.TestMessage00.TestMessage00)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const TestMessage00& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::VISA::TestMessage00::TestMessage00_Header* PROTOBUF_NULLABLE header_;
    ::VISA::TestMessage00::TestMessage00_REGION* PROTOBUF_NULLABLE regional_;
    ::VISA::TestMessage00::InfraSafetyMsg::InfraSafetyMsg* PROTOBUF_NULLABLE infrasafetymsg_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_visa_2ftestmessage00_2ftestmessage00_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull TestMessage00_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// TestMessage00_Header

// optional int32 year = 1 [(.validate.rules) = {
inline bool TestMessage00_Header::has_year() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestMessage00_Header::clear_year() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.year_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t TestMessage00_Header::year() const {
  // @@protoc_insertion_point(field_get:VISA.TestMessage00.TestMessage00.Header.year)
  return _internal_year();
}
inline void TestMessage00_Header::set_year(::int32_t value) {
  _internal_set_year(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:VISA.TestMessage00.TestMessage00.Header.year)
}
inline ::int32_t TestMessage00_Header::_internal_year() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.year_;
}
inline void TestMessage00_Header::_internal_set_year(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.year_ = value;
}

// optional int32 timestamp = 2 [(.validate.rules) = {
inline bool TestMessage00_Header::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestMessage00_Header::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t TestMessage00_Header::timestamp() const {
  // @@protoc_insertion_point(field_get:VISA.TestMessage00.TestMessage00.Header.timestamp)
  return _internal_timestamp();
}
inline void TestMessage00_Header::set_timestamp(::int32_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:VISA.TestMessage00.TestMessage00.Header.timestamp)
}
inline ::int32_t TestMessage00_Header::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void TestMessage00_Header::_internal_set_timestamp(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// optional int32 secmark = 3 [(.validate.rules) = {
inline bool TestMessage00_Header::has_secmark() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TestMessage00_Header::clear_secmark() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.secmark_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t TestMessage00_Header::secmark() const {
  // @@protoc_insertion_point(field_get:VISA.TestMessage00.TestMessage00.Header.secmark)
  return _internal_secmark();
}
inline void TestMessage00_Header::set_secmark(::int32_t value) {
  _internal_set_secmark(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:VISA.TestMessage00.TestMessage00.Header.secmark)
}
inline ::int32_t TestMessage00_Header::_internal_secmark() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.secmark_;
}
inline void TestMessage00_Header::_internal_set_secmark(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.secmark_ = value;
}

// optional int32 msgissuerevision = 4 [(.validate.rules) = {
inline bool TestMessage00_Header::has_msgissuerevision() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void TestMessage00_Header::clear_msgissuerevision() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msgissuerevision_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t TestMessage00_Header::msgissuerevision() const {
  // @@protoc_insertion_point(field_get:VISA.TestMessage00.TestMessage00.Header.msgissuerevision)
  return _internal_msgissuerevision();
}
inline void TestMessage00_Header::set_msgissuerevision(::int32_t value) {
  _internal_set_msgissuerevision(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:VISA.TestMessage00.TestMessage00.Header.msgissuerevision)
}
inline ::int32_t TestMessage00_Header::_internal_msgissuerevision() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msgissuerevision_;
}
inline void TestMessage00_Header::_internal_set_msgissuerevision(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msgissuerevision_ = value;
}

// -------------------------------------------------------------------

// TestMessage00_REGION_Reg_TestMessage00

// optional bool isused = 1 [(.validate.rules) = {
inline bool TestMessage00_REGION_Reg_TestMessage00::has_isused() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestMessage00_REGION_Reg_TestMessage00::clear_isused() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isused_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool TestMessage00_REGION_Reg_TestMessage00::isused() const {
  // @@protoc_insertion_point(field_get:VISA.TestMessage00.TestMessage00.REGION.Reg_TestMessage00.isused)
  return _internal_isused();
}
inline void TestMessage00_REGION_Reg_TestMessage00::set_isused(bool value) {
  _internal_set_isused(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:VISA.TestMessage00.TestMessage00.REGION.Reg_TestMessage00.isused)
}
inline bool TestMessage00_REGION_Reg_TestMessage00::_internal_isused() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.isused_;
}
inline void TestMessage00_REGION_Reg_TestMessage00::_internal_set_isused(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isused_ = value;
}

// -------------------------------------------------------------------

// TestMessage00_REGION

// -------------------------------------------------------------------

// TestMessage00

// optional .VISA.TestMessage00.TestMessage00.Header header = 1;
inline bool TestMessage00::has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline void TestMessage00::clear_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::VISA::TestMessage00::TestMessage00_Header& TestMessage00::_internal_header() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::VISA::TestMessage00::TestMessage00_Header* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::VISA::TestMessage00::TestMessage00_Header&>(::VISA::TestMessage00::_TestMessage00_Header_default_instance_);
}
inline const ::VISA::TestMessage00::TestMessage00_Header& TestMessage00::header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:VISA.TestMessage00.TestMessage00.header)
  return _internal_header();
}
inline void TestMessage00::unsafe_arena_set_allocated_header(
    ::VISA::TestMessage00::TestMessage00_Header* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = reinterpret_cast<::VISA::TestMessage00::TestMessage00_Header*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:VISA.TestMessage00.TestMessage00.header)
}
inline ::VISA::TestMessage00::TestMessage00_Header* PROTOBUF_NULLABLE TestMessage00::release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::VISA::TestMessage00::TestMessage00_Header* released = _impl_.header_;
  _impl_.header_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::VISA::TestMessage00::TestMessage00_Header* PROTOBUF_NULLABLE TestMessage00::unsafe_arena_release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:VISA.TestMessage00.TestMessage00.header)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::VISA::TestMessage00::TestMessage00_Header* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::VISA::TestMessage00::TestMessage00_Header* PROTOBUF_NONNULL TestMessage00::_internal_mutable_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::VISA::TestMessage00::TestMessage00_Header>(GetArena());
    _impl_.header_ = reinterpret_cast<::VISA::TestMessage00::TestMessage00_Header*>(p);
  }
  return _impl_.header_;
}
inline ::VISA::TestMessage00::TestMessage00_Header* PROTOBUF_NONNULL TestMessage00::mutable_header()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::VISA::TestMessage00::TestMessage00_Header* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:VISA.TestMessage00.TestMessage00.header)
  return _msg;
}
inline void TestMessage00::set_allocated_header(::VISA::TestMessage00::TestMessage00_Header* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.header_ = reinterpret_cast<::VISA::TestMessage00::TestMessage00_Header*>(value);
  // @@protoc_insertion_point(field_set_allocated:VISA.TestMessage00.TestMessage00.header)
}

// optional .VISA.TestMessage00.TestMessage00.REGION regional = 2;
inline bool TestMessage00::has_regional() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.regional_ != nullptr);
  return value;
}
inline void TestMessage00::clear_regional() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.regional_ != nullptr) _impl_.regional_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::VISA::TestMessage00::TestMessage00_REGION& TestMessage00::_internal_regional() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::VISA::TestMessage00::TestMessage00_REGION* p = _impl_.regional_;
  return p != nullptr ? *p : reinterpret_cast<const ::VISA::TestMessage00::TestMessage00_REGION&>(::VISA::TestMessage00::_TestMessage00_REGION_default_instance_);
}
inline const ::VISA::TestMessage00::TestMessage00_REGION& TestMessage00::regional() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:VISA.TestMessage00.TestMessage00.regional)
  return _internal_regional();
}
inline void TestMessage00::unsafe_arena_set_allocated_regional(
    ::VISA::TestMessage00::TestMessage00_REGION* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.regional_);
  }
  _impl_.regional_ = reinterpret_cast<::VISA::TestMessage00::TestMessage00_REGION*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:VISA.TestMessage00.TestMessage00.regional)
}
inline ::VISA::TestMessage00::TestMessage00_REGION* PROTOBUF_NULLABLE TestMessage00::release_regional() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::VISA::TestMessage00::TestMessage00_REGION* released = _impl_.regional_;
  _impl_.regional_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::VISA::TestMessage00::TestMessage00_REGION* PROTOBUF_NULLABLE TestMessage00::unsafe_arena_release_regional() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:VISA.TestMessage00.TestMessage00.regional)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::VISA::TestMessage00::TestMessage00_REGION* temp = _impl_.regional_;
  _impl_.regional_ = nullptr;
  return temp;
}
inline ::VISA::TestMessage00::TestMessage00_REGION* PROTOBUF_NONNULL TestMessage00::_internal_mutable_regional() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.regional_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::VISA::TestMessage00::TestMessage00_REGION>(GetArena());
    _impl_.regional_ = reinterpret_cast<::VISA::TestMessage00::TestMessage00_REGION*>(p);
  }
  return _impl_.regional_;
}
inline ::VISA::TestMessage00::TestMessage00_REGION* PROTOBUF_NONNULL TestMessage00::mutable_regional()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::VISA::TestMessage00::TestMessage00_REGION* _msg = _internal_mutable_regional();
  // @@protoc_insertion_point(field_mutable:VISA.TestMessage00.TestMessage00.regional)
  return _msg;
}
inline void TestMessage00::set_allocated_regional(::VISA::TestMessage00::TestMessage00_REGION* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.regional_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.regional_ = reinterpret_cast<::VISA::TestMessage00::TestMessage00_REGION*>(value);
  // @@protoc_insertion_point(field_set_allocated:VISA.TestMessage00.TestMessage00.regional)
}

// .VISA.TestMessage00.InfraSafetyMsg.InfraSafetyMsg infrasafetymsg = 3;
inline bool TestMessage00::has_infrasafetymsg() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.infrasafetymsg_ != nullptr);
  return value;
}
inline const ::VISA::TestMessage00::InfraSafetyMsg::InfraSafetyMsg& TestMessage00::_internal_infrasafetymsg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::VISA::TestMessage00::InfraSafetyMsg::InfraSafetyMsg* p = _impl_.infrasafetymsg_;
  return p != nullptr ? *p : reinterpret_cast<const ::VISA::TestMessage00::InfraSafetyMsg::InfraSafetyMsg&>(::VISA::TestMessage00::InfraSafetyMsg::_InfraSafetyMsg_default_instance_);
}
inline const ::VISA::TestMessage00::InfraSafetyMsg::InfraSafetyMsg& TestMessage00::infrasafetymsg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:VISA.TestMessage00.TestMessage00.infrasafetymsg)
  return _internal_infrasafetymsg();
}
inline void TestMessage00::unsafe_arena_set_allocated_infrasafetymsg(
    ::VISA::TestMessage00::InfraSafetyMsg::InfraSafetyMsg* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.infrasafetymsg_);
  }
  _impl_.infrasafetymsg_ = reinterpret_cast<::VISA::TestMessage00::InfraSafetyMsg::InfraSafetyMsg*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:VISA.TestMessage00.TestMessage00.infrasafetymsg)
}
inline ::VISA::TestMessage00::InfraSafetyMsg::InfraSafetyMsg* PROTOBUF_NULLABLE TestMessage00::release_infrasafetymsg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::VISA::TestMessage00::InfraSafetyMsg::InfraSafetyMsg* released = _impl_.infrasafetymsg_;
  _impl_.infrasafetymsg_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::VISA::TestMessage00::InfraSafetyMsg::InfraSafetyMsg* PROTOBUF_NULLABLE TestMessage00::unsafe_arena_release_infrasafetymsg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:VISA.TestMessage00.TestMessage00.infrasafetymsg)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::VISA::TestMessage00::InfraSafetyMsg::InfraSafetyMsg* temp = _impl_.infrasafetymsg_;
  _impl_.infrasafetymsg_ = nullptr;
  return temp;
}
inline ::VISA::TestMessage00::InfraSafetyMsg::InfraSafetyMsg* PROTOBUF_NONNULL TestMessage00::_internal_mutable_infrasafetymsg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.infrasafetymsg_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::VISA::TestMessage00::InfraSafetyMsg::InfraSafetyMsg>(GetArena());
    _impl_.infrasafetymsg_ = reinterpret_cast<::VISA::TestMessage00::InfraSafetyMsg::InfraSafetyMsg*>(p);
  }
  return _impl_.infrasafetymsg_;
}
inline ::VISA::TestMessage00::InfraSafetyMsg::InfraSafetyMsg* PROTOBUF_NONNULL TestMessage00::mutable_infrasafetymsg()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::VISA::TestMessage00::InfraSafetyMsg::InfraSafetyMsg* _msg = _internal_mutable_infrasafetymsg();
  // @@protoc_insertion_point(field_mutable:VISA.TestMessage00.TestMessage00.infrasafetymsg)
  return _msg;
}
inline void TestMessage00::set_allocated_infrasafetymsg(::VISA::TestMessage00::InfraSafetyMsg::InfraSafetyMsg* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.infrasafetymsg_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.infrasafetymsg_ = reinterpret_cast<::VISA::TestMessage00::InfraSafetyMsg::InfraSafetyMsg*>(value);
  // @@protoc_insertion_point(field_set_allocated:VISA.TestMessage00.TestMessage00.infrasafetymsg)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace TestMessage00
}  // namespace VISA


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // visa_2ftestmessage00_2ftestmessage00_2eproto_2epb_2eh
