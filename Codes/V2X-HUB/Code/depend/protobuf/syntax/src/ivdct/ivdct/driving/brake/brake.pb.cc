// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ivdct/driving/brake/brake.proto
// Protobuf C++ Version: 6.31.1

#include "ivdct/driving/brake/brake.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace IVDCT {
namespace DRIVING {
namespace BRAKE {

inline constexpr Brake::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        pedal_pos_ct_{::uint64_t{0u}},
        temp_warning_ct_{::uint64_t{0u}},
        pedal_pos_{0u},
        temp_warning_{static_cast< ::IVDCT::DRIVING::BRAKE::Temp_warning >(0)},
        tcs_ct_{::uint64_t{0u}},
        abs_ct_{::uint64_t{0u}},
        tcs_{static_cast< ::IVDCT::DRIVING::BRAKE::Tcs >(0)},
        abs_{static_cast< ::IVDCT::DRIVING::BRAKE::Abs >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Brake::Brake(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Brake_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BrakeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BrakeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BrakeDefaultTypeInternal() {}
  union {
    Brake _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BrakeDefaultTypeInternal _Brake_default_instance_;
}  // namespace BRAKE
}  // namespace DRIVING
}  // namespace IVDCT
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_ivdct_2fdriving_2fbrake_2fbrake_2eproto[3];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_ivdct_2fdriving_2fbrake_2fbrake_2eproto = nullptr;
const ::uint32_t
    TableStruct_ivdct_2fdriving_2fbrake_2fbrake_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::IVDCT::DRIVING::BRAKE::Brake, _impl_._has_bits_),
        11, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::IVDCT::DRIVING::BRAKE::Brake, _impl_.pedal_pos_ct_),
        PROTOBUF_FIELD_OFFSET(::IVDCT::DRIVING::BRAKE::Brake, _impl_.pedal_pos_),
        PROTOBUF_FIELD_OFFSET(::IVDCT::DRIVING::BRAKE::Brake, _impl_.temp_warning_ct_),
        PROTOBUF_FIELD_OFFSET(::IVDCT::DRIVING::BRAKE::Brake, _impl_.temp_warning_),
        PROTOBUF_FIELD_OFFSET(::IVDCT::DRIVING::BRAKE::Brake, _impl_.tcs_ct_),
        PROTOBUF_FIELD_OFFSET(::IVDCT::DRIVING::BRAKE::Brake, _impl_.tcs_),
        PROTOBUF_FIELD_OFFSET(::IVDCT::DRIVING::BRAKE::Brake, _impl_.abs_ct_),
        PROTOBUF_FIELD_OFFSET(::IVDCT::DRIVING::BRAKE::Brake, _impl_.abs_),
        0,
        2,
        1,
        3,
        4,
        6,
        5,
        7,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::IVDCT::DRIVING::BRAKE::Brake)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::IVDCT::DRIVING::BRAKE::_Brake_default_instance_._instance,
};
const char descriptor_table_protodef_ivdct_2fdriving_2fbrake_2fbrake_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\037ivdct/driving/brake/brake.proto\022\023IVDCT"
    ".DRIVING.BRAKE\032\027validate/validate.proto\""
    "\374\003\n\005Brake\022-\n\014pedal_pos_ct\030\001 \001(\004B\022\372B\0172\r\030\377"
    "\377\377\377\377\377\377\377\377\001(\000H\000\210\001\001\022\"\n\tpedal_pos\030\002 \001(\rB\n\372B\007"
    "*\005\030\373\001(\000H\001\210\001\001\0220\n\017temp_warning_ct\030\003 \001(\004B\022\372"
    "B\0172\r\030\377\377\377\377\377\377\377\377\377\001(\000H\002\210\001\001\022F\n\014temp_warning\030\004"
    " \001(\0162!.IVDCT.DRIVING.BRAKE.Temp_warningB"
    "\010\372B\005\202\001\002\020\001H\003\210\001\001\022\'\n\006tcs_ct\030\005 \001(\004B\022\372B\0172\r\030\377\377"
    "\377\377\377\377\377\377\377\001(\000H\004\210\001\001\0224\n\003tcs\030\006 \001(\0162\030.IVDCT.DRI"
    "VING.BRAKE.TcsB\010\372B\005\202\001\002\020\001H\005\210\001\001\022\'\n\006abs_ct\030"
    "\007 \001(\004B\022\372B\0172\r\030\377\377\377\377\377\377\377\377\377\001(\000H\006\210\001\001\0224\n\003abs\030\010 "
    "\001(\0162\030.IVDCT.DRIVING.BRAKE.AbsB\010\372B\005\202\001\002\020\001H"
    "\007\210\001\001B\017\n\r_pedal_pos_ctB\014\n\n_pedal_posB\022\n\020_"
    "temp_warning_ctB\017\n\r_temp_warningB\t\n\007_tcs"
    "_ctB\006\n\004_tcsB\t\n\007_abs_ctB\006\n\004_abs*\253\001\n\014Temp_"
    "warning\022)\n%BRAKE_TEMP_WARNING_DEACTIVATE"
    "_WARNING\020\000\022*\n&BRAKE_TEMP_WARNING_ACTIVAT"
    "E_NO_WARNING\020\001\022$\n BRAKE_TEMP_WARNING_NOT"
    "_AVAILABLE\020\003\022\036\n\032BRAKE_TEMP_WARNING_UNKNO"
    "WN\020\004*}\n\003Tcs\022\020\n\014BRAKE_TCS_ON\020\000\022\021\n\rBRAKE_T"
    "CS_OFF\020\001\022\023\n\017BRAKE_TCS_ERROR\020\002\022%\n!BRAKE_T"
    "CS_NOT_INSTALLED_AVAILABLE\020\003\022\025\n\021BRAKE_TC"
    "S_UNKNOWN\020\004*u\n\003Abs\022\030\n\024BRAKE_ABS_DEACTIVA"
    "TE\020\000\022\026\n\022BRAKE_ABS_ACTIVATE\020\001\022%\n!BRAKE_AB"
    "S_NOT_INSTALLED_AVAILABLE\020\003\022\025\n\021BRAKE_ABS"
    "_UNKNOWN\020\004b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_ivdct_2fdriving_2fbrake_2fbrake_2eproto_deps[1] = {
        &::descriptor_table_validate_2fvalidate_2eproto,
};
static ::absl::once_flag descriptor_table_ivdct_2fdriving_2fbrake_2fbrake_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_ivdct_2fdriving_2fbrake_2fbrake_2eproto = {
    false,
    false,
    1018,
    descriptor_table_protodef_ivdct_2fdriving_2fbrake_2fbrake_2eproto,
    "ivdct/driving/brake/brake.proto",
    &descriptor_table_ivdct_2fdriving_2fbrake_2fbrake_2eproto_once,
    descriptor_table_ivdct_2fdriving_2fbrake_2fbrake_2eproto_deps,
    1,
    1,
    schemas,
    file_default_instances,
    TableStruct_ivdct_2fdriving_2fbrake_2fbrake_2eproto::offsets,
    file_level_enum_descriptors_ivdct_2fdriving_2fbrake_2fbrake_2eproto,
    file_level_service_descriptors_ivdct_2fdriving_2fbrake_2fbrake_2eproto,
};
namespace IVDCT {
namespace DRIVING {
namespace BRAKE {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Temp_warning_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ivdct_2fdriving_2fbrake_2fbrake_2eproto);
  return file_level_enum_descriptors_ivdct_2fdriving_2fbrake_2fbrake_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t Temp_warning_internal_data_[] = {
    131072u, 32u, 6u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Tcs_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ivdct_2fdriving_2fbrake_2fbrake_2eproto);
  return file_level_enum_descriptors_ivdct_2fdriving_2fbrake_2fbrake_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t Tcs_internal_data_[] = {
    327680u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Abs_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ivdct_2fdriving_2fbrake_2fbrake_2eproto);
  return file_level_enum_descriptors_ivdct_2fdriving_2fbrake_2fbrake_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t Abs_internal_data_[] = {
    131072u, 32u, 6u, };
// ===================================================================

class Brake::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Brake>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Brake, _impl_._has_bits_);
};

Brake::Brake(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Brake_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:IVDCT.DRIVING.BRAKE.Brake)
}
Brake::Brake(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Brake& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Brake_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE Brake::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Brake::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pedal_pos_ct_),
           0,
           offsetof(Impl_, abs_) -
               offsetof(Impl_, pedal_pos_ct_) +
               sizeof(Impl_::abs_));
}
Brake::~Brake() {
  // @@protoc_insertion_point(destructor:IVDCT.DRIVING.BRAKE.Brake)
  SharedDtor(*this);
}
inline void Brake::SharedDtor(MessageLite& self) {
  Brake& this_ = static_cast<Brake&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Brake::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Brake(arena);
}
constexpr auto Brake::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Brake),
                                            alignof(Brake));
}
constexpr auto Brake::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Brake_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Brake::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Brake>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Brake::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Brake>(), &Brake::ByteSizeLong,
              &Brake::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Brake, _impl_._cached_size_),
          false,
      },
      &Brake::kDescriptorMethods,
      &descriptor_table_ivdct_2fdriving_2fbrake_2fbrake_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Brake_class_data_ =
        Brake::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Brake::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Brake_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Brake_class_data_.tc_table);
  return Brake_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 0, 2>
Brake::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Brake, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Brake_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::IVDCT::DRIVING::BRAKE::Brake>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .IVDCT.DRIVING.BRAKE.Abs abs = 8 [(.validate.rules) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Brake, _impl_.abs_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(Brake, _impl_.abs_)}},
    // optional uint64 pedal_pos_ct = 1 [(.validate.rules) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Brake, _impl_.pedal_pos_ct_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Brake, _impl_.pedal_pos_ct_)}},
    // optional uint32 pedal_pos = 2 [(.validate.rules) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Brake, _impl_.pedal_pos_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(Brake, _impl_.pedal_pos_)}},
    // optional uint64 temp_warning_ct = 3 [(.validate.rules) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Brake, _impl_.temp_warning_ct_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(Brake, _impl_.temp_warning_ct_)}},
    // optional .IVDCT.DRIVING.BRAKE.Temp_warning temp_warning = 4 [(.validate.rules) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Brake, _impl_.temp_warning_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(Brake, _impl_.temp_warning_)}},
    // optional uint64 tcs_ct = 5 [(.validate.rules) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Brake, _impl_.tcs_ct_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(Brake, _impl_.tcs_ct_)}},
    // optional .IVDCT.DRIVING.BRAKE.Tcs tcs = 6 [(.validate.rules) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Brake, _impl_.tcs_), 6>(),
     {48, 6, 0, PROTOBUF_FIELD_OFFSET(Brake, _impl_.tcs_)}},
    // optional uint64 abs_ct = 7 [(.validate.rules) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Brake, _impl_.abs_ct_), 5>(),
     {56, 5, 0, PROTOBUF_FIELD_OFFSET(Brake, _impl_.abs_ct_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 pedal_pos_ct = 1 [(.validate.rules) = {
    {PROTOBUF_FIELD_OFFSET(Brake, _impl_.pedal_pos_ct_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 pedal_pos = 2 [(.validate.rules) = {
    {PROTOBUF_FIELD_OFFSET(Brake, _impl_.pedal_pos_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 temp_warning_ct = 3 [(.validate.rules) = {
    {PROTOBUF_FIELD_OFFSET(Brake, _impl_.temp_warning_ct_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional .IVDCT.DRIVING.BRAKE.Temp_warning temp_warning = 4 [(.validate.rules) = {
    {PROTOBUF_FIELD_OFFSET(Brake, _impl_.temp_warning_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // optional uint64 tcs_ct = 5 [(.validate.rules) = {
    {PROTOBUF_FIELD_OFFSET(Brake, _impl_.tcs_ct_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional .IVDCT.DRIVING.BRAKE.Tcs tcs = 6 [(.validate.rules) = {
    {PROTOBUF_FIELD_OFFSET(Brake, _impl_.tcs_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // optional uint64 abs_ct = 7 [(.validate.rules) = {
    {PROTOBUF_FIELD_OFFSET(Brake, _impl_.abs_ct_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional .IVDCT.DRIVING.BRAKE.Abs abs = 8 [(.validate.rules) = {
    {PROTOBUF_FIELD_OFFSET(Brake, _impl_.abs_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void Brake::Clear() {
// @@protoc_insertion_point(message_clear_start:IVDCT.DRIVING.BRAKE.Brake)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    ::memset(&_impl_.pedal_pos_ct_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.abs_) -
        reinterpret_cast<char*>(&_impl_.pedal_pos_ct_)) + sizeof(_impl_.abs_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Brake::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Brake& this_ = static_cast<const Brake&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Brake::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Brake& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:IVDCT.DRIVING.BRAKE.Brake)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint64 pedal_pos_ct = 1 [(.validate.rules) = {
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this_._internal_pedal_pos_ct(), target);
  }

  // optional uint32 pedal_pos = 2 [(.validate.rules) = {
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_pedal_pos(), target);
  }

  // optional uint64 temp_warning_ct = 3 [(.validate.rules) = {
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this_._internal_temp_warning_ct(), target);
  }

  // optional .IVDCT.DRIVING.BRAKE.Temp_warning temp_warning = 4 [(.validate.rules) = {
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this_._internal_temp_warning(), target);
  }

  // optional uint64 tcs_ct = 5 [(.validate.rules) = {
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        5, this_._internal_tcs_ct(), target);
  }

  // optional .IVDCT.DRIVING.BRAKE.Tcs tcs = 6 [(.validate.rules) = {
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        6, this_._internal_tcs(), target);
  }

  // optional uint64 abs_ct = 7 [(.validate.rules) = {
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        7, this_._internal_abs_ct(), target);
  }

  // optional .IVDCT.DRIVING.BRAKE.Abs abs = 8 [(.validate.rules) = {
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        8, this_._internal_abs(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IVDCT.DRIVING.BRAKE.Brake)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Brake::ByteSizeLong(const MessageLite& base) {
  const Brake& this_ = static_cast<const Brake&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Brake::ByteSizeLong() const {
  const Brake& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:IVDCT.DRIVING.BRAKE.Brake)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // optional uint64 pedal_pos_ct = 1 [(.validate.rules) = {
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_pedal_pos_ct());
    }
    // optional uint64 temp_warning_ct = 3 [(.validate.rules) = {
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_temp_warning_ct());
    }
    // optional uint32 pedal_pos = 2 [(.validate.rules) = {
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_pedal_pos());
    }
    // optional .IVDCT.DRIVING.BRAKE.Temp_warning temp_warning = 4 [(.validate.rules) = {
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_temp_warning());
    }
    // optional uint64 tcs_ct = 5 [(.validate.rules) = {
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_tcs_ct());
    }
    // optional uint64 abs_ct = 7 [(.validate.rules) = {
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_abs_ct());
    }
    // optional .IVDCT.DRIVING.BRAKE.Tcs tcs = 6 [(.validate.rules) = {
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_tcs());
    }
    // optional .IVDCT.DRIVING.BRAKE.Abs abs = 8 [(.validate.rules) = {
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_abs());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Brake::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Brake*>(&to_msg);
  auto& from = static_cast<const Brake&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:IVDCT.DRIVING.BRAKE.Brake)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.pedal_pos_ct_ = from._impl_.pedal_pos_ct_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.temp_warning_ct_ = from._impl_.temp_warning_ct_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.pedal_pos_ = from._impl_.pedal_pos_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.temp_warning_ = from._impl_.temp_warning_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.tcs_ct_ = from._impl_.tcs_ct_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.abs_ct_ = from._impl_.abs_ct_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.tcs_ = from._impl_.tcs_;
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_impl_.abs_ = from._impl_.abs_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Brake::CopyFrom(const Brake& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IVDCT.DRIVING.BRAKE.Brake)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Brake::InternalSwap(Brake* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Brake, _impl_.abs_)
      + sizeof(Brake::_impl_.abs_)
      - PROTOBUF_FIELD_OFFSET(Brake, _impl_.pedal_pos_ct_)>(
          reinterpret_cast<char*>(&_impl_.pedal_pos_ct_),
          reinterpret_cast<char*>(&other->_impl_.pedal_pos_ct_));
}

::google::protobuf::Metadata Brake::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace BRAKE
}  // namespace DRIVING
}  // namespace IVDCT
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_ivdct_2fdriving_2fbrake_2fbrake_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
