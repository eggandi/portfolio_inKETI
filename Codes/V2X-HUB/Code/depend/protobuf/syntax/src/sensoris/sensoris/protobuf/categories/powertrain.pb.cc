// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: sensoris/protobuf/categories/powertrain.proto
// Protobuf C++ Version: 6.31.1

#include "sensoris/protobuf/categories/powertrain.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace sensoris {
namespace protobuf {
namespace categories {
namespace powertrain {

inline constexpr EngineStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        envelope_{nullptr},
        ignition_status_{static_cast< ::sensoris::protobuf::categories::powertrain::EngineStatus_IgnitionStatus >(0)},
        powertrain_status_{static_cast< ::sensoris::protobuf::categories::powertrain::EngineStatus_PowertrainStatus >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR EngineStatus::EngineStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(EngineStatus_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EngineStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EngineStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EngineStatusDefaultTypeInternal() {}
  union {
    EngineStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EngineStatusDefaultTypeInternal _EngineStatus_default_instance_;

inline constexpr TransmissionStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        envelope_{nullptr},
        current_gear_{nullptr},
        gear_mode_{static_cast< ::sensoris::protobuf::categories::powertrain::TransmissionStatus_GearMode >(0)},
        drive_mode_{static_cast< ::sensoris::protobuf::categories::powertrain::TransmissionStatus_DriveMode >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR TransmissionStatus::TransmissionStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TransmissionStatus_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TransmissionStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransmissionStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransmissionStatusDefaultTypeInternal() {}
  union {
    TransmissionStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransmissionStatusDefaultTypeInternal _TransmissionStatus_default_instance_;

inline constexpr CruiseControlStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        envelope_{nullptr},
        selected_speed_{nullptr},
        selected_time_to_lead_vehicle_{nullptr},
        type_{static_cast< ::sensoris::protobuf::categories::powertrain::CruiseControlStatus_Type >(0)},
        status_{static_cast< ::sensoris::protobuf::types::base::SystemStatus >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR CruiseControlStatus::CruiseControlStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CruiseControlStatus_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CruiseControlStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CruiseControlStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CruiseControlStatusDefaultTypeInternal() {}
  union {
    CruiseControlStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CruiseControlStatusDefaultTypeInternal _CruiseControlStatus_default_instance_;

inline constexpr PowertrainCategory::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        engine_status_{},
        transmission_status_{},
        cruise_control_status_{},
        envelope_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PowertrainCategory::PowertrainCategory(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PowertrainCategory_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PowertrainCategoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PowertrainCategoryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PowertrainCategoryDefaultTypeInternal() {}
  union {
    PowertrainCategory _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PowertrainCategoryDefaultTypeInternal _PowertrainCategory_default_instance_;
}  // namespace powertrain
}  // namespace categories
}  // namespace protobuf
}  // namespace sensoris
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2fpowertrain_2eproto[5];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_sensoris_2fprotobuf_2fcategories_2fpowertrain_2eproto = nullptr;
const ::uint32_t
    TableStruct_sensoris_2fprotobuf_2fcategories_2fpowertrain_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::powertrain::EngineStatus, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::powertrain::EngineStatus, _impl_.envelope_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::powertrain::EngineStatus, _impl_.ignition_status_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::powertrain::EngineStatus, _impl_.powertrain_status_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::powertrain::TransmissionStatus, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::powertrain::TransmissionStatus, _impl_.envelope_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::powertrain::TransmissionStatus, _impl_.gear_mode_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::powertrain::TransmissionStatus, _impl_.drive_mode_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::powertrain::TransmissionStatus, _impl_.current_gear_),
        0,
        2,
        3,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::powertrain::CruiseControlStatus, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::powertrain::CruiseControlStatus, _impl_.envelope_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::powertrain::CruiseControlStatus, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::powertrain::CruiseControlStatus, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::powertrain::CruiseControlStatus, _impl_.selected_speed_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::powertrain::CruiseControlStatus, _impl_.selected_time_to_lead_vehicle_),
        0,
        3,
        4,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::powertrain::PowertrainCategory, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::powertrain::PowertrainCategory, _impl_.envelope_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::powertrain::PowertrainCategory, _impl_.engine_status_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::powertrain::PowertrainCategory, _impl_.transmission_status_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::powertrain::PowertrainCategory, _impl_.cruise_control_status_),
        0,
        ~0u,
        ~0u,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::sensoris::protobuf::categories::powertrain::EngineStatus)},
        {9, sizeof(::sensoris::protobuf::categories::powertrain::TransmissionStatus)},
        {20, sizeof(::sensoris::protobuf::categories::powertrain::CruiseControlStatus)},
        {33, sizeof(::sensoris::protobuf::categories::powertrain::PowertrainCategory)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::sensoris::protobuf::categories::powertrain::_EngineStatus_default_instance_._instance,
    &::sensoris::protobuf::categories::powertrain::_TransmissionStatus_default_instance_._instance,
    &::sensoris::protobuf::categories::powertrain::_CruiseControlStatus_default_instance_._instance,
    &::sensoris::protobuf::categories::powertrain::_PowertrainCategory_default_instance_._instance,
};
const char descriptor_table_protodef_sensoris_2fprotobuf_2fcategories_2fpowertrain_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n-sensoris/protobuf/categories/powertrai"
    "n.proto\022\'sensoris.protobuf.categories.po"
    "wertrain\032\"sensoris/protobuf/types/base.p"
    "roto\"\231\004\n\014EngineStatus\022=\n\010envelope\030\001 \001(\0132"
    "+.sensoris.protobuf.types.base.EventEnve"
    "lope\022]\n\017ignition_status\030\002 \001(\0162D.sensoris"
    ".protobuf.categories.powertrain.EngineSt"
    "atus.IgnitionStatus\022a\n\021powertrain_status"
    "\030\003 \001(\0162F.sensoris.protobuf.categories.po"
    "wertrain.EngineStatus.PowertrainStatus\"\221"
    "\001\n\016IgnitionStatus\022\033\n\027UNKNOWN_IGNITION_ST"
    "ATUS\020\000\022\021\n\rIGNITION_LOCK\020\001\022\020\n\014IGNITION_OF"
    "F\020\002\022\030\n\024IGNITION_ACCESSORIES\020\003\022\017\n\013IGNITIO"
    "N_ON\020\004\022\022\n\016IGNITION_START\020\005\"t\n\020Powertrain"
    "Status\022\035\n\031UNKNOWN_POWERTRAIN_STATUS\020\000\022\022\n"
    "\016POWERTRAIN_OFF\020\001\022\027\n\023POWERTRAIN_ECO_MODE"
    "\020\002\022\024\n\020POWERTRAIN_READY\020\003\"\374\003\n\022Transmissio"
    "nStatus\022=\n\010envelope\030\001 \001(\0132+.sensoris.pro"
    "tobuf.types.base.EventEnvelope\022W\n\tgear_m"
    "ode\030\002 \001(\0162D.sensoris.protobuf.categories"
    ".powertrain.TransmissionStatus.GearMode\022"
    "Y\n\ndrive_mode\030\003 \001(\0162E.sensoris.protobuf."
    "categories.powertrain.TransmissionStatus"
    ".DriveMode\022>\n\014current_gear\030\004 \001(\0132(.senso"
    "ris.protobuf.types.base.Int64Value\"\\\n\010Ge"
    "arMode\022\025\n\021UNKNOWN_GEAR_MODE\020\000\022\t\n\005DRIVE\020\001"
    "\022\n\n\006MANUAL\020\002\022\013\n\007REVERSE\020\003\022\010\n\004PARK\020\004\022\013\n\007N"
    "EUTRAL\020\005\"U\n\tDriveMode\022\026\n\022UNKNOWN_DRIVE_M"
    "ODE\020\000\022\007\n\003ECO\020\001\022\013\n\007COMFORT\020\002\022\t\n\005SPORT\020\003\022\017"
    "\n\013SUPER_SPORT\020\004\"\275\003\n\023CruiseControlStatus\022"
    "=\n\010envelope\030\001 \001(\0132+.sensoris.protobuf.ty"
    "pes.base.EventEnvelope\022O\n\004type\030\002 \001(\0162A.s"
    "ensoris.protobuf.categories.powertrain.C"
    "ruiseControlStatus.Type\022:\n\006status\030\003 \001(\0162"
    "*.sensoris.protobuf.types.base.SystemSta"
    "tus\022F\n\016selected_speed\030\004 \001(\0132(.sensoris.p"
    "rotobuf.types.base.Int64ValueB\004\210\265\030\001\022U\n\035s"
    "elected_time_to_lead_vehicle\030\005 \001(\0132(.sen"
    "soris.protobuf.types.base.Int64ValueB\004\210\265"
    "\030\001\";\n\004Type\022\020\n\014UNKNOWN_TYPE\020\000\022\t\n\005SPEED\020\001\022"
    "\026\n\022SPEED_AND_DISTANCE\020\002\"\333\002\n\022PowertrainCa"
    "tegory\022@\n\010envelope\030\001 \001(\0132..sensoris.prot"
    "obuf.types.base.CategoryEnvelope\022L\n\rengi"
    "ne_status\030\002 \003(\01325.sensoris.protobuf.cate"
    "gories.powertrain.EngineStatus\022X\n\023transm"
    "ission_status\030\003 \003(\0132;.sensoris.protobuf."
    "categories.powertrain.TransmissionStatus"
    "\022[\n\025cruise_control_status\030\004 \003(\0132<.sensor"
    "is.protobuf.categories.powertrain.Cruise"
    "ControlStatusBw\n\"org.sensoris.categories"
    ".powertrainB\032SensorisPowertrainCategoryP"
    "\001Z0sensoris.org/specification/categories"
    "/powertrain\370\001\001b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_sensoris_2fprotobuf_2fcategories_2fpowertrain_2eproto_deps[1] = {
        &::descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
};
static ::absl::once_flag descriptor_table_sensoris_2fprotobuf_2fcategories_2fpowertrain_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_sensoris_2fprotobuf_2fcategories_2fpowertrain_2eproto = {
    false,
    false,
    2102,
    descriptor_table_protodef_sensoris_2fprotobuf_2fcategories_2fpowertrain_2eproto,
    "sensoris/protobuf/categories/powertrain.proto",
    &descriptor_table_sensoris_2fprotobuf_2fcategories_2fpowertrain_2eproto_once,
    descriptor_table_sensoris_2fprotobuf_2fcategories_2fpowertrain_2eproto_deps,
    1,
    4,
    schemas,
    file_default_instances,
    TableStruct_sensoris_2fprotobuf_2fcategories_2fpowertrain_2eproto::offsets,
    file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2fpowertrain_2eproto,
    file_level_service_descriptors_sensoris_2fprotobuf_2fcategories_2fpowertrain_2eproto,
};
namespace sensoris {
namespace protobuf {
namespace categories {
namespace powertrain {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL EngineStatus_IgnitionStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensoris_2fprotobuf_2fcategories_2fpowertrain_2eproto);
  return file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2fpowertrain_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t EngineStatus_IgnitionStatus_internal_data_[] = {
    393216u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL EngineStatus_PowertrainStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensoris_2fprotobuf_2fcategories_2fpowertrain_2eproto);
  return file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2fpowertrain_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t EngineStatus_PowertrainStatus_internal_data_[] = {
    262144u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL TransmissionStatus_GearMode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensoris_2fprotobuf_2fcategories_2fpowertrain_2eproto);
  return file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2fpowertrain_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t TransmissionStatus_GearMode_internal_data_[] = {
    393216u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL TransmissionStatus_DriveMode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensoris_2fprotobuf_2fcategories_2fpowertrain_2eproto);
  return file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2fpowertrain_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t TransmissionStatus_DriveMode_internal_data_[] = {
    327680u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL CruiseControlStatus_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensoris_2fprotobuf_2fcategories_2fpowertrain_2eproto);
  return file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2fpowertrain_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t CruiseControlStatus_Type_internal_data_[] = {
    196608u, 0u, };
// ===================================================================

class EngineStatus::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<EngineStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EngineStatus, _impl_._has_bits_);
};

void EngineStatus::clear_envelope() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.envelope_ != nullptr) _impl_.envelope_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
EngineStatus::EngineStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EngineStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.powertrain.EngineStatus)
}
PROTOBUF_NDEBUG_INLINE EngineStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::categories::powertrain::EngineStatus& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

EngineStatus::EngineStatus(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const EngineStatus& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EngineStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EngineStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.envelope_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.envelope_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ignition_status_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, ignition_status_),
           offsetof(Impl_, powertrain_status_) -
               offsetof(Impl_, ignition_status_) +
               sizeof(Impl_::powertrain_status_));

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.powertrain.EngineStatus)
}
PROTOBUF_NDEBUG_INLINE EngineStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void EngineStatus::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, envelope_),
           0,
           offsetof(Impl_, powertrain_status_) -
               offsetof(Impl_, envelope_) +
               sizeof(Impl_::powertrain_status_));
}
EngineStatus::~EngineStatus() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.powertrain.EngineStatus)
  SharedDtor(*this);
}
inline void EngineStatus::SharedDtor(MessageLite& self) {
  EngineStatus& this_ = static_cast<EngineStatus&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.envelope_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL EngineStatus::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EngineStatus(arena);
}
constexpr auto EngineStatus::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(EngineStatus),
                                            alignof(EngineStatus));
}
constexpr auto EngineStatus::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EngineStatus_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EngineStatus::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EngineStatus>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EngineStatus::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<EngineStatus>(), &EngineStatus::ByteSizeLong,
              &EngineStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EngineStatus, _impl_._cached_size_),
          false,
      },
      &EngineStatus::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2fpowertrain_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EngineStatus_class_data_ =
        EngineStatus::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
EngineStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EngineStatus_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EngineStatus_class_data_.tc_table);
  return EngineStatus_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2>
EngineStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EngineStatus, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    EngineStatus_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::powertrain::EngineStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EngineStatus, _impl_.envelope_)}},
    // .sensoris.protobuf.categories.powertrain.EngineStatus.IgnitionStatus ignition_status = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EngineStatus, _impl_.ignition_status_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(EngineStatus, _impl_.ignition_status_)}},
    // .sensoris.protobuf.categories.powertrain.EngineStatus.PowertrainStatus powertrain_status = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EngineStatus, _impl_.powertrain_status_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(EngineStatus, _impl_.powertrain_status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    {PROTOBUF_FIELD_OFFSET(EngineStatus, _impl_.envelope_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.categories.powertrain.EngineStatus.IgnitionStatus ignition_status = 2;
    {PROTOBUF_FIELD_OFFSET(EngineStatus, _impl_.ignition_status_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .sensoris.protobuf.categories.powertrain.EngineStatus.PowertrainStatus powertrain_status = 3;
    {PROTOBUF_FIELD_OFFSET(EngineStatus, _impl_.powertrain_status_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::EventEnvelope>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void EngineStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.powertrain.EngineStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.envelope_ != nullptr);
    _impl_.envelope_->Clear();
  }
  if ((cached_has_bits & 0x00000006u) != 0) {
    ::memset(&_impl_.ignition_status_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.powertrain_status_) -
        reinterpret_cast<char*>(&_impl_.ignition_status_)) + sizeof(_impl_.powertrain_status_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL EngineStatus::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const EngineStatus& this_ = static_cast<const EngineStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL EngineStatus::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const EngineStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.powertrain.EngineStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.envelope_, this_._impl_.envelope_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.categories.powertrain.EngineStatus.IgnitionStatus ignition_status = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    if (this_._internal_ignition_status() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_ignition_status(), target);
    }
  }

  // .sensoris.protobuf.categories.powertrain.EngineStatus.PowertrainStatus powertrain_status = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (this_._internal_powertrain_status() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          3, this_._internal_powertrain_status(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.powertrain.EngineStatus)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EngineStatus::ByteSizeLong(const MessageLite& base) {
  const EngineStatus& this_ = static_cast<const EngineStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EngineStatus::ByteSizeLong() const {
  const EngineStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.powertrain.EngineStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.envelope_);
    }
    // .sensoris.protobuf.categories.powertrain.EngineStatus.IgnitionStatus ignition_status = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_ignition_status() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_ignition_status());
      }
    }
    // .sensoris.protobuf.categories.powertrain.EngineStatus.PowertrainStatus powertrain_status = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_powertrain_status() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_powertrain_status());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void EngineStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EngineStatus*>(&to_msg);
  auto& from = static_cast<const EngineStatus&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.powertrain.EngineStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.envelope_ != nullptr);
      if (_this->_impl_.envelope_ == nullptr) {
        _this->_impl_.envelope_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.envelope_);
      } else {
        _this->_impl_.envelope_->MergeFrom(*from._impl_.envelope_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_ignition_status() != 0) {
        _this->_impl_.ignition_status_ = from._impl_.ignition_status_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_powertrain_status() != 0) {
        _this->_impl_.powertrain_status_ = from._impl_.powertrain_status_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EngineStatus::CopyFrom(const EngineStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.powertrain.EngineStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EngineStatus::InternalSwap(EngineStatus* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EngineStatus, _impl_.powertrain_status_)
      + sizeof(EngineStatus::_impl_.powertrain_status_)
      - PROTOBUF_FIELD_OFFSET(EngineStatus, _impl_.envelope_)>(
          reinterpret_cast<char*>(&_impl_.envelope_),
          reinterpret_cast<char*>(&other->_impl_.envelope_));
}

::google::protobuf::Metadata EngineStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TransmissionStatus::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TransmissionStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TransmissionStatus, _impl_._has_bits_);
};

void TransmissionStatus::clear_envelope() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.envelope_ != nullptr) _impl_.envelope_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TransmissionStatus::clear_current_gear() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.current_gear_ != nullptr) _impl_.current_gear_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
TransmissionStatus::TransmissionStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TransmissionStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.powertrain.TransmissionStatus)
}
PROTOBUF_NDEBUG_INLINE TransmissionStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::categories::powertrain::TransmissionStatus& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

TransmissionStatus::TransmissionStatus(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TransmissionStatus& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TransmissionStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TransmissionStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.envelope_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.envelope_)
                : nullptr;
  _impl_.current_gear_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.current_gear_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gear_mode_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, gear_mode_),
           offsetof(Impl_, drive_mode_) -
               offsetof(Impl_, gear_mode_) +
               sizeof(Impl_::drive_mode_));

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.powertrain.TransmissionStatus)
}
PROTOBUF_NDEBUG_INLINE TransmissionStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void TransmissionStatus::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, envelope_),
           0,
           offsetof(Impl_, drive_mode_) -
               offsetof(Impl_, envelope_) +
               sizeof(Impl_::drive_mode_));
}
TransmissionStatus::~TransmissionStatus() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.powertrain.TransmissionStatus)
  SharedDtor(*this);
}
inline void TransmissionStatus::SharedDtor(MessageLite& self) {
  TransmissionStatus& this_ = static_cast<TransmissionStatus&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.envelope_;
  delete this_._impl_.current_gear_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TransmissionStatus::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TransmissionStatus(arena);
}
constexpr auto TransmissionStatus::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TransmissionStatus),
                                            alignof(TransmissionStatus));
}
constexpr auto TransmissionStatus::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TransmissionStatus_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TransmissionStatus::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TransmissionStatus>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TransmissionStatus::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TransmissionStatus>(), &TransmissionStatus::ByteSizeLong,
              &TransmissionStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TransmissionStatus, _impl_._cached_size_),
          false,
      },
      &TransmissionStatus::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2fpowertrain_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TransmissionStatus_class_data_ =
        TransmissionStatus::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TransmissionStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TransmissionStatus_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TransmissionStatus_class_data_.tc_table);
  return TransmissionStatus_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 0, 2>
TransmissionStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TransmissionStatus, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TransmissionStatus_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::powertrain::TransmissionStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .sensoris.protobuf.types.base.Int64Value current_gear = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(TransmissionStatus, _impl_.current_gear_)}},
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TransmissionStatus, _impl_.envelope_)}},
    // .sensoris.protobuf.categories.powertrain.TransmissionStatus.GearMode gear_mode = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TransmissionStatus, _impl_.gear_mode_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(TransmissionStatus, _impl_.gear_mode_)}},
    // .sensoris.protobuf.categories.powertrain.TransmissionStatus.DriveMode drive_mode = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TransmissionStatus, _impl_.drive_mode_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(TransmissionStatus, _impl_.drive_mode_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    {PROTOBUF_FIELD_OFFSET(TransmissionStatus, _impl_.envelope_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.categories.powertrain.TransmissionStatus.GearMode gear_mode = 2;
    {PROTOBUF_FIELD_OFFSET(TransmissionStatus, _impl_.gear_mode_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .sensoris.protobuf.categories.powertrain.TransmissionStatus.DriveMode drive_mode = 3;
    {PROTOBUF_FIELD_OFFSET(TransmissionStatus, _impl_.drive_mode_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .sensoris.protobuf.types.base.Int64Value current_gear = 4;
    {PROTOBUF_FIELD_OFFSET(TransmissionStatus, _impl_.current_gear_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::EventEnvelope>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64Value>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void TransmissionStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.powertrain.TransmissionStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.envelope_ != nullptr);
      _impl_.envelope_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.current_gear_ != nullptr);
      _impl_.current_gear_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000000cu) != 0) {
    ::memset(&_impl_.gear_mode_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.drive_mode_) -
        reinterpret_cast<char*>(&_impl_.gear_mode_)) + sizeof(_impl_.drive_mode_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TransmissionStatus::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TransmissionStatus& this_ = static_cast<const TransmissionStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TransmissionStatus::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TransmissionStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.powertrain.TransmissionStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.envelope_, this_._impl_.envelope_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.categories.powertrain.TransmissionStatus.GearMode gear_mode = 2;
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (this_._internal_gear_mode() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_gear_mode(), target);
    }
  }

  // .sensoris.protobuf.categories.powertrain.TransmissionStatus.DriveMode drive_mode = 3;
  if ((cached_has_bits & 0x00000008u) != 0) {
    if (this_._internal_drive_mode() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          3, this_._internal_drive_mode(), target);
    }
  }

  // .sensoris.protobuf.types.base.Int64Value current_gear = 4;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.current_gear_, this_._impl_.current_gear_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.powertrain.TransmissionStatus)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TransmissionStatus::ByteSizeLong(const MessageLite& base) {
  const TransmissionStatus& this_ = static_cast<const TransmissionStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TransmissionStatus::ByteSizeLong() const {
  const TransmissionStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.powertrain.TransmissionStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.envelope_);
    }
    // .sensoris.protobuf.types.base.Int64Value current_gear = 4;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.current_gear_);
    }
    // .sensoris.protobuf.categories.powertrain.TransmissionStatus.GearMode gear_mode = 2;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_gear_mode() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_gear_mode());
      }
    }
    // .sensoris.protobuf.categories.powertrain.TransmissionStatus.DriveMode drive_mode = 3;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_drive_mode() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_drive_mode());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TransmissionStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TransmissionStatus*>(&to_msg);
  auto& from = static_cast<const TransmissionStatus&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.powertrain.TransmissionStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.envelope_ != nullptr);
      if (_this->_impl_.envelope_ == nullptr) {
        _this->_impl_.envelope_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.envelope_);
      } else {
        _this->_impl_.envelope_->MergeFrom(*from._impl_.envelope_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.current_gear_ != nullptr);
      if (_this->_impl_.current_gear_ == nullptr) {
        _this->_impl_.current_gear_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.current_gear_);
      } else {
        _this->_impl_.current_gear_->MergeFrom(*from._impl_.current_gear_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_gear_mode() != 0) {
        _this->_impl_.gear_mode_ = from._impl_.gear_mode_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_drive_mode() != 0) {
        _this->_impl_.drive_mode_ = from._impl_.drive_mode_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TransmissionStatus::CopyFrom(const TransmissionStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.powertrain.TransmissionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TransmissionStatus::InternalSwap(TransmissionStatus* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TransmissionStatus, _impl_.drive_mode_)
      + sizeof(TransmissionStatus::_impl_.drive_mode_)
      - PROTOBUF_FIELD_OFFSET(TransmissionStatus, _impl_.envelope_)>(
          reinterpret_cast<char*>(&_impl_.envelope_),
          reinterpret_cast<char*>(&other->_impl_.envelope_));
}

::google::protobuf::Metadata TransmissionStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CruiseControlStatus::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CruiseControlStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CruiseControlStatus, _impl_._has_bits_);
};

void CruiseControlStatus::clear_envelope() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.envelope_ != nullptr) _impl_.envelope_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CruiseControlStatus::clear_selected_speed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.selected_speed_ != nullptr) _impl_.selected_speed_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void CruiseControlStatus::clear_selected_time_to_lead_vehicle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.selected_time_to_lead_vehicle_ != nullptr) _impl_.selected_time_to_lead_vehicle_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
CruiseControlStatus::CruiseControlStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CruiseControlStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.powertrain.CruiseControlStatus)
}
PROTOBUF_NDEBUG_INLINE CruiseControlStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::categories::powertrain::CruiseControlStatus& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CruiseControlStatus::CruiseControlStatus(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CruiseControlStatus& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CruiseControlStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CruiseControlStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.envelope_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.envelope_)
                : nullptr;
  _impl_.selected_speed_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.selected_speed_)
                : nullptr;
  _impl_.selected_time_to_lead_vehicle_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.selected_time_to_lead_vehicle_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, type_),
           offsetof(Impl_, status_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::status_));

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.powertrain.CruiseControlStatus)
}
PROTOBUF_NDEBUG_INLINE CruiseControlStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CruiseControlStatus::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, envelope_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, envelope_) +
               sizeof(Impl_::status_));
}
CruiseControlStatus::~CruiseControlStatus() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.powertrain.CruiseControlStatus)
  SharedDtor(*this);
}
inline void CruiseControlStatus::SharedDtor(MessageLite& self) {
  CruiseControlStatus& this_ = static_cast<CruiseControlStatus&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.envelope_;
  delete this_._impl_.selected_speed_;
  delete this_._impl_.selected_time_to_lead_vehicle_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CruiseControlStatus::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CruiseControlStatus(arena);
}
constexpr auto CruiseControlStatus::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CruiseControlStatus),
                                            alignof(CruiseControlStatus));
}
constexpr auto CruiseControlStatus::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CruiseControlStatus_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CruiseControlStatus::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CruiseControlStatus>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CruiseControlStatus::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CruiseControlStatus>(), &CruiseControlStatus::ByteSizeLong,
              &CruiseControlStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CruiseControlStatus, _impl_._cached_size_),
          false,
      },
      &CruiseControlStatus::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2fpowertrain_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CruiseControlStatus_class_data_ =
        CruiseControlStatus::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CruiseControlStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CruiseControlStatus_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CruiseControlStatus_class_data_.tc_table);
  return CruiseControlStatus_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 3, 0, 2>
CruiseControlStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CruiseControlStatus, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CruiseControlStatus_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::powertrain::CruiseControlStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CruiseControlStatus, _impl_.envelope_)}},
    // .sensoris.protobuf.categories.powertrain.CruiseControlStatus.Type type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CruiseControlStatus, _impl_.type_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(CruiseControlStatus, _impl_.type_)}},
    // .sensoris.protobuf.types.base.SystemStatus status = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CruiseControlStatus, _impl_.status_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(CruiseControlStatus, _impl_.status_)}},
    // .sensoris.protobuf.types.base.Int64Value selected_speed = 4 [(.sensoris.protobuf.types.base.exponent) = 1];
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(CruiseControlStatus, _impl_.selected_speed_)}},
    // .sensoris.protobuf.types.base.Int64Value selected_time_to_lead_vehicle = 5 [(.sensoris.protobuf.types.base.exponent) = 1];
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 2, PROTOBUF_FIELD_OFFSET(CruiseControlStatus, _impl_.selected_time_to_lead_vehicle_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    {PROTOBUF_FIELD_OFFSET(CruiseControlStatus, _impl_.envelope_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.categories.powertrain.CruiseControlStatus.Type type = 2;
    {PROTOBUF_FIELD_OFFSET(CruiseControlStatus, _impl_.type_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .sensoris.protobuf.types.base.SystemStatus status = 3;
    {PROTOBUF_FIELD_OFFSET(CruiseControlStatus, _impl_.status_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .sensoris.protobuf.types.base.Int64Value selected_speed = 4 [(.sensoris.protobuf.types.base.exponent) = 1];
    {PROTOBUF_FIELD_OFFSET(CruiseControlStatus, _impl_.selected_speed_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.Int64Value selected_time_to_lead_vehicle = 5 [(.sensoris.protobuf.types.base.exponent) = 1];
    {PROTOBUF_FIELD_OFFSET(CruiseControlStatus, _impl_.selected_time_to_lead_vehicle_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::EventEnvelope>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64Value>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64Value>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CruiseControlStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.powertrain.CruiseControlStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.envelope_ != nullptr);
      _impl_.envelope_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.selected_speed_ != nullptr);
      _impl_.selected_speed_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.selected_time_to_lead_vehicle_ != nullptr);
      _impl_.selected_time_to_lead_vehicle_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000018u) != 0) {
    ::memset(&_impl_.type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.status_) -
        reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.status_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CruiseControlStatus::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CruiseControlStatus& this_ = static_cast<const CruiseControlStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CruiseControlStatus::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CruiseControlStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.powertrain.CruiseControlStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.envelope_, this_._impl_.envelope_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.categories.powertrain.CruiseControlStatus.Type type = 2;
  if ((cached_has_bits & 0x00000008u) != 0) {
    if (this_._internal_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_type(), target);
    }
  }

  // .sensoris.protobuf.types.base.SystemStatus status = 3;
  if ((cached_has_bits & 0x00000010u) != 0) {
    if (this_._internal_status() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          3, this_._internal_status(), target);
    }
  }

  // .sensoris.protobuf.types.base.Int64Value selected_speed = 4 [(.sensoris.protobuf.types.base.exponent) = 1];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.selected_speed_, this_._impl_.selected_speed_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.types.base.Int64Value selected_time_to_lead_vehicle = 5 [(.sensoris.protobuf.types.base.exponent) = 1];
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.selected_time_to_lead_vehicle_, this_._impl_.selected_time_to_lead_vehicle_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.powertrain.CruiseControlStatus)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CruiseControlStatus::ByteSizeLong(const MessageLite& base) {
  const CruiseControlStatus& this_ = static_cast<const CruiseControlStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CruiseControlStatus::ByteSizeLong() const {
  const CruiseControlStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.powertrain.CruiseControlStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.envelope_);
    }
    // .sensoris.protobuf.types.base.Int64Value selected_speed = 4 [(.sensoris.protobuf.types.base.exponent) = 1];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.selected_speed_);
    }
    // .sensoris.protobuf.types.base.Int64Value selected_time_to_lead_vehicle = 5 [(.sensoris.protobuf.types.base.exponent) = 1];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.selected_time_to_lead_vehicle_);
    }
    // .sensoris.protobuf.categories.powertrain.CruiseControlStatus.Type type = 2;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
      }
    }
    // .sensoris.protobuf.types.base.SystemStatus status = 3;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_status() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CruiseControlStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CruiseControlStatus*>(&to_msg);
  auto& from = static_cast<const CruiseControlStatus&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.powertrain.CruiseControlStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.envelope_ != nullptr);
      if (_this->_impl_.envelope_ == nullptr) {
        _this->_impl_.envelope_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.envelope_);
      } else {
        _this->_impl_.envelope_->MergeFrom(*from._impl_.envelope_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.selected_speed_ != nullptr);
      if (_this->_impl_.selected_speed_ == nullptr) {
        _this->_impl_.selected_speed_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.selected_speed_);
      } else {
        _this->_impl_.selected_speed_->MergeFrom(*from._impl_.selected_speed_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.selected_time_to_lead_vehicle_ != nullptr);
      if (_this->_impl_.selected_time_to_lead_vehicle_ == nullptr) {
        _this->_impl_.selected_time_to_lead_vehicle_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.selected_time_to_lead_vehicle_);
      } else {
        _this->_impl_.selected_time_to_lead_vehicle_->MergeFrom(*from._impl_.selected_time_to_lead_vehicle_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_type() != 0) {
        _this->_impl_.type_ = from._impl_.type_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_status() != 0) {
        _this->_impl_.status_ = from._impl_.status_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CruiseControlStatus::CopyFrom(const CruiseControlStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.powertrain.CruiseControlStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CruiseControlStatus::InternalSwap(CruiseControlStatus* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CruiseControlStatus, _impl_.status_)
      + sizeof(CruiseControlStatus::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(CruiseControlStatus, _impl_.envelope_)>(
          reinterpret_cast<char*>(&_impl_.envelope_),
          reinterpret_cast<char*>(&other->_impl_.envelope_));
}

::google::protobuf::Metadata CruiseControlStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PowertrainCategory::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<PowertrainCategory>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PowertrainCategory, _impl_._has_bits_);
};

void PowertrainCategory::clear_envelope() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.envelope_ != nullptr) _impl_.envelope_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
PowertrainCategory::PowertrainCategory(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PowertrainCategory_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.powertrain.PowertrainCategory)
}
PROTOBUF_NDEBUG_INLINE PowertrainCategory::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::categories::powertrain::PowertrainCategory& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        engine_status_{visibility, arena, from.engine_status_},
        transmission_status_{visibility, arena, from.transmission_status_},
        cruise_control_status_{visibility, arena, from.cruise_control_status_} {}

PowertrainCategory::PowertrainCategory(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const PowertrainCategory& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PowertrainCategory_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PowertrainCategory* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.envelope_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.envelope_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.powertrain.PowertrainCategory)
}
PROTOBUF_NDEBUG_INLINE PowertrainCategory::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        engine_status_{visibility, arena},
        transmission_status_{visibility, arena},
        cruise_control_status_{visibility, arena} {}

inline void PowertrainCategory::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.envelope_ = {};
}
PowertrainCategory::~PowertrainCategory() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.powertrain.PowertrainCategory)
  SharedDtor(*this);
}
inline void PowertrainCategory::SharedDtor(MessageLite& self) {
  PowertrainCategory& this_ = static_cast<PowertrainCategory&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.envelope_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PowertrainCategory::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PowertrainCategory(arena);
}
constexpr auto PowertrainCategory::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PowertrainCategory, _impl_.engine_status_) +
          decltype(PowertrainCategory::_impl_.engine_status_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PowertrainCategory, _impl_.transmission_status_) +
          decltype(PowertrainCategory::_impl_.transmission_status_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PowertrainCategory, _impl_.cruise_control_status_) +
          decltype(PowertrainCategory::_impl_.cruise_control_status_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(PowertrainCategory), alignof(PowertrainCategory), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PowertrainCategory::PlacementNew_,
                                 sizeof(PowertrainCategory),
                                 alignof(PowertrainCategory));
  }
}
constexpr auto PowertrainCategory::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PowertrainCategory_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PowertrainCategory::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PowertrainCategory>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PowertrainCategory::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PowertrainCategory>(), &PowertrainCategory::ByteSizeLong,
              &PowertrainCategory::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PowertrainCategory, _impl_._cached_size_),
          false,
      },
      &PowertrainCategory::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2fpowertrain_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull PowertrainCategory_class_data_ =
        PowertrainCategory::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
PowertrainCategory::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PowertrainCategory_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PowertrainCategory_class_data_.tc_table);
  return PowertrainCategory_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 4, 0, 2>
PowertrainCategory::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PowertrainCategory, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    PowertrainCategory_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::powertrain::PowertrainCategory>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .sensoris.protobuf.categories.powertrain.CruiseControlStatus cruise_control_status = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 3, PROTOBUF_FIELD_OFFSET(PowertrainCategory, _impl_.cruise_control_status_)}},
    // .sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PowertrainCategory, _impl_.envelope_)}},
    // repeated .sensoris.protobuf.categories.powertrain.EngineStatus engine_status = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(PowertrainCategory, _impl_.engine_status_)}},
    // repeated .sensoris.protobuf.categories.powertrain.TransmissionStatus transmission_status = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(PowertrainCategory, _impl_.transmission_status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
    {PROTOBUF_FIELD_OFFSET(PowertrainCategory, _impl_.envelope_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .sensoris.protobuf.categories.powertrain.EngineStatus engine_status = 2;
    {PROTOBUF_FIELD_OFFSET(PowertrainCategory, _impl_.engine_status_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .sensoris.protobuf.categories.powertrain.TransmissionStatus transmission_status = 3;
    {PROTOBUF_FIELD_OFFSET(PowertrainCategory, _impl_.transmission_status_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .sensoris.protobuf.categories.powertrain.CruiseControlStatus cruise_control_status = 4;
    {PROTOBUF_FIELD_OFFSET(PowertrainCategory, _impl_.cruise_control_status_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::CategoryEnvelope>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::powertrain::EngineStatus>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::powertrain::TransmissionStatus>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::powertrain::CruiseControlStatus>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void PowertrainCategory::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.powertrain.PowertrainCategory)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.engine_status_.Clear();
  _impl_.transmission_status_.Clear();
  _impl_.cruise_control_status_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.envelope_ != nullptr);
    _impl_.envelope_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PowertrainCategory::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PowertrainCategory& this_ = static_cast<const PowertrainCategory&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PowertrainCategory::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PowertrainCategory& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.powertrain.PowertrainCategory)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.envelope_, this_._impl_.envelope_->GetCachedSize(), target,
        stream);
  }

  // repeated .sensoris.protobuf.categories.powertrain.EngineStatus engine_status = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_engine_status_size());
       i < n; i++) {
    const auto& repfield = this_._internal_engine_status().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .sensoris.protobuf.categories.powertrain.TransmissionStatus transmission_status = 3;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_transmission_status_size());
       i < n; i++) {
    const auto& repfield = this_._internal_transmission_status().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .sensoris.protobuf.categories.powertrain.CruiseControlStatus cruise_control_status = 4;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_cruise_control_status_size());
       i < n; i++) {
    const auto& repfield = this_._internal_cruise_control_status().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.powertrain.PowertrainCategory)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PowertrainCategory::ByteSizeLong(const MessageLite& base) {
  const PowertrainCategory& this_ = static_cast<const PowertrainCategory&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PowertrainCategory::ByteSizeLong() const {
  const PowertrainCategory& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.powertrain.PowertrainCategory)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .sensoris.protobuf.categories.powertrain.EngineStatus engine_status = 2;
    {
      total_size += 1UL * this_._internal_engine_status_size();
      for (const auto& msg : this_._internal_engine_status()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .sensoris.protobuf.categories.powertrain.TransmissionStatus transmission_status = 3;
    {
      total_size += 1UL * this_._internal_transmission_status_size();
      for (const auto& msg : this_._internal_transmission_status()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .sensoris.protobuf.categories.powertrain.CruiseControlStatus cruise_control_status = 4;
    {
      total_size += 1UL * this_._internal_cruise_control_status_size();
      for (const auto& msg : this_._internal_cruise_control_status()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // .sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.envelope_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PowertrainCategory::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PowertrainCategory*>(&to_msg);
  auto& from = static_cast<const PowertrainCategory&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.powertrain.PowertrainCategory)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_engine_status()->MergeFrom(
      from._internal_engine_status());
  _this->_internal_mutable_transmission_status()->MergeFrom(
      from._internal_transmission_status());
  _this->_internal_mutable_cruise_control_status()->MergeFrom(
      from._internal_cruise_control_status());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.envelope_ != nullptr);
    if (_this->_impl_.envelope_ == nullptr) {
      _this->_impl_.envelope_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.envelope_);
    } else {
      _this->_impl_.envelope_->MergeFrom(*from._impl_.envelope_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PowertrainCategory::CopyFrom(const PowertrainCategory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.powertrain.PowertrainCategory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PowertrainCategory::InternalSwap(PowertrainCategory* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.engine_status_.InternalSwap(&other->_impl_.engine_status_);
  _impl_.transmission_status_.InternalSwap(&other->_impl_.transmission_status_);
  _impl_.cruise_control_status_.InternalSwap(&other->_impl_.cruise_control_status_);
  swap(_impl_.envelope_, other->_impl_.envelope_);
}

::google::protobuf::Metadata PowertrainCategory::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace powertrain
}  // namespace categories
}  // namespace protobuf
}  // namespace sensoris
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_sensoris_2fprotobuf_2fcategories_2fpowertrain_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
