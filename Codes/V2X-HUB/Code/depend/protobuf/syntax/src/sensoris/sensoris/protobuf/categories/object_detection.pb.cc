// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: sensoris/protobuf/categories/object_detection.proto
// Protobuf C++ Version: 6.31.1

#include "sensoris/protobuf/categories/object_detection.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace sensoris {
namespace protobuf {
namespace categories {
namespace objectdetection {

inline constexpr StaticObject_TypeAndConfidence::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        confidence_{nullptr},
        type_{static_cast< ::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence_Type >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR StaticObject_TypeAndConfidence::StaticObject_TypeAndConfidence(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(StaticObject_TypeAndConfidence_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StaticObject_TypeAndConfidenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StaticObject_TypeAndConfidenceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StaticObject_TypeAndConfidenceDefaultTypeInternal() {}
  union {
    StaticObject_TypeAndConfidence _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StaticObject_TypeAndConfidenceDefaultTypeInternal _StaticObject_TypeAndConfidence_default_instance_;

inline constexpr StaticObject_SurfaceTypeAndConfidence::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        confidence_{nullptr},
        type_{static_cast< ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence_Type >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR StaticObject_SurfaceTypeAndConfidence::StaticObject_SurfaceTypeAndConfidence(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(StaticObject_SurfaceTypeAndConfidence_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StaticObject_SurfaceTypeAndConfidenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StaticObject_SurfaceTypeAndConfidenceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StaticObject_SurfaceTypeAndConfidenceDefaultTypeInternal() {}
  union {
    StaticObject_SurfaceTypeAndConfidence _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StaticObject_SurfaceTypeAndConfidenceDefaultTypeInternal _StaticObject_SurfaceTypeAndConfidence_default_instance_;

inline constexpr StaticObject_SurfaceColorAndConfidence::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        confidence_{nullptr},
        type_{static_cast< ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence_Type >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR StaticObject_SurfaceColorAndConfidence::StaticObject_SurfaceColorAndConfidence(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(StaticObject_SurfaceColorAndConfidence_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StaticObject_SurfaceColorAndConfidenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StaticObject_SurfaceColorAndConfidenceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StaticObject_SurfaceColorAndConfidenceDefaultTypeInternal() {}
  union {
    StaticObject_SurfaceColorAndConfidence _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StaticObject_SurfaceColorAndConfidenceDefaultTypeInternal _StaticObject_SurfaceColorAndConfidence_default_instance_;

inline constexpr MovableObject_TypeAndConfidence::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        confidence_{nullptr},
        type_{static_cast< ::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence_Type >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR MovableObject_TypeAndConfidence::MovableObject_TypeAndConfidence(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MovableObject_TypeAndConfidence_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MovableObject_TypeAndConfidenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MovableObject_TypeAndConfidenceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MovableObject_TypeAndConfidenceDefaultTypeInternal() {}
  union {
    MovableObject_TypeAndConfidence _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MovableObject_TypeAndConfidenceDefaultTypeInternal _MovableObject_TypeAndConfidence_default_instance_;

inline constexpr StaticObject_SurfaceMaterialAndConfidence::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        confidence_{nullptr},
        reflectivity_and_accuracy_{nullptr},
        type_{static_cast< ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence_Type >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR StaticObject_SurfaceMaterialAndConfidence::StaticObject_SurfaceMaterialAndConfidence(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(StaticObject_SurfaceMaterialAndConfidence_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StaticObject_SurfaceMaterialAndConfidenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StaticObject_SurfaceMaterialAndConfidenceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StaticObject_SurfaceMaterialAndConfidenceDefaultTypeInternal() {}
  union {
    StaticObject_SurfaceMaterialAndConfidence _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StaticObject_SurfaceMaterialAndConfidenceDefaultTypeInternal _StaticObject_SurfaceMaterialAndConfidence_default_instance_;

inline constexpr StaticObject_ConeAndAccuracy::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        extension_{},
        lower_position_and_accuracy_{nullptr},
        upper_position_and_accuracy_{nullptr},
        lower_diameter_and_accuracy_{nullptr},
        upper_diameter_and_accuracy_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR StaticObject_ConeAndAccuracy::StaticObject_ConeAndAccuracy(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(StaticObject_ConeAndAccuracy_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StaticObject_ConeAndAccuracyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StaticObject_ConeAndAccuracyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StaticObject_ConeAndAccuracyDefaultTypeInternal() {}
  union {
    StaticObject_ConeAndAccuracy _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StaticObject_ConeAndAccuracyDefaultTypeInternal _StaticObject_ConeAndAccuracy_default_instance_;

inline constexpr StaticObject::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        surface_color_and_confidence_{},
        envelope_{nullptr},
        object_id_{nullptr},
        existence_confidence_{nullptr},
        detection_status_{nullptr},
        type_and_confidence_{nullptr},
        surface_type_and_confidence_{nullptr},
        surface_material_and_confidence_{nullptr},
        geometry_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR StaticObject::StaticObject(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(StaticObject_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StaticObjectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StaticObjectDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StaticObjectDefaultTypeInternal() {}
  union {
    StaticObject _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StaticObjectDefaultTypeInternal _StaticObject_default_instance_;

inline constexpr MovableObject::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        envelope_{nullptr},
        object_id_{nullptr},
        existence_confidence_{nullptr},
        detection_status_{nullptr},
        type_and_confidence_{nullptr},
        rectangular_box_and_accuracy_{nullptr},
        speed_and_accuracy_{nullptr},
        acceleration_and_accuracy_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR MovableObject::MovableObject(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MovableObject_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MovableObjectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MovableObjectDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MovableObjectDefaultTypeInternal() {}
  union {
    MovableObject _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MovableObjectDefaultTypeInternal _MovableObject_default_instance_;

inline constexpr ObjectDetectionCategory::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        movable_object_{},
        static_object_{},
        envelope_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ObjectDetectionCategory::ObjectDetectionCategory(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ObjectDetectionCategory_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ObjectDetectionCategoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ObjectDetectionCategoryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ObjectDetectionCategoryDefaultTypeInternal() {}
  union {
    ObjectDetectionCategory _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ObjectDetectionCategoryDefaultTypeInternal _ObjectDetectionCategory_default_instance_;
}  // namespace objectdetection
}  // namespace categories
}  // namespace protobuf
}  // namespace sensoris
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto[5];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto = nullptr;
const ::uint32_t
    TableStruct_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence, _impl_.confidence_),
        1,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::MovableObject, _impl_._has_bits_),
        11, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::MovableObject, _impl_.envelope_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::MovableObject, _impl_.object_id_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::MovableObject, _impl_.existence_confidence_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::MovableObject, _impl_.detection_status_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::MovableObject, _impl_.type_and_confidence_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::MovableObject, _impl_.rectangular_box_and_accuracy_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::MovableObject, _impl_.speed_and_accuracy_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::MovableObject, _impl_.acceleration_and_accuracy_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence, _impl_.confidence_),
        1,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy, _impl_.lower_position_and_accuracy_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy, _impl_.upper_position_and_accuracy_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy, _impl_.lower_diameter_and_accuracy_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy, _impl_.upper_diameter_and_accuracy_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy, _impl_.extension_),
        0,
        1,
        2,
        3,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence, _impl_.confidence_),
        1,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence, _impl_.confidence_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence, _impl_.reflectivity_and_accuracy_),
        2,
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence, _impl_.confidence_),
        1,
        0,
        0x085, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject, _impl_._oneof_case_[0]),
        15, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject, _impl_.envelope_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject, _impl_.object_id_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject, _impl_.existence_confidence_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject, _impl_.detection_status_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject, _impl_.type_and_confidence_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject, _impl_.surface_type_and_confidence_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject, _impl_.surface_material_and_confidence_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject, _impl_.surface_color_and_confidence_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject, _impl_.geometry_),
        0,
        1,
        2,
        3,
        4,
        ~0u,
        ~0u,
        5,
        6,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory, _impl_.envelope_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory, _impl_.movable_object_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory, _impl_.static_object_),
        0,
        ~0u,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence)},
        {7, sizeof(::sensoris::protobuf::categories::objectdetection::MovableObject)},
        {26, sizeof(::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence)},
        {33, sizeof(::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy)},
        {46, sizeof(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence)},
        {53, sizeof(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence)},
        {62, sizeof(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence)},
        {69, sizeof(::sensoris::protobuf::categories::objectdetection::StaticObject)},
        {94, sizeof(::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::sensoris::protobuf::categories::objectdetection::_MovableObject_TypeAndConfidence_default_instance_._instance,
    &::sensoris::protobuf::categories::objectdetection::_MovableObject_default_instance_._instance,
    &::sensoris::protobuf::categories::objectdetection::_StaticObject_TypeAndConfidence_default_instance_._instance,
    &::sensoris::protobuf::categories::objectdetection::_StaticObject_ConeAndAccuracy_default_instance_._instance,
    &::sensoris::protobuf::categories::objectdetection::_StaticObject_SurfaceTypeAndConfidence_default_instance_._instance,
    &::sensoris::protobuf::categories::objectdetection::_StaticObject_SurfaceMaterialAndConfidence_default_instance_._instance,
    &::sensoris::protobuf::categories::objectdetection::_StaticObject_SurfaceColorAndConfidence_default_instance_._instance,
    &::sensoris::protobuf::categories::objectdetection::_StaticObject_default_instance_._instance,
    &::sensoris::protobuf::categories::objectdetection::_ObjectDetectionCategory_default_instance_._instance,
};
const char descriptor_table_protodef_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n3sensoris/protobuf/categories/object_de"
    "tection.proto\022,sensoris.protobuf.categor"
    "ies.objectdetection\032\031google/protobuf/any"
    ".proto\032\036google/protobuf/wrappers.proto\032\""
    "sensoris/protobuf/types/base.proto\032%sens"
    "oris/protobuf/types/spatial.proto\"\275\010\n\rMo"
    "vableObject\022=\n\010envelope\030\001 \001(\0132+.sensoris"
    ".protobuf.types.base.EventEnvelope\022.\n\tob"
    "ject_id\030\002 \001(\0132\033.google.protobuf.Int64Val"
    "ue\022F\n\024existence_confidence\030\003 \001(\0132(.senso"
    "ris.protobuf.types.base.Confidence\022L\n\020de"
    "tection_status\030\004 \001(\01322.sensoris.protobuf"
    ".types.base.EventDetectionStatus\022j\n\023type"
    "_and_confidence\030\005 \001(\0132M.sensoris.protobu"
    "f.categories.objectdetection.MovableObje"
    "ct.TypeAndConfidence\022`\n\034rectangular_box_"
    "and_accuracy\030\006 \001(\0132:.sensoris.protobuf.t"
    "ypes.spatial.RectangularBoxAndAccuracy\022W"
    "\n\022speed_and_accuracy\030\007 \001(\01325.sensoris.pr"
    "otobuf.types.spatial.XyzVectorAndAccurac"
    "yB\004\210\265\030\001\022^\n\031acceleration_and_accuracy\030\010 \001"
    "(\01325.sensoris.protobuf.types.spatial.Xyz"
    "VectorAndAccuracyB\004\210\265\030\001\032\237\003\n\021TypeAndConfi"
    "dence\022`\n\004type\030\001 \001(\0162R.sensoris.protobuf."
    "categories.objectdetection.MovableObject"
    ".TypeAndConfidence.Type\022<\n\nconfidence\030\002 "
    "\001(\0132(.sensoris.protobuf.types.base.Confi"
    "dence\"\351\001\n\004Type\022\020\n\014UNKNOWN_TYPE\020\000\022\013\n\007VEHI"
    "CLE\020\001\022\031\n\025VEHICLE_PASSENGER_CAR\020\002\022\021\n\rVEHI"
    "CLE_TRUCK\020\003\022\017\n\013VEHICLE_BUS\020\004\022\020\n\014VEHICLE_"
    "TRAM\020\005\022\023\n\017VEHICLE_TRAILER\020\006\022\017\n\013TWO_WHEEL"
    "ER\020\007\022\032\n\026TWO_WHEELER_MOTORCYCLE\020\010\022\027\n\023TWO_"
    "WHEELER_BICYCLE\020\t\022\n\n\006PERSON\020\n\022\n\n\006ANIMAL\020"
    "\013\"\306\030\n\014StaticObject\022=\n\010envelope\030\001 \001(\0132+.s"
    "ensoris.protobuf.types.base.EventEnvelop"
    "e\022.\n\tobject_id\030\002 \001(\0132\033.google.protobuf.I"
    "nt64Value\022F\n\024existence_confidence\030\003 \001(\0132"
    "(.sensoris.protobuf.types.base.Confidenc"
    "e\022L\n\020detection_status\030\004 \001(\01322.sensoris.p"
    "rotobuf.types.base.EventDetectionStatus\022"
    "i\n\023type_and_confidence\030\005 \001(\0132L.sensoris."
    "protobuf.categories.objectdetection.Stat"
    "icObject.TypeAndConfidence\022b\n\034rectangula"
    "r_box_and_accuracy\030\006 \001(\0132:.sensoris.prot"
    "obuf.types.spatial.RectangularBoxAndAccu"
    "racyH\000\022g\n\021cone_and_accuracy\030\007 \001(\0132J.sens"
    "oris.protobuf.categories.objectdetection"
    ".StaticObject.ConeAndAccuracyH\000\022x\n\033surfa"
    "ce_type_and_confidence\030\010 \001(\0132S.sensoris."
    "protobuf.categories.objectdetection.Stat"
    "icObject.SurfaceTypeAndConfidence\022\200\001\n\037su"
    "rface_material_and_confidence\030\t \001(\0132W.se"
    "nsoris.protobuf.categories.objectdetecti"
    "on.StaticObject.SurfaceMaterialAndConfid"
    "ence\022z\n\034surface_color_and_confidence\030\n \003"
    "(\0132T.sensoris.protobuf.categories.object"
    "detection.StaticObject.SurfaceColorAndCo"
    "nfidence\032\327\005\n\021TypeAndConfidence\022_\n\004type\030\001"
    " \001(\0162Q.sensoris.protobuf.categories.obje"
    "ctdetection.StaticObject.TypeAndConfiden"
    "ce.Type\022<\n\nconfidence\030\002 \001(\0132(.sensoris.p"
    "rotobuf.types.base.Confidence\"\242\004\n\004Type\022\020"
    "\n\014UNKNOWN_TYPE\020\000\022\n\n\006BRIDGE\020\001\022\n\n\006TUNNEL\020\002"
    "\022\010\n\004POLE\020\003\022\016\n\nPOLE_LIGHT\020\004\022\022\n\016POLE_REFLE"
    "CTOR\020\005\022\023\n\017POLE_DELINEATOR\020\006\022\017\n\013POLE_GANT"
    "RY\020\007\022\r\n\tPOLE_SIGN\020\010\022\023\n\017POLE_GUARD_RAIL\020\t"
    "\022\007\n\003BAR\020\n\022\010\n\004TREE\020\013\022\013\n\007BOLLARD\020\014\022\010\n\004CONE"
    "\020\r\022\n\n\006BARREL\020\016\022\010\n\004WALL\020\017\022\022\n\016TRAFFIC_ISLA"
    "ND\020\020\022\016\n\nSPEED_BUMP\020\021\022\014\n\010POT_HOLE\020\022\022\021\n\rMA"
    "NHOLE_COVER\020\023\022\030\n\024MANHOLE_COVER_CLOSED\020\024\022"
    "\026\n\022MANHOLE_COVER_OPEN\020\025\022\017\n\013SIGN_BRIDGE\020\026"
    "\022\026\n\022TRAFFIC_LIGHT_BODY\020\027\022\027\n\023BARRIER_PARK"
    "ING_LOT\020\030\022\022\n\016SURFACE_RAISED\020\031\022\036\n\032TRAFFIC"
    "_ENFORCEMENT_CAMERA\020\032\022$\n TRAFFIC_ENFORCE"
    "MENT_CAMERA_FIXED\020\033\022%\n!TRAFFIC_ENFORCEME"
    "NT_CAMERA_MOBILE\020\034\032\260\003\n\017ConeAndAccuracy\022Y"
    "\n\033lower_position_and_accuracy\030\001 \001(\01324.se"
    "nsoris.protobuf.types.spatial.PositionAn"
    "dAccuracy\022Y\n\033upper_position_and_accuracy"
    "\030\002 \001(\01324.sensoris.protobuf.types.spatial"
    ".PositionAndAccuracy\022^\n\033lower_diameter_a"
    "nd_accuracy\030\003 \001(\01323.sensoris.protobuf.ty"
    "pes.base.Int64ValueAndAccuracyB\004\210\265\030\000\022^\n\033"
    "upper_diameter_and_accuracy\030\004 \001(\01323.sens"
    "oris.protobuf.types.base.Int64ValueAndAc"
    "curacyB\004\210\265\030\000\022\'\n\textension\030\017 \003(\0132\024.google"
    ".protobuf.Any\032\357\001\n\030SurfaceTypeAndConfiden"
    "ce\022f\n\004type\030\001 \001(\0162X.sensoris.protobuf.cat"
    "egories.objectdetection.StaticObject.Sur"
    "faceTypeAndConfidence.Type\022<\n\nconfidence"
    "\030\002 \001(\0132(.sensoris.protobuf.types.base.Co"
    "nfidence\"-\n\004Type\022\020\n\014UNKNOWN_TYPE\020\000\022\010\n\004FL"
    "AT\020\001\022\t\n\005ROUGH\020\002\032\225\003\n\034SurfaceMaterialAndCo"
    "nfidence\022j\n\004type\030\001 \001(\0162\\.sensoris.protob"
    "uf.categories.objectdetection.StaticObje"
    "ct.SurfaceMaterialAndConfidence.Type\022<\n\n"
    "confidence\030\002 \001(\0132(.sensoris.protobuf.typ"
    "es.base.Confidence\022\\\n\031reflectivity_and_a"
    "ccuracy\030\003 \001(\01323.sensoris.protobuf.types."
    "base.Int64ValueAndAccuracyB\004\210\265\030\000\"m\n\004Type"
    "\022\020\n\014UNKNOWN_TYPE\020\000\022\t\n\005METAL\020\001\022\014\n\010CONCRET"
    "E\020\002\022\t\n\005STONE\020\003\022\010\n\004WOOD\020\004\022\013\n\007PLASTIC\020\005\022\013\n"
    "\007ASPHALT\020\006\022\013\n\007ORGANIC\020\007\032\334\002\n\031SurfaceColor"
    "AndConfidence\022g\n\004type\030\001 \001(\0162Y.sensoris.p"
    "rotobuf.categories.objectdetection.Stati"
    "cObject.SurfaceColorAndConfidence.Type\022<"
    "\n\nconfidence\030\002 \001(\0132(.sensoris.protobuf.t"
    "ypes.base.Confidence\"\227\001\n\004Type\022\017\n\013UNKOWN_"
    "TYPE\020\000\022\t\n\005OTHER\020\001\022\t\n\005WHITE\020\002\022\010\n\004GRAY\020\003\022\016"
    "\n\nGRAY_LIGHT\020\004\022\r\n\tGRAY_DARK\020\005\022\t\n\005BLACK\020\006"
    "\022\007\n\003RED\020\007\022\t\n\005GREEN\020\010\022\010\n\004BLUE\020\t\022\n\n\006YELLOW"
    "\020\n\022\n\n\006ORANGE\020\013B\n\n\010geometry\"\203\002\n\027ObjectDet"
    "ectionCategory\022@\n\010envelope\030\001 \001(\0132..senso"
    "ris.protobuf.types.base.CategoryEnvelope"
    "\022S\n\016movable_object\030\002 \003(\0132;.sensoris.prot"
    "obuf.categories.objectdetection.MovableO"
    "bject\022Q\n\rstatic_object\030\003 \003(\0132:.sensoris."
    "protobuf.categories.objectdetection.Stat"
    "icObjectB\206\001\n\'org.sensoris.categories.obj"
    "ectdetectionB\037SensorisObjectDetectionCat"
    "egoryP\001Z5sensoris.org/specification/cate"
    "gories/objectdetection\370\001\001b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto_deps[4] = {
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
        &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
        &::descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
        &::descriptor_table_sensoris_2fprotobuf_2ftypes_2fspatial_2eproto,
};
static ::absl::once_flag descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto = {
    false,
    false,
    4873,
    descriptor_table_protodef_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto,
    "sensoris/protobuf/categories/object_detection.proto",
    &descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto_once,
    descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto_deps,
    4,
    9,
    schemas,
    file_default_instances,
    TableStruct_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto::offsets,
    file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto,
    file_level_service_descriptors_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto,
};
namespace sensoris {
namespace protobuf {
namespace categories {
namespace objectdetection {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL MovableObject_TypeAndConfidence_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto);
  return file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t MovableObject_TypeAndConfidence_Type_internal_data_[] = {
    786432u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL StaticObject_TypeAndConfidence_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto);
  return file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t StaticObject_TypeAndConfidence_Type_internal_data_[] = {
    1900544u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL StaticObject_SurfaceTypeAndConfidence_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto);
  return file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t StaticObject_SurfaceTypeAndConfidence_Type_internal_data_[] = {
    196608u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL StaticObject_SurfaceMaterialAndConfidence_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto);
  return file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t StaticObject_SurfaceMaterialAndConfidence_Type_internal_data_[] = {
    524288u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL StaticObject_SurfaceColorAndConfidence_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto);
  return file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t StaticObject_SurfaceColorAndConfidence_Type_internal_data_[] = {
    786432u, 0u, };
// ===================================================================

class MovableObject_TypeAndConfidence::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MovableObject_TypeAndConfidence>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MovableObject_TypeAndConfidence, _impl_._has_bits_);
};

void MovableObject_TypeAndConfidence::clear_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.confidence_ != nullptr) _impl_.confidence_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MovableObject_TypeAndConfidence::MovableObject_TypeAndConfidence(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MovableObject_TypeAndConfidence_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence)
}
PROTOBUF_NDEBUG_INLINE MovableObject_TypeAndConfidence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

MovableObject_TypeAndConfidence::MovableObject_TypeAndConfidence(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const MovableObject_TypeAndConfidence& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MovableObject_TypeAndConfidence_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MovableObject_TypeAndConfidence* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.confidence_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.confidence_)
                : nullptr;
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence)
}
PROTOBUF_NDEBUG_INLINE MovableObject_TypeAndConfidence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void MovableObject_TypeAndConfidence::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, confidence_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, confidence_) +
               sizeof(Impl_::type_));
}
MovableObject_TypeAndConfidence::~MovableObject_TypeAndConfidence() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence)
  SharedDtor(*this);
}
inline void MovableObject_TypeAndConfidence::SharedDtor(MessageLite& self) {
  MovableObject_TypeAndConfidence& this_ = static_cast<MovableObject_TypeAndConfidence&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.confidence_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MovableObject_TypeAndConfidence::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MovableObject_TypeAndConfidence(arena);
}
constexpr auto MovableObject_TypeAndConfidence::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MovableObject_TypeAndConfidence),
                                            alignof(MovableObject_TypeAndConfidence));
}
constexpr auto MovableObject_TypeAndConfidence::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MovableObject_TypeAndConfidence_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MovableObject_TypeAndConfidence::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MovableObject_TypeAndConfidence>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MovableObject_TypeAndConfidence::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MovableObject_TypeAndConfidence>(), &MovableObject_TypeAndConfidence::ByteSizeLong,
              &MovableObject_TypeAndConfidence::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MovableObject_TypeAndConfidence, _impl_._cached_size_),
          false,
      },
      &MovableObject_TypeAndConfidence::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MovableObject_TypeAndConfidence_class_data_ =
        MovableObject_TypeAndConfidence::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MovableObject_TypeAndConfidence::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MovableObject_TypeAndConfidence_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MovableObject_TypeAndConfidence_class_data_.tc_table);
  return MovableObject_TypeAndConfidence_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
MovableObject_TypeAndConfidence::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MovableObject_TypeAndConfidence, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    MovableObject_TypeAndConfidence_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(MovableObject_TypeAndConfidence, _impl_.confidence_)}},
    // .sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MovableObject_TypeAndConfidence, _impl_.type_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(MovableObject_TypeAndConfidence, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(MovableObject_TypeAndConfidence, _impl_.type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    {PROTOBUF_FIELD_OFFSET(MovableObject_TypeAndConfidence, _impl_.confidence_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Confidence>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void MovableObject_TypeAndConfidence::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.confidence_ != nullptr);
    _impl_.confidence_->Clear();
  }
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MovableObject_TypeAndConfidence::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MovableObject_TypeAndConfidence& this_ = static_cast<const MovableObject_TypeAndConfidence&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MovableObject_TypeAndConfidence::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MovableObject_TypeAndConfidence& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence.Type type = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_type(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.Confidence confidence = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.confidence_, this_._impl_.confidence_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MovableObject_TypeAndConfidence::ByteSizeLong(const MessageLite& base) {
  const MovableObject_TypeAndConfidence& this_ = static_cast<const MovableObject_TypeAndConfidence&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MovableObject_TypeAndConfidence::ByteSizeLong() const {
  const MovableObject_TypeAndConfidence& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.confidence_);
    }
    // .sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence.Type type = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MovableObject_TypeAndConfidence::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MovableObject_TypeAndConfidence*>(&to_msg);
  auto& from = static_cast<const MovableObject_TypeAndConfidence&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.confidence_ != nullptr);
      if (_this->_impl_.confidence_ == nullptr) {
        _this->_impl_.confidence_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.confidence_);
      } else {
        _this->_impl_.confidence_->MergeFrom(*from._impl_.confidence_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_type() != 0) {
        _this->_impl_.type_ = from._impl_.type_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MovableObject_TypeAndConfidence::CopyFrom(const MovableObject_TypeAndConfidence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MovableObject_TypeAndConfidence::InternalSwap(MovableObject_TypeAndConfidence* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MovableObject_TypeAndConfidence, _impl_.type_)
      + sizeof(MovableObject_TypeAndConfidence::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(MovableObject_TypeAndConfidence, _impl_.confidence_)>(
          reinterpret_cast<char*>(&_impl_.confidence_),
          reinterpret_cast<char*>(&other->_impl_.confidence_));
}

::google::protobuf::Metadata MovableObject_TypeAndConfidence::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MovableObject::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MovableObject>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MovableObject, _impl_._has_bits_);
};

void MovableObject::clear_envelope() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.envelope_ != nullptr) _impl_.envelope_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void MovableObject::clear_object_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.object_id_ != nullptr) _impl_.object_id_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void MovableObject::clear_existence_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.existence_confidence_ != nullptr) _impl_.existence_confidence_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void MovableObject::clear_detection_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.detection_status_ != nullptr) _impl_.detection_status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void MovableObject::clear_rectangular_box_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rectangular_box_and_accuracy_ != nullptr) _impl_.rectangular_box_and_accuracy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void MovableObject::clear_speed_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.speed_and_accuracy_ != nullptr) _impl_.speed_and_accuracy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void MovableObject::clear_acceleration_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.acceleration_and_accuracy_ != nullptr) _impl_.acceleration_and_accuracy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
MovableObject::MovableObject(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MovableObject_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.objectdetection.MovableObject)
}
PROTOBUF_NDEBUG_INLINE MovableObject::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::categories::objectdetection::MovableObject& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

MovableObject::MovableObject(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const MovableObject& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MovableObject_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MovableObject* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.envelope_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.envelope_)
                : nullptr;
  _impl_.object_id_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.object_id_)
                : nullptr;
  _impl_.existence_confidence_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.existence_confidence_)
                : nullptr;
  _impl_.detection_status_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.detection_status_)
                : nullptr;
  _impl_.type_and_confidence_ = ((cached_has_bits & 0x00000010u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.type_and_confidence_)
                : nullptr;
  _impl_.rectangular_box_and_accuracy_ = ((cached_has_bits & 0x00000020u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.rectangular_box_and_accuracy_)
                : nullptr;
  _impl_.speed_and_accuracy_ = ((cached_has_bits & 0x00000040u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.speed_and_accuracy_)
                : nullptr;
  _impl_.acceleration_and_accuracy_ = ((cached_has_bits & 0x00000080u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.acceleration_and_accuracy_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.objectdetection.MovableObject)
}
PROTOBUF_NDEBUG_INLINE MovableObject::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void MovableObject::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, envelope_),
           0,
           offsetof(Impl_, acceleration_and_accuracy_) -
               offsetof(Impl_, envelope_) +
               sizeof(Impl_::acceleration_and_accuracy_));
}
MovableObject::~MovableObject() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.objectdetection.MovableObject)
  SharedDtor(*this);
}
inline void MovableObject::SharedDtor(MessageLite& self) {
  MovableObject& this_ = static_cast<MovableObject&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.envelope_;
  delete this_._impl_.object_id_;
  delete this_._impl_.existence_confidence_;
  delete this_._impl_.detection_status_;
  delete this_._impl_.type_and_confidence_;
  delete this_._impl_.rectangular_box_and_accuracy_;
  delete this_._impl_.speed_and_accuracy_;
  delete this_._impl_.acceleration_and_accuracy_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MovableObject::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MovableObject(arena);
}
constexpr auto MovableObject::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MovableObject),
                                            alignof(MovableObject));
}
constexpr auto MovableObject::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MovableObject_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MovableObject::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MovableObject>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MovableObject::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MovableObject>(), &MovableObject::ByteSizeLong,
              &MovableObject::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MovableObject, _impl_._cached_size_),
          false,
      },
      &MovableObject::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MovableObject_class_data_ =
        MovableObject::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MovableObject::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MovableObject_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MovableObject_class_data_.tc_table);
  return MovableObject_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 8, 0, 2>
MovableObject::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MovableObject, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    8,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    MovableObject_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::objectdetection::MovableObject>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .sensoris.protobuf.types.spatial.XyzVectorAndAccuracy acceleration_and_accuracy = 8 [(.sensoris.protobuf.types.base.exponent) = 1];
    {::_pbi::TcParser::FastMtS1,
     {66, 7, 7, PROTOBUF_FIELD_OFFSET(MovableObject, _impl_.acceleration_and_accuracy_)}},
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(MovableObject, _impl_.envelope_)}},
    // .google.protobuf.Int64Value object_id = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(MovableObject, _impl_.object_id_)}},
    // .sensoris.protobuf.types.base.Confidence existence_confidence = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(MovableObject, _impl_.existence_confidence_)}},
    // .sensoris.protobuf.types.base.EventDetectionStatus detection_status = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(MovableObject, _impl_.detection_status_)}},
    // .sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence type_and_confidence = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 4, PROTOBUF_FIELD_OFFSET(MovableObject, _impl_.type_and_confidence_)}},
    // .sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 5, 5, PROTOBUF_FIELD_OFFSET(MovableObject, _impl_.rectangular_box_and_accuracy_)}},
    // .sensoris.protobuf.types.spatial.XyzVectorAndAccuracy speed_and_accuracy = 7 [(.sensoris.protobuf.types.base.exponent) = 1];
    {::_pbi::TcParser::FastMtS1,
     {58, 6, 6, PROTOBUF_FIELD_OFFSET(MovableObject, _impl_.speed_and_accuracy_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    {PROTOBUF_FIELD_OFFSET(MovableObject, _impl_.envelope_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Int64Value object_id = 2;
    {PROTOBUF_FIELD_OFFSET(MovableObject, _impl_.object_id_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.Confidence existence_confidence = 3;
    {PROTOBUF_FIELD_OFFSET(MovableObject, _impl_.existence_confidence_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.EventDetectionStatus detection_status = 4;
    {PROTOBUF_FIELD_OFFSET(MovableObject, _impl_.detection_status_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence type_and_confidence = 5;
    {PROTOBUF_FIELD_OFFSET(MovableObject, _impl_.type_and_confidence_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 6;
    {PROTOBUF_FIELD_OFFSET(MovableObject, _impl_.rectangular_box_and_accuracy_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.spatial.XyzVectorAndAccuracy speed_and_accuracy = 7 [(.sensoris.protobuf.types.base.exponent) = 1];
    {PROTOBUF_FIELD_OFFSET(MovableObject, _impl_.speed_and_accuracy_), _Internal::kHasBitsOffset + 6, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.spatial.XyzVectorAndAccuracy acceleration_and_accuracy = 8 [(.sensoris.protobuf.types.base.exponent) = 1];
    {PROTOBUF_FIELD_OFFSET(MovableObject, _impl_.acceleration_and_accuracy_), _Internal::kHasBitsOffset + 7, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::EventEnvelope>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Confidence>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::EventDetectionStatus>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void MovableObject::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.objectdetection.MovableObject)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.envelope_ != nullptr);
      _impl_.envelope_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.object_id_ != nullptr);
      _impl_.object_id_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.existence_confidence_ != nullptr);
      _impl_.existence_confidence_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.detection_status_ != nullptr);
      _impl_.detection_status_->Clear();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(_impl_.type_and_confidence_ != nullptr);
      _impl_.type_and_confidence_->Clear();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(_impl_.rectangular_box_and_accuracy_ != nullptr);
      _impl_.rectangular_box_and_accuracy_->Clear();
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      ABSL_DCHECK(_impl_.speed_and_accuracy_ != nullptr);
      _impl_.speed_and_accuracy_->Clear();
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      ABSL_DCHECK(_impl_.acceleration_and_accuracy_ != nullptr);
      _impl_.acceleration_and_accuracy_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MovableObject::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MovableObject& this_ = static_cast<const MovableObject&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MovableObject::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MovableObject& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.objectdetection.MovableObject)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.envelope_, this_._impl_.envelope_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Int64Value object_id = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.object_id_, this_._impl_.object_id_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.types.base.Confidence existence_confidence = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.existence_confidence_, this_._impl_.existence_confidence_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.types.base.EventDetectionStatus detection_status = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.detection_status_, this_._impl_.detection_status_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence type_and_confidence = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.type_and_confidence_, this_._impl_.type_and_confidence_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 6;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.rectangular_box_and_accuracy_, this_._impl_.rectangular_box_and_accuracy_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.types.spatial.XyzVectorAndAccuracy speed_and_accuracy = 7 [(.sensoris.protobuf.types.base.exponent) = 1];
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *this_._impl_.speed_and_accuracy_, this_._impl_.speed_and_accuracy_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.types.spatial.XyzVectorAndAccuracy acceleration_and_accuracy = 8 [(.sensoris.protobuf.types.base.exponent) = 1];
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, *this_._impl_.acceleration_and_accuracy_, this_._impl_.acceleration_and_accuracy_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.objectdetection.MovableObject)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MovableObject::ByteSizeLong(const MessageLite& base) {
  const MovableObject& this_ = static_cast<const MovableObject&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MovableObject::ByteSizeLong() const {
  const MovableObject& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.objectdetection.MovableObject)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.envelope_);
    }
    // .google.protobuf.Int64Value object_id = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.object_id_);
    }
    // .sensoris.protobuf.types.base.Confidence existence_confidence = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.existence_confidence_);
    }
    // .sensoris.protobuf.types.base.EventDetectionStatus detection_status = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.detection_status_);
    }
    // .sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence type_and_confidence = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_and_confidence_);
    }
    // .sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rectangular_box_and_accuracy_);
    }
    // .sensoris.protobuf.types.spatial.XyzVectorAndAccuracy speed_and_accuracy = 7 [(.sensoris.protobuf.types.base.exponent) = 1];
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.speed_and_accuracy_);
    }
    // .sensoris.protobuf.types.spatial.XyzVectorAndAccuracy acceleration_and_accuracy = 8 [(.sensoris.protobuf.types.base.exponent) = 1];
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.acceleration_and_accuracy_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MovableObject::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MovableObject*>(&to_msg);
  auto& from = static_cast<const MovableObject&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.objectdetection.MovableObject)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.envelope_ != nullptr);
      if (_this->_impl_.envelope_ == nullptr) {
        _this->_impl_.envelope_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.envelope_);
      } else {
        _this->_impl_.envelope_->MergeFrom(*from._impl_.envelope_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.object_id_ != nullptr);
      if (_this->_impl_.object_id_ == nullptr) {
        _this->_impl_.object_id_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.object_id_);
      } else {
        _this->_impl_.object_id_->MergeFrom(*from._impl_.object_id_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.existence_confidence_ != nullptr);
      if (_this->_impl_.existence_confidence_ == nullptr) {
        _this->_impl_.existence_confidence_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.existence_confidence_);
      } else {
        _this->_impl_.existence_confidence_->MergeFrom(*from._impl_.existence_confidence_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.detection_status_ != nullptr);
      if (_this->_impl_.detection_status_ == nullptr) {
        _this->_impl_.detection_status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.detection_status_);
      } else {
        _this->_impl_.detection_status_->MergeFrom(*from._impl_.detection_status_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(from._impl_.type_and_confidence_ != nullptr);
      if (_this->_impl_.type_and_confidence_ == nullptr) {
        _this->_impl_.type_and_confidence_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.type_and_confidence_);
      } else {
        _this->_impl_.type_and_confidence_->MergeFrom(*from._impl_.type_and_confidence_);
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(from._impl_.rectangular_box_and_accuracy_ != nullptr);
      if (_this->_impl_.rectangular_box_and_accuracy_ == nullptr) {
        _this->_impl_.rectangular_box_and_accuracy_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.rectangular_box_and_accuracy_);
      } else {
        _this->_impl_.rectangular_box_and_accuracy_->MergeFrom(*from._impl_.rectangular_box_and_accuracy_);
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      ABSL_DCHECK(from._impl_.speed_and_accuracy_ != nullptr);
      if (_this->_impl_.speed_and_accuracy_ == nullptr) {
        _this->_impl_.speed_and_accuracy_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.speed_and_accuracy_);
      } else {
        _this->_impl_.speed_and_accuracy_->MergeFrom(*from._impl_.speed_and_accuracy_);
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      ABSL_DCHECK(from._impl_.acceleration_and_accuracy_ != nullptr);
      if (_this->_impl_.acceleration_and_accuracy_ == nullptr) {
        _this->_impl_.acceleration_and_accuracy_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.acceleration_and_accuracy_);
      } else {
        _this->_impl_.acceleration_and_accuracy_->MergeFrom(*from._impl_.acceleration_and_accuracy_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MovableObject::CopyFrom(const MovableObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.objectdetection.MovableObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MovableObject::InternalSwap(MovableObject* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MovableObject, _impl_.acceleration_and_accuracy_)
      + sizeof(MovableObject::_impl_.acceleration_and_accuracy_)
      - PROTOBUF_FIELD_OFFSET(MovableObject, _impl_.envelope_)>(
          reinterpret_cast<char*>(&_impl_.envelope_),
          reinterpret_cast<char*>(&other->_impl_.envelope_));
}

::google::protobuf::Metadata MovableObject::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StaticObject_TypeAndConfidence::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<StaticObject_TypeAndConfidence>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StaticObject_TypeAndConfidence, _impl_._has_bits_);
};

void StaticObject_TypeAndConfidence::clear_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.confidence_ != nullptr) _impl_.confidence_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
StaticObject_TypeAndConfidence::StaticObject_TypeAndConfidence(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, StaticObject_TypeAndConfidence_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence)
}
PROTOBUF_NDEBUG_INLINE StaticObject_TypeAndConfidence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

StaticObject_TypeAndConfidence::StaticObject_TypeAndConfidence(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const StaticObject_TypeAndConfidence& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, StaticObject_TypeAndConfidence_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StaticObject_TypeAndConfidence* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.confidence_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.confidence_)
                : nullptr;
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence)
}
PROTOBUF_NDEBUG_INLINE StaticObject_TypeAndConfidence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void StaticObject_TypeAndConfidence::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, confidence_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, confidence_) +
               sizeof(Impl_::type_));
}
StaticObject_TypeAndConfidence::~StaticObject_TypeAndConfidence() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence)
  SharedDtor(*this);
}
inline void StaticObject_TypeAndConfidence::SharedDtor(MessageLite& self) {
  StaticObject_TypeAndConfidence& this_ = static_cast<StaticObject_TypeAndConfidence&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.confidence_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL StaticObject_TypeAndConfidence::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) StaticObject_TypeAndConfidence(arena);
}
constexpr auto StaticObject_TypeAndConfidence::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(StaticObject_TypeAndConfidence),
                                            alignof(StaticObject_TypeAndConfidence));
}
constexpr auto StaticObject_TypeAndConfidence::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_StaticObject_TypeAndConfidence_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &StaticObject_TypeAndConfidence::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<StaticObject_TypeAndConfidence>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &StaticObject_TypeAndConfidence::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<StaticObject_TypeAndConfidence>(), &StaticObject_TypeAndConfidence::ByteSizeLong,
              &StaticObject_TypeAndConfidence::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(StaticObject_TypeAndConfidence, _impl_._cached_size_),
          false,
      },
      &StaticObject_TypeAndConfidence::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull StaticObject_TypeAndConfidence_class_data_ =
        StaticObject_TypeAndConfidence::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
StaticObject_TypeAndConfidence::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&StaticObject_TypeAndConfidence_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(StaticObject_TypeAndConfidence_class_data_.tc_table);
  return StaticObject_TypeAndConfidence_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
StaticObject_TypeAndConfidence::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StaticObject_TypeAndConfidence, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    StaticObject_TypeAndConfidence_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(StaticObject_TypeAndConfidence, _impl_.confidence_)}},
    // .sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StaticObject_TypeAndConfidence, _impl_.type_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(StaticObject_TypeAndConfidence, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(StaticObject_TypeAndConfidence, _impl_.type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    {PROTOBUF_FIELD_OFFSET(StaticObject_TypeAndConfidence, _impl_.confidence_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Confidence>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void StaticObject_TypeAndConfidence::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.confidence_ != nullptr);
    _impl_.confidence_->Clear();
  }
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL StaticObject_TypeAndConfidence::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const StaticObject_TypeAndConfidence& this_ = static_cast<const StaticObject_TypeAndConfidence&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL StaticObject_TypeAndConfidence::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const StaticObject_TypeAndConfidence& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence.Type type = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_type(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.Confidence confidence = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.confidence_, this_._impl_.confidence_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t StaticObject_TypeAndConfidence::ByteSizeLong(const MessageLite& base) {
  const StaticObject_TypeAndConfidence& this_ = static_cast<const StaticObject_TypeAndConfidence&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t StaticObject_TypeAndConfidence::ByteSizeLong() const {
  const StaticObject_TypeAndConfidence& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.confidence_);
    }
    // .sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence.Type type = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void StaticObject_TypeAndConfidence::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StaticObject_TypeAndConfidence*>(&to_msg);
  auto& from = static_cast<const StaticObject_TypeAndConfidence&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.confidence_ != nullptr);
      if (_this->_impl_.confidence_ == nullptr) {
        _this->_impl_.confidence_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.confidence_);
      } else {
        _this->_impl_.confidence_->MergeFrom(*from._impl_.confidence_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_type() != 0) {
        _this->_impl_.type_ = from._impl_.type_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StaticObject_TypeAndConfidence::CopyFrom(const StaticObject_TypeAndConfidence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StaticObject_TypeAndConfidence::InternalSwap(StaticObject_TypeAndConfidence* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StaticObject_TypeAndConfidence, _impl_.type_)
      + sizeof(StaticObject_TypeAndConfidence::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(StaticObject_TypeAndConfidence, _impl_.confidence_)>(
          reinterpret_cast<char*>(&_impl_.confidence_),
          reinterpret_cast<char*>(&other->_impl_.confidence_));
}

::google::protobuf::Metadata StaticObject_TypeAndConfidence::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StaticObject_ConeAndAccuracy::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<StaticObject_ConeAndAccuracy>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StaticObject_ConeAndAccuracy, _impl_._has_bits_);
};

void StaticObject_ConeAndAccuracy::clear_lower_position_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.lower_position_and_accuracy_ != nullptr) _impl_.lower_position_and_accuracy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void StaticObject_ConeAndAccuracy::clear_upper_position_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.upper_position_and_accuracy_ != nullptr) _impl_.upper_position_and_accuracy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void StaticObject_ConeAndAccuracy::clear_lower_diameter_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.lower_diameter_and_accuracy_ != nullptr) _impl_.lower_diameter_and_accuracy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void StaticObject_ConeAndAccuracy::clear_upper_diameter_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.upper_diameter_and_accuracy_ != nullptr) _impl_.upper_diameter_and_accuracy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void StaticObject_ConeAndAccuracy::clear_extension() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.extension_.Clear();
}
StaticObject_ConeAndAccuracy::StaticObject_ConeAndAccuracy(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, StaticObject_ConeAndAccuracy_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy)
}
PROTOBUF_NDEBUG_INLINE StaticObject_ConeAndAccuracy::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        extension_{visibility, arena, from.extension_} {}

StaticObject_ConeAndAccuracy::StaticObject_ConeAndAccuracy(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const StaticObject_ConeAndAccuracy& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, StaticObject_ConeAndAccuracy_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StaticObject_ConeAndAccuracy* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.lower_position_and_accuracy_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.lower_position_and_accuracy_)
                : nullptr;
  _impl_.upper_position_and_accuracy_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.upper_position_and_accuracy_)
                : nullptr;
  _impl_.lower_diameter_and_accuracy_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.lower_diameter_and_accuracy_)
                : nullptr;
  _impl_.upper_diameter_and_accuracy_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.upper_diameter_and_accuracy_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy)
}
PROTOBUF_NDEBUG_INLINE StaticObject_ConeAndAccuracy::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        extension_{visibility, arena} {}

inline void StaticObject_ConeAndAccuracy::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lower_position_and_accuracy_),
           0,
           offsetof(Impl_, upper_diameter_and_accuracy_) -
               offsetof(Impl_, lower_position_and_accuracy_) +
               sizeof(Impl_::upper_diameter_and_accuracy_));
}
StaticObject_ConeAndAccuracy::~StaticObject_ConeAndAccuracy() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy)
  SharedDtor(*this);
}
inline void StaticObject_ConeAndAccuracy::SharedDtor(MessageLite& self) {
  StaticObject_ConeAndAccuracy& this_ = static_cast<StaticObject_ConeAndAccuracy&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.lower_position_and_accuracy_;
  delete this_._impl_.upper_position_and_accuracy_;
  delete this_._impl_.lower_diameter_and_accuracy_;
  delete this_._impl_.upper_diameter_and_accuracy_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL StaticObject_ConeAndAccuracy::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) StaticObject_ConeAndAccuracy(arena);
}
constexpr auto StaticObject_ConeAndAccuracy::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(StaticObject_ConeAndAccuracy, _impl_.extension_) +
          decltype(StaticObject_ConeAndAccuracy::_impl_.extension_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(StaticObject_ConeAndAccuracy), alignof(StaticObject_ConeAndAccuracy), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&StaticObject_ConeAndAccuracy::PlacementNew_,
                                 sizeof(StaticObject_ConeAndAccuracy),
                                 alignof(StaticObject_ConeAndAccuracy));
  }
}
constexpr auto StaticObject_ConeAndAccuracy::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_StaticObject_ConeAndAccuracy_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &StaticObject_ConeAndAccuracy::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<StaticObject_ConeAndAccuracy>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &StaticObject_ConeAndAccuracy::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<StaticObject_ConeAndAccuracy>(), &StaticObject_ConeAndAccuracy::ByteSizeLong,
              &StaticObject_ConeAndAccuracy::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(StaticObject_ConeAndAccuracy, _impl_._cached_size_),
          false,
      },
      &StaticObject_ConeAndAccuracy::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull StaticObject_ConeAndAccuracy_class_data_ =
        StaticObject_ConeAndAccuracy::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
StaticObject_ConeAndAccuracy::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&StaticObject_ConeAndAccuracy_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(StaticObject_ConeAndAccuracy_class_data_.tc_table);
  return StaticObject_ConeAndAccuracy_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 5, 0, 2>
StaticObject_ConeAndAccuracy::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StaticObject_ConeAndAccuracy, _impl_._has_bits_),
    0, // no _extensions_
    15, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950896,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    StaticObject_ConeAndAccuracy_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .sensoris.protobuf.types.spatial.PositionAndAccuracy lower_position_and_accuracy = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StaticObject_ConeAndAccuracy, _impl_.lower_position_and_accuracy_)}},
    // .sensoris.protobuf.types.spatial.PositionAndAccuracy upper_position_and_accuracy = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(StaticObject_ConeAndAccuracy, _impl_.upper_position_and_accuracy_)}},
    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy lower_diameter_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(StaticObject_ConeAndAccuracy, _impl_.lower_diameter_and_accuracy_)}},
    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy upper_diameter_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 0];
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(StaticObject_ConeAndAccuracy, _impl_.upper_diameter_and_accuracy_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .google.protobuf.Any extension = 15;
    {::_pbi::TcParser::FastMtR1,
     {122, 63, 4, PROTOBUF_FIELD_OFFSET(StaticObject_ConeAndAccuracy, _impl_.extension_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.spatial.PositionAndAccuracy lower_position_and_accuracy = 1;
    {PROTOBUF_FIELD_OFFSET(StaticObject_ConeAndAccuracy, _impl_.lower_position_and_accuracy_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.spatial.PositionAndAccuracy upper_position_and_accuracy = 2;
    {PROTOBUF_FIELD_OFFSET(StaticObject_ConeAndAccuracy, _impl_.upper_position_and_accuracy_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy lower_diameter_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];
    {PROTOBUF_FIELD_OFFSET(StaticObject_ConeAndAccuracy, _impl_.lower_diameter_and_accuracy_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy upper_diameter_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 0];
    {PROTOBUF_FIELD_OFFSET(StaticObject_ConeAndAccuracy, _impl_.upper_diameter_and_accuracy_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .google.protobuf.Any extension = 15;
    {PROTOBUF_FIELD_OFFSET(StaticObject_ConeAndAccuracy, _impl_.extension_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::spatial::PositionAndAccuracy>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::spatial::PositionAndAccuracy>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64ValueAndAccuracy>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64ValueAndAccuracy>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void StaticObject_ConeAndAccuracy::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.extension_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.lower_position_and_accuracy_ != nullptr);
      _impl_.lower_position_and_accuracy_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.upper_position_and_accuracy_ != nullptr);
      _impl_.upper_position_and_accuracy_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.lower_diameter_and_accuracy_ != nullptr);
      _impl_.lower_diameter_and_accuracy_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.upper_diameter_and_accuracy_ != nullptr);
      _impl_.upper_diameter_and_accuracy_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL StaticObject_ConeAndAccuracy::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const StaticObject_ConeAndAccuracy& this_ = static_cast<const StaticObject_ConeAndAccuracy&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL StaticObject_ConeAndAccuracy::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const StaticObject_ConeAndAccuracy& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.spatial.PositionAndAccuracy lower_position_and_accuracy = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.lower_position_and_accuracy_, this_._impl_.lower_position_and_accuracy_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.types.spatial.PositionAndAccuracy upper_position_and_accuracy = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.upper_position_and_accuracy_, this_._impl_.upper_position_and_accuracy_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.types.base.Int64ValueAndAccuracy lower_diameter_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.lower_diameter_and_accuracy_, this_._impl_.lower_diameter_and_accuracy_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.types.base.Int64ValueAndAccuracy upper_diameter_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 0];
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.upper_diameter_and_accuracy_, this_._impl_.upper_diameter_and_accuracy_->GetCachedSize(), target,
        stream);
  }

  // repeated .google.protobuf.Any extension = 15;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_extension_size());
       i < n; i++) {
    const auto& repfield = this_._internal_extension().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            15, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t StaticObject_ConeAndAccuracy::ByteSizeLong(const MessageLite& base) {
  const StaticObject_ConeAndAccuracy& this_ = static_cast<const StaticObject_ConeAndAccuracy&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t StaticObject_ConeAndAccuracy::ByteSizeLong() const {
  const StaticObject_ConeAndAccuracy& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .google.protobuf.Any extension = 15;
    {
      total_size += 1UL * this_._internal_extension_size();
      for (const auto& msg : this_._internal_extension()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // .sensoris.protobuf.types.spatial.PositionAndAccuracy lower_position_and_accuracy = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.lower_position_and_accuracy_);
    }
    // .sensoris.protobuf.types.spatial.PositionAndAccuracy upper_position_and_accuracy = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.upper_position_and_accuracy_);
    }
    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy lower_diameter_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.lower_diameter_and_accuracy_);
    }
    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy upper_diameter_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 0];
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.upper_diameter_and_accuracy_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void StaticObject_ConeAndAccuracy::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StaticObject_ConeAndAccuracy*>(&to_msg);
  auto& from = static_cast<const StaticObject_ConeAndAccuracy&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_extension()->MergeFrom(
      from._internal_extension());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.lower_position_and_accuracy_ != nullptr);
      if (_this->_impl_.lower_position_and_accuracy_ == nullptr) {
        _this->_impl_.lower_position_and_accuracy_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.lower_position_and_accuracy_);
      } else {
        _this->_impl_.lower_position_and_accuracy_->MergeFrom(*from._impl_.lower_position_and_accuracy_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.upper_position_and_accuracy_ != nullptr);
      if (_this->_impl_.upper_position_and_accuracy_ == nullptr) {
        _this->_impl_.upper_position_and_accuracy_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.upper_position_and_accuracy_);
      } else {
        _this->_impl_.upper_position_and_accuracy_->MergeFrom(*from._impl_.upper_position_and_accuracy_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.lower_diameter_and_accuracy_ != nullptr);
      if (_this->_impl_.lower_diameter_and_accuracy_ == nullptr) {
        _this->_impl_.lower_diameter_and_accuracy_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.lower_diameter_and_accuracy_);
      } else {
        _this->_impl_.lower_diameter_and_accuracy_->MergeFrom(*from._impl_.lower_diameter_and_accuracy_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.upper_diameter_and_accuracy_ != nullptr);
      if (_this->_impl_.upper_diameter_and_accuracy_ == nullptr) {
        _this->_impl_.upper_diameter_and_accuracy_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.upper_diameter_and_accuracy_);
      } else {
        _this->_impl_.upper_diameter_and_accuracy_->MergeFrom(*from._impl_.upper_diameter_and_accuracy_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StaticObject_ConeAndAccuracy::CopyFrom(const StaticObject_ConeAndAccuracy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StaticObject_ConeAndAccuracy::InternalSwap(StaticObject_ConeAndAccuracy* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.extension_.InternalSwap(&other->_impl_.extension_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StaticObject_ConeAndAccuracy, _impl_.upper_diameter_and_accuracy_)
      + sizeof(StaticObject_ConeAndAccuracy::_impl_.upper_diameter_and_accuracy_)
      - PROTOBUF_FIELD_OFFSET(StaticObject_ConeAndAccuracy, _impl_.lower_position_and_accuracy_)>(
          reinterpret_cast<char*>(&_impl_.lower_position_and_accuracy_),
          reinterpret_cast<char*>(&other->_impl_.lower_position_and_accuracy_));
}

::google::protobuf::Metadata StaticObject_ConeAndAccuracy::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StaticObject_SurfaceTypeAndConfidence::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<StaticObject_SurfaceTypeAndConfidence>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceTypeAndConfidence, _impl_._has_bits_);
};

void StaticObject_SurfaceTypeAndConfidence::clear_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.confidence_ != nullptr) _impl_.confidence_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
StaticObject_SurfaceTypeAndConfidence::StaticObject_SurfaceTypeAndConfidence(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, StaticObject_SurfaceTypeAndConfidence_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence)
}
PROTOBUF_NDEBUG_INLINE StaticObject_SurfaceTypeAndConfidence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

StaticObject_SurfaceTypeAndConfidence::StaticObject_SurfaceTypeAndConfidence(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const StaticObject_SurfaceTypeAndConfidence& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, StaticObject_SurfaceTypeAndConfidence_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StaticObject_SurfaceTypeAndConfidence* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.confidence_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.confidence_)
                : nullptr;
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence)
}
PROTOBUF_NDEBUG_INLINE StaticObject_SurfaceTypeAndConfidence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void StaticObject_SurfaceTypeAndConfidence::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, confidence_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, confidence_) +
               sizeof(Impl_::type_));
}
StaticObject_SurfaceTypeAndConfidence::~StaticObject_SurfaceTypeAndConfidence() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence)
  SharedDtor(*this);
}
inline void StaticObject_SurfaceTypeAndConfidence::SharedDtor(MessageLite& self) {
  StaticObject_SurfaceTypeAndConfidence& this_ = static_cast<StaticObject_SurfaceTypeAndConfidence&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.confidence_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL StaticObject_SurfaceTypeAndConfidence::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) StaticObject_SurfaceTypeAndConfidence(arena);
}
constexpr auto StaticObject_SurfaceTypeAndConfidence::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(StaticObject_SurfaceTypeAndConfidence),
                                            alignof(StaticObject_SurfaceTypeAndConfidence));
}
constexpr auto StaticObject_SurfaceTypeAndConfidence::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_StaticObject_SurfaceTypeAndConfidence_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &StaticObject_SurfaceTypeAndConfidence::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<StaticObject_SurfaceTypeAndConfidence>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &StaticObject_SurfaceTypeAndConfidence::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<StaticObject_SurfaceTypeAndConfidence>(), &StaticObject_SurfaceTypeAndConfidence::ByteSizeLong,
              &StaticObject_SurfaceTypeAndConfidence::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceTypeAndConfidence, _impl_._cached_size_),
          false,
      },
      &StaticObject_SurfaceTypeAndConfidence::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull StaticObject_SurfaceTypeAndConfidence_class_data_ =
        StaticObject_SurfaceTypeAndConfidence::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
StaticObject_SurfaceTypeAndConfidence::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&StaticObject_SurfaceTypeAndConfidence_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(StaticObject_SurfaceTypeAndConfidence_class_data_.tc_table);
  return StaticObject_SurfaceTypeAndConfidence_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
StaticObject_SurfaceTypeAndConfidence::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceTypeAndConfidence, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    StaticObject_SurfaceTypeAndConfidence_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceTypeAndConfidence, _impl_.confidence_)}},
    // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StaticObject_SurfaceTypeAndConfidence, _impl_.type_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceTypeAndConfidence, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceTypeAndConfidence, _impl_.type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    {PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceTypeAndConfidence, _impl_.confidence_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Confidence>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void StaticObject_SurfaceTypeAndConfidence::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.confidence_ != nullptr);
    _impl_.confidence_->Clear();
  }
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL StaticObject_SurfaceTypeAndConfidence::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const StaticObject_SurfaceTypeAndConfidence& this_ = static_cast<const StaticObject_SurfaceTypeAndConfidence&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL StaticObject_SurfaceTypeAndConfidence::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const StaticObject_SurfaceTypeAndConfidence& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Type type = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_type(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.Confidence confidence = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.confidence_, this_._impl_.confidence_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t StaticObject_SurfaceTypeAndConfidence::ByteSizeLong(const MessageLite& base) {
  const StaticObject_SurfaceTypeAndConfidence& this_ = static_cast<const StaticObject_SurfaceTypeAndConfidence&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t StaticObject_SurfaceTypeAndConfidence::ByteSizeLong() const {
  const StaticObject_SurfaceTypeAndConfidence& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.confidence_);
    }
    // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Type type = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void StaticObject_SurfaceTypeAndConfidence::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StaticObject_SurfaceTypeAndConfidence*>(&to_msg);
  auto& from = static_cast<const StaticObject_SurfaceTypeAndConfidence&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.confidence_ != nullptr);
      if (_this->_impl_.confidence_ == nullptr) {
        _this->_impl_.confidence_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.confidence_);
      } else {
        _this->_impl_.confidence_->MergeFrom(*from._impl_.confidence_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_type() != 0) {
        _this->_impl_.type_ = from._impl_.type_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StaticObject_SurfaceTypeAndConfidence::CopyFrom(const StaticObject_SurfaceTypeAndConfidence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StaticObject_SurfaceTypeAndConfidence::InternalSwap(StaticObject_SurfaceTypeAndConfidence* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceTypeAndConfidence, _impl_.type_)
      + sizeof(StaticObject_SurfaceTypeAndConfidence::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceTypeAndConfidence, _impl_.confidence_)>(
          reinterpret_cast<char*>(&_impl_.confidence_),
          reinterpret_cast<char*>(&other->_impl_.confidence_));
}

::google::protobuf::Metadata StaticObject_SurfaceTypeAndConfidence::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StaticObject_SurfaceMaterialAndConfidence::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<StaticObject_SurfaceMaterialAndConfidence>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceMaterialAndConfidence, _impl_._has_bits_);
};

void StaticObject_SurfaceMaterialAndConfidence::clear_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.confidence_ != nullptr) _impl_.confidence_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void StaticObject_SurfaceMaterialAndConfidence::clear_reflectivity_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.reflectivity_and_accuracy_ != nullptr) _impl_.reflectivity_and_accuracy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
StaticObject_SurfaceMaterialAndConfidence::StaticObject_SurfaceMaterialAndConfidence(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, StaticObject_SurfaceMaterialAndConfidence_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence)
}
PROTOBUF_NDEBUG_INLINE StaticObject_SurfaceMaterialAndConfidence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

StaticObject_SurfaceMaterialAndConfidence::StaticObject_SurfaceMaterialAndConfidence(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const StaticObject_SurfaceMaterialAndConfidence& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, StaticObject_SurfaceMaterialAndConfidence_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StaticObject_SurfaceMaterialAndConfidence* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.confidence_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.confidence_)
                : nullptr;
  _impl_.reflectivity_and_accuracy_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.reflectivity_and_accuracy_)
                : nullptr;
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence)
}
PROTOBUF_NDEBUG_INLINE StaticObject_SurfaceMaterialAndConfidence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void StaticObject_SurfaceMaterialAndConfidence::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, confidence_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, confidence_) +
               sizeof(Impl_::type_));
}
StaticObject_SurfaceMaterialAndConfidence::~StaticObject_SurfaceMaterialAndConfidence() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence)
  SharedDtor(*this);
}
inline void StaticObject_SurfaceMaterialAndConfidence::SharedDtor(MessageLite& self) {
  StaticObject_SurfaceMaterialAndConfidence& this_ = static_cast<StaticObject_SurfaceMaterialAndConfidence&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.confidence_;
  delete this_._impl_.reflectivity_and_accuracy_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL StaticObject_SurfaceMaterialAndConfidence::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) StaticObject_SurfaceMaterialAndConfidence(arena);
}
constexpr auto StaticObject_SurfaceMaterialAndConfidence::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(StaticObject_SurfaceMaterialAndConfidence),
                                            alignof(StaticObject_SurfaceMaterialAndConfidence));
}
constexpr auto StaticObject_SurfaceMaterialAndConfidence::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_StaticObject_SurfaceMaterialAndConfidence_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &StaticObject_SurfaceMaterialAndConfidence::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<StaticObject_SurfaceMaterialAndConfidence>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &StaticObject_SurfaceMaterialAndConfidence::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<StaticObject_SurfaceMaterialAndConfidence>(), &StaticObject_SurfaceMaterialAndConfidence::ByteSizeLong,
              &StaticObject_SurfaceMaterialAndConfidence::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceMaterialAndConfidence, _impl_._cached_size_),
          false,
      },
      &StaticObject_SurfaceMaterialAndConfidence::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull StaticObject_SurfaceMaterialAndConfidence_class_data_ =
        StaticObject_SurfaceMaterialAndConfidence::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
StaticObject_SurfaceMaterialAndConfidence::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&StaticObject_SurfaceMaterialAndConfidence_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(StaticObject_SurfaceMaterialAndConfidence_class_data_.tc_table);
  return StaticObject_SurfaceMaterialAndConfidence_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2>
StaticObject_SurfaceMaterialAndConfidence::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceMaterialAndConfidence, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    StaticObject_SurfaceMaterialAndConfidence_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StaticObject_SurfaceMaterialAndConfidence, _impl_.type_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceMaterialAndConfidence, _impl_.type_)}},
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceMaterialAndConfidence, _impl_.confidence_)}},
    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy reflectivity_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceMaterialAndConfidence, _impl_.reflectivity_and_accuracy_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceMaterialAndConfidence, _impl_.type_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    {PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceMaterialAndConfidence, _impl_.confidence_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy reflectivity_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];
    {PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceMaterialAndConfidence, _impl_.reflectivity_and_accuracy_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Confidence>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64ValueAndAccuracy>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void StaticObject_SurfaceMaterialAndConfidence::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.confidence_ != nullptr);
      _impl_.confidence_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.reflectivity_and_accuracy_ != nullptr);
      _impl_.reflectivity_and_accuracy_->Clear();
    }
  }
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL StaticObject_SurfaceMaterialAndConfidence::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const StaticObject_SurfaceMaterialAndConfidence& this_ = static_cast<const StaticObject_SurfaceMaterialAndConfidence&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL StaticObject_SurfaceMaterialAndConfidence::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const StaticObject_SurfaceMaterialAndConfidence& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Type type = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_type(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.Confidence confidence = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.confidence_, this_._impl_.confidence_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.types.base.Int64ValueAndAccuracy reflectivity_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.reflectivity_and_accuracy_, this_._impl_.reflectivity_and_accuracy_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t StaticObject_SurfaceMaterialAndConfidence::ByteSizeLong(const MessageLite& base) {
  const StaticObject_SurfaceMaterialAndConfidence& this_ = static_cast<const StaticObject_SurfaceMaterialAndConfidence&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t StaticObject_SurfaceMaterialAndConfidence::ByteSizeLong() const {
  const StaticObject_SurfaceMaterialAndConfidence& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.confidence_);
    }
    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy reflectivity_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.reflectivity_and_accuracy_);
    }
    // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Type type = 1;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void StaticObject_SurfaceMaterialAndConfidence::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StaticObject_SurfaceMaterialAndConfidence*>(&to_msg);
  auto& from = static_cast<const StaticObject_SurfaceMaterialAndConfidence&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.confidence_ != nullptr);
      if (_this->_impl_.confidence_ == nullptr) {
        _this->_impl_.confidence_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.confidence_);
      } else {
        _this->_impl_.confidence_->MergeFrom(*from._impl_.confidence_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.reflectivity_and_accuracy_ != nullptr);
      if (_this->_impl_.reflectivity_and_accuracy_ == nullptr) {
        _this->_impl_.reflectivity_and_accuracy_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.reflectivity_and_accuracy_);
      } else {
        _this->_impl_.reflectivity_and_accuracy_->MergeFrom(*from._impl_.reflectivity_and_accuracy_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_type() != 0) {
        _this->_impl_.type_ = from._impl_.type_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StaticObject_SurfaceMaterialAndConfidence::CopyFrom(const StaticObject_SurfaceMaterialAndConfidence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StaticObject_SurfaceMaterialAndConfidence::InternalSwap(StaticObject_SurfaceMaterialAndConfidence* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceMaterialAndConfidence, _impl_.type_)
      + sizeof(StaticObject_SurfaceMaterialAndConfidence::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceMaterialAndConfidence, _impl_.confidence_)>(
          reinterpret_cast<char*>(&_impl_.confidence_),
          reinterpret_cast<char*>(&other->_impl_.confidence_));
}

::google::protobuf::Metadata StaticObject_SurfaceMaterialAndConfidence::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StaticObject_SurfaceColorAndConfidence::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<StaticObject_SurfaceColorAndConfidence>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceColorAndConfidence, _impl_._has_bits_);
};

void StaticObject_SurfaceColorAndConfidence::clear_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.confidence_ != nullptr) _impl_.confidence_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
StaticObject_SurfaceColorAndConfidence::StaticObject_SurfaceColorAndConfidence(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, StaticObject_SurfaceColorAndConfidence_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence)
}
PROTOBUF_NDEBUG_INLINE StaticObject_SurfaceColorAndConfidence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

StaticObject_SurfaceColorAndConfidence::StaticObject_SurfaceColorAndConfidence(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const StaticObject_SurfaceColorAndConfidence& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, StaticObject_SurfaceColorAndConfidence_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StaticObject_SurfaceColorAndConfidence* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.confidence_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.confidence_)
                : nullptr;
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence)
}
PROTOBUF_NDEBUG_INLINE StaticObject_SurfaceColorAndConfidence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void StaticObject_SurfaceColorAndConfidence::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, confidence_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, confidence_) +
               sizeof(Impl_::type_));
}
StaticObject_SurfaceColorAndConfidence::~StaticObject_SurfaceColorAndConfidence() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence)
  SharedDtor(*this);
}
inline void StaticObject_SurfaceColorAndConfidence::SharedDtor(MessageLite& self) {
  StaticObject_SurfaceColorAndConfidence& this_ = static_cast<StaticObject_SurfaceColorAndConfidence&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.confidence_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL StaticObject_SurfaceColorAndConfidence::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) StaticObject_SurfaceColorAndConfidence(arena);
}
constexpr auto StaticObject_SurfaceColorAndConfidence::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(StaticObject_SurfaceColorAndConfidence),
                                            alignof(StaticObject_SurfaceColorAndConfidence));
}
constexpr auto StaticObject_SurfaceColorAndConfidence::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_StaticObject_SurfaceColorAndConfidence_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &StaticObject_SurfaceColorAndConfidence::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<StaticObject_SurfaceColorAndConfidence>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &StaticObject_SurfaceColorAndConfidence::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<StaticObject_SurfaceColorAndConfidence>(), &StaticObject_SurfaceColorAndConfidence::ByteSizeLong,
              &StaticObject_SurfaceColorAndConfidence::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceColorAndConfidence, _impl_._cached_size_),
          false,
      },
      &StaticObject_SurfaceColorAndConfidence::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull StaticObject_SurfaceColorAndConfidence_class_data_ =
        StaticObject_SurfaceColorAndConfidence::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
StaticObject_SurfaceColorAndConfidence::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&StaticObject_SurfaceColorAndConfidence_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(StaticObject_SurfaceColorAndConfidence_class_data_.tc_table);
  return StaticObject_SurfaceColorAndConfidence_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
StaticObject_SurfaceColorAndConfidence::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceColorAndConfidence, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    StaticObject_SurfaceColorAndConfidence_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceColorAndConfidence, _impl_.confidence_)}},
    // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StaticObject_SurfaceColorAndConfidence, _impl_.type_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceColorAndConfidence, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceColorAndConfidence, _impl_.type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    {PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceColorAndConfidence, _impl_.confidence_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Confidence>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void StaticObject_SurfaceColorAndConfidence::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.confidence_ != nullptr);
    _impl_.confidence_->Clear();
  }
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL StaticObject_SurfaceColorAndConfidence::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const StaticObject_SurfaceColorAndConfidence& this_ = static_cast<const StaticObject_SurfaceColorAndConfidence&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL StaticObject_SurfaceColorAndConfidence::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const StaticObject_SurfaceColorAndConfidence& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Type type = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_type(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.Confidence confidence = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.confidence_, this_._impl_.confidence_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t StaticObject_SurfaceColorAndConfidence::ByteSizeLong(const MessageLite& base) {
  const StaticObject_SurfaceColorAndConfidence& this_ = static_cast<const StaticObject_SurfaceColorAndConfidence&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t StaticObject_SurfaceColorAndConfidence::ByteSizeLong() const {
  const StaticObject_SurfaceColorAndConfidence& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.confidence_);
    }
    // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Type type = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void StaticObject_SurfaceColorAndConfidence::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StaticObject_SurfaceColorAndConfidence*>(&to_msg);
  auto& from = static_cast<const StaticObject_SurfaceColorAndConfidence&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.confidence_ != nullptr);
      if (_this->_impl_.confidence_ == nullptr) {
        _this->_impl_.confidence_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.confidence_);
      } else {
        _this->_impl_.confidence_->MergeFrom(*from._impl_.confidence_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_type() != 0) {
        _this->_impl_.type_ = from._impl_.type_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StaticObject_SurfaceColorAndConfidence::CopyFrom(const StaticObject_SurfaceColorAndConfidence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StaticObject_SurfaceColorAndConfidence::InternalSwap(StaticObject_SurfaceColorAndConfidence* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceColorAndConfidence, _impl_.type_)
      + sizeof(StaticObject_SurfaceColorAndConfidence::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(StaticObject_SurfaceColorAndConfidence, _impl_.confidence_)>(
          reinterpret_cast<char*>(&_impl_.confidence_),
          reinterpret_cast<char*>(&other->_impl_.confidence_));
}

::google::protobuf::Metadata StaticObject_SurfaceColorAndConfidence::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StaticObject::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<StaticObject>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StaticObject, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::objectdetection::StaticObject, _impl_._oneof_case_);
};

void StaticObject::clear_envelope() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.envelope_ != nullptr) _impl_.envelope_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void StaticObject::clear_object_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.object_id_ != nullptr) _impl_.object_id_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void StaticObject::clear_existence_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.existence_confidence_ != nullptr) _impl_.existence_confidence_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void StaticObject::clear_detection_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.detection_status_ != nullptr) _impl_.detection_status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void StaticObject::set_allocated_rectangular_box_and_accuracy(::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy* PROTOBUF_NULLABLE rectangular_box_and_accuracy) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_geometry();
  if (rectangular_box_and_accuracy) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(rectangular_box_and_accuracy)->GetArena();
    if (message_arena != submessage_arena) {
      rectangular_box_and_accuracy = ::google::protobuf::internal::GetOwnedMessage(message_arena, rectangular_box_and_accuracy, submessage_arena);
    }
    set_has_rectangular_box_and_accuracy();
    _impl_.geometry_.rectangular_box_and_accuracy_ = rectangular_box_and_accuracy;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.categories.objectdetection.StaticObject.rectangular_box_and_accuracy)
}
void StaticObject::clear_rectangular_box_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (geometry_case() == kRectangularBoxAndAccuracy) {
    if (GetArena() == nullptr) {
      delete _impl_.geometry_.rectangular_box_and_accuracy_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.geometry_.rectangular_box_and_accuracy_);
    }
    clear_has_geometry();
  }
}
void StaticObject::set_allocated_cone_and_accuracy(::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy* PROTOBUF_NULLABLE cone_and_accuracy) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_geometry();
  if (cone_and_accuracy) {
    ::google::protobuf::Arena* submessage_arena = cone_and_accuracy->GetArena();
    if (message_arena != submessage_arena) {
      cone_and_accuracy = ::google::protobuf::internal::GetOwnedMessage(message_arena, cone_and_accuracy, submessage_arena);
    }
    set_has_cone_and_accuracy();
    _impl_.geometry_.cone_and_accuracy_ = cone_and_accuracy;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.categories.objectdetection.StaticObject.cone_and_accuracy)
}
StaticObject::StaticObject(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, StaticObject_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.objectdetection.StaticObject)
}
PROTOBUF_NDEBUG_INLINE StaticObject::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::categories::objectdetection::StaticObject& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        surface_color_and_confidence_{visibility, arena, from.surface_color_and_confidence_},
        geometry_{},
        _oneof_case_{from._oneof_case_[0]} {}

StaticObject::StaticObject(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const StaticObject& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, StaticObject_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StaticObject* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.envelope_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.envelope_)
                : nullptr;
  _impl_.object_id_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.object_id_)
                : nullptr;
  _impl_.existence_confidence_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.existence_confidence_)
                : nullptr;
  _impl_.detection_status_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.detection_status_)
                : nullptr;
  _impl_.type_and_confidence_ = ((cached_has_bits & 0x00000010u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.type_and_confidence_)
                : nullptr;
  _impl_.surface_type_and_confidence_ = ((cached_has_bits & 0x00000020u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.surface_type_and_confidence_)
                : nullptr;
  _impl_.surface_material_and_confidence_ = ((cached_has_bits & 0x00000040u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.surface_material_and_confidence_)
                : nullptr;
  switch (geometry_case()) {
    case GEOMETRY_NOT_SET:
      break;
      case kRectangularBoxAndAccuracy:
        _impl_.geometry_.rectangular_box_and_accuracy_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.geometry_.rectangular_box_and_accuracy_);
        break;
      case kConeAndAccuracy:
        _impl_.geometry_.cone_and_accuracy_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.geometry_.cone_and_accuracy_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.objectdetection.StaticObject)
}
PROTOBUF_NDEBUG_INLINE StaticObject::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        surface_color_and_confidence_{visibility, arena},
        geometry_{},
        _oneof_case_{} {}

inline void StaticObject::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, envelope_),
           0,
           offsetof(Impl_, surface_material_and_confidence_) -
               offsetof(Impl_, envelope_) +
               sizeof(Impl_::surface_material_and_confidence_));
}
StaticObject::~StaticObject() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.objectdetection.StaticObject)
  SharedDtor(*this);
}
inline void StaticObject::SharedDtor(MessageLite& self) {
  StaticObject& this_ = static_cast<StaticObject&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.envelope_;
  delete this_._impl_.object_id_;
  delete this_._impl_.existence_confidence_;
  delete this_._impl_.detection_status_;
  delete this_._impl_.type_and_confidence_;
  delete this_._impl_.surface_type_and_confidence_;
  delete this_._impl_.surface_material_and_confidence_;
  if (this_.has_geometry()) {
    this_.clear_geometry();
  }
  this_._impl_.~Impl_();
}

void StaticObject::clear_geometry() {
// @@protoc_insertion_point(one_of_clear_start:sensoris.protobuf.categories.objectdetection.StaticObject)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (geometry_case()) {
    case kRectangularBoxAndAccuracy: {
      if (GetArena() == nullptr) {
        delete _impl_.geometry_.rectangular_box_and_accuracy_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.geometry_.rectangular_box_and_accuracy_);
      }
      break;
    }
    case kConeAndAccuracy: {
      if (GetArena() == nullptr) {
        delete _impl_.geometry_.cone_and_accuracy_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.geometry_.cone_and_accuracy_);
      }
      break;
    }
    case GEOMETRY_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = GEOMETRY_NOT_SET;
}


inline void* PROTOBUF_NONNULL StaticObject::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) StaticObject(arena);
}
constexpr auto StaticObject::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.surface_color_and_confidence_) +
          decltype(StaticObject::_impl_.surface_color_and_confidence_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(StaticObject), alignof(StaticObject), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&StaticObject::PlacementNew_,
                                 sizeof(StaticObject),
                                 alignof(StaticObject));
  }
}
constexpr auto StaticObject::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_StaticObject_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &StaticObject::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<StaticObject>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &StaticObject::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<StaticObject>(), &StaticObject::ByteSizeLong,
              &StaticObject::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(StaticObject, _impl_._cached_size_),
          false,
      },
      &StaticObject::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull StaticObject_class_data_ =
        StaticObject::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
StaticObject::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&StaticObject_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(StaticObject_class_data_.tc_table);
  return StaticObject_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 10, 0, 2>
StaticObject::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StaticObject, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    10,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    StaticObject_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::objectdetection::StaticObject>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.envelope_)}},
    // .google.protobuf.Int64Value object_id = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.object_id_)}},
    // .sensoris.protobuf.types.base.Confidence existence_confidence = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.existence_confidence_)}},
    // .sensoris.protobuf.types.base.EventDetectionStatus detection_status = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.detection_status_)}},
    // .sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence type_and_confidence = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 4, PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.type_and_confidence_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence surface_type_and_confidence = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 5, 7, PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.surface_type_and_confidence_)}},
    // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence surface_material_and_confidence = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 6, 8, PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.surface_material_and_confidence_)}},
    // repeated .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence surface_color_and_confidence = 10;
    {::_pbi::TcParser::FastMtR1,
     {82, 63, 9, PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.surface_color_and_confidence_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    {PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.envelope_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Int64Value object_id = 2;
    {PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.object_id_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.Confidence existence_confidence = 3;
    {PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.existence_confidence_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.EventDetectionStatus detection_status = 4;
    {PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.detection_status_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence type_and_confidence = 5;
    {PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.type_and_confidence_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 6;
    {PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.geometry_.rectangular_box_and_accuracy_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy cone_and_accuracy = 7;
    {PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.geometry_.cone_and_accuracy_), _Internal::kOneofCaseOffset + 0, 6,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence surface_type_and_confidence = 8;
    {PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.surface_type_and_confidence_), _Internal::kHasBitsOffset + 5, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence surface_material_and_confidence = 9;
    {PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.surface_material_and_confidence_), _Internal::kHasBitsOffset + 6, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence surface_color_and_confidence = 10;
    {PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.surface_color_and_confidence_), -1, 9,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::EventEnvelope>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Confidence>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::EventDetectionStatus>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void StaticObject::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.objectdetection.StaticObject)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.surface_color_and_confidence_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.envelope_ != nullptr);
      _impl_.envelope_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.object_id_ != nullptr);
      _impl_.object_id_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.existence_confidence_ != nullptr);
      _impl_.existence_confidence_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.detection_status_ != nullptr);
      _impl_.detection_status_->Clear();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(_impl_.type_and_confidence_ != nullptr);
      _impl_.type_and_confidence_->Clear();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(_impl_.surface_type_and_confidence_ != nullptr);
      _impl_.surface_type_and_confidence_->Clear();
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      ABSL_DCHECK(_impl_.surface_material_and_confidence_ != nullptr);
      _impl_.surface_material_and_confidence_->Clear();
    }
  }
  clear_geometry();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL StaticObject::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const StaticObject& this_ = static_cast<const StaticObject&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL StaticObject::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const StaticObject& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.objectdetection.StaticObject)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.envelope_, this_._impl_.envelope_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Int64Value object_id = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.object_id_, this_._impl_.object_id_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.types.base.Confidence existence_confidence = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.existence_confidence_, this_._impl_.existence_confidence_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.types.base.EventDetectionStatus detection_status = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.detection_status_, this_._impl_.detection_status_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence type_and_confidence = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.type_and_confidence_, this_._impl_.type_and_confidence_->GetCachedSize(), target,
        stream);
  }

  switch (this_.geometry_case()) {
    case kRectangularBoxAndAccuracy: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, *this_._impl_.geometry_.rectangular_box_and_accuracy_, this_._impl_.geometry_.rectangular_box_and_accuracy_->GetCachedSize(), target,
          stream);
      break;
    }
    case kConeAndAccuracy: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          7, *this_._impl_.geometry_.cone_and_accuracy_, this_._impl_.geometry_.cone_and_accuracy_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence surface_type_and_confidence = 8;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, *this_._impl_.surface_type_and_confidence_, this_._impl_.surface_type_and_confidence_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence surface_material_and_confidence = 9;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        9, *this_._impl_.surface_material_and_confidence_, this_._impl_.surface_material_and_confidence_->GetCachedSize(), target,
        stream);
  }

  // repeated .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence surface_color_and_confidence = 10;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_surface_color_and_confidence_size());
       i < n; i++) {
    const auto& repfield = this_._internal_surface_color_and_confidence().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            10, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.objectdetection.StaticObject)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t StaticObject::ByteSizeLong(const MessageLite& base) {
  const StaticObject& this_ = static_cast<const StaticObject&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t StaticObject::ByteSizeLong() const {
  const StaticObject& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.objectdetection.StaticObject)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence surface_color_and_confidence = 10;
    {
      total_size += 1UL * this_._internal_surface_color_and_confidence_size();
      for (const auto& msg : this_._internal_surface_color_and_confidence()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.envelope_);
    }
    // .google.protobuf.Int64Value object_id = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.object_id_);
    }
    // .sensoris.protobuf.types.base.Confidence existence_confidence = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.existence_confidence_);
    }
    // .sensoris.protobuf.types.base.EventDetectionStatus detection_status = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.detection_status_);
    }
    // .sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence type_and_confidence = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_and_confidence_);
    }
    // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence surface_type_and_confidence = 8;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.surface_type_and_confidence_);
    }
    // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence surface_material_and_confidence = 9;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.surface_material_and_confidence_);
    }
  }
  switch (this_.geometry_case()) {
    // .sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 6;
    case kRectangularBoxAndAccuracy: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.geometry_.rectangular_box_and_accuracy_);
      break;
    }
    // .sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy cone_and_accuracy = 7;
    case kConeAndAccuracy: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.geometry_.cone_and_accuracy_);
      break;
    }
    case GEOMETRY_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void StaticObject::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StaticObject*>(&to_msg);
  auto& from = static_cast<const StaticObject&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.objectdetection.StaticObject)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_surface_color_and_confidence()->MergeFrom(
      from._internal_surface_color_and_confidence());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.envelope_ != nullptr);
      if (_this->_impl_.envelope_ == nullptr) {
        _this->_impl_.envelope_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.envelope_);
      } else {
        _this->_impl_.envelope_->MergeFrom(*from._impl_.envelope_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.object_id_ != nullptr);
      if (_this->_impl_.object_id_ == nullptr) {
        _this->_impl_.object_id_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.object_id_);
      } else {
        _this->_impl_.object_id_->MergeFrom(*from._impl_.object_id_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.existence_confidence_ != nullptr);
      if (_this->_impl_.existence_confidence_ == nullptr) {
        _this->_impl_.existence_confidence_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.existence_confidence_);
      } else {
        _this->_impl_.existence_confidence_->MergeFrom(*from._impl_.existence_confidence_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.detection_status_ != nullptr);
      if (_this->_impl_.detection_status_ == nullptr) {
        _this->_impl_.detection_status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.detection_status_);
      } else {
        _this->_impl_.detection_status_->MergeFrom(*from._impl_.detection_status_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(from._impl_.type_and_confidence_ != nullptr);
      if (_this->_impl_.type_and_confidence_ == nullptr) {
        _this->_impl_.type_and_confidence_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.type_and_confidence_);
      } else {
        _this->_impl_.type_and_confidence_->MergeFrom(*from._impl_.type_and_confidence_);
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(from._impl_.surface_type_and_confidence_ != nullptr);
      if (_this->_impl_.surface_type_and_confidence_ == nullptr) {
        _this->_impl_.surface_type_and_confidence_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.surface_type_and_confidence_);
      } else {
        _this->_impl_.surface_type_and_confidence_->MergeFrom(*from._impl_.surface_type_and_confidence_);
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      ABSL_DCHECK(from._impl_.surface_material_and_confidence_ != nullptr);
      if (_this->_impl_.surface_material_and_confidence_ == nullptr) {
        _this->_impl_.surface_material_and_confidence_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.surface_material_and_confidence_);
      } else {
        _this->_impl_.surface_material_and_confidence_->MergeFrom(*from._impl_.surface_material_and_confidence_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_geometry();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kRectangularBoxAndAccuracy: {
        if (oneof_needs_init) {
          _this->_impl_.geometry_.rectangular_box_and_accuracy_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.geometry_.rectangular_box_and_accuracy_);
        } else {
          _this->_impl_.geometry_.rectangular_box_and_accuracy_->MergeFrom(*from._impl_.geometry_.rectangular_box_and_accuracy_);
        }
        break;
      }
      case kConeAndAccuracy: {
        if (oneof_needs_init) {
          _this->_impl_.geometry_.cone_and_accuracy_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.geometry_.cone_and_accuracy_);
        } else {
          _this->_impl_.geometry_.cone_and_accuracy_->MergeFrom(*from._impl_.geometry_.cone_and_accuracy_);
        }
        break;
      }
      case GEOMETRY_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StaticObject::CopyFrom(const StaticObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.objectdetection.StaticObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StaticObject::InternalSwap(StaticObject* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.surface_color_and_confidence_.InternalSwap(&other->_impl_.surface_color_and_confidence_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.surface_material_and_confidence_)
      + sizeof(StaticObject::_impl_.surface_material_and_confidence_)
      - PROTOBUF_FIELD_OFFSET(StaticObject, _impl_.envelope_)>(
          reinterpret_cast<char*>(&_impl_.envelope_),
          reinterpret_cast<char*>(&other->_impl_.envelope_));
  swap(_impl_.geometry_, other->_impl_.geometry_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata StaticObject::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ObjectDetectionCategory::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ObjectDetectionCategory>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ObjectDetectionCategory, _impl_._has_bits_);
};

void ObjectDetectionCategory::clear_envelope() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.envelope_ != nullptr) _impl_.envelope_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ObjectDetectionCategory::ObjectDetectionCategory(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ObjectDetectionCategory_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory)
}
PROTOBUF_NDEBUG_INLINE ObjectDetectionCategory::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        movable_object_{visibility, arena, from.movable_object_},
        static_object_{visibility, arena, from.static_object_} {}

ObjectDetectionCategory::ObjectDetectionCategory(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ObjectDetectionCategory& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ObjectDetectionCategory_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ObjectDetectionCategory* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.envelope_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.envelope_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory)
}
PROTOBUF_NDEBUG_INLINE ObjectDetectionCategory::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        movable_object_{visibility, arena},
        static_object_{visibility, arena} {}

inline void ObjectDetectionCategory::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.envelope_ = {};
}
ObjectDetectionCategory::~ObjectDetectionCategory() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory)
  SharedDtor(*this);
}
inline void ObjectDetectionCategory::SharedDtor(MessageLite& self) {
  ObjectDetectionCategory& this_ = static_cast<ObjectDetectionCategory&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.envelope_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ObjectDetectionCategory::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ObjectDetectionCategory(arena);
}
constexpr auto ObjectDetectionCategory::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ObjectDetectionCategory, _impl_.movable_object_) +
          decltype(ObjectDetectionCategory::_impl_.movable_object_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ObjectDetectionCategory, _impl_.static_object_) +
          decltype(ObjectDetectionCategory::_impl_.static_object_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ObjectDetectionCategory), alignof(ObjectDetectionCategory), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ObjectDetectionCategory::PlacementNew_,
                                 sizeof(ObjectDetectionCategory),
                                 alignof(ObjectDetectionCategory));
  }
}
constexpr auto ObjectDetectionCategory::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ObjectDetectionCategory_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ObjectDetectionCategory::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ObjectDetectionCategory>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ObjectDetectionCategory::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ObjectDetectionCategory>(), &ObjectDetectionCategory::ByteSizeLong,
              &ObjectDetectionCategory::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ObjectDetectionCategory, _impl_._cached_size_),
          false,
      },
      &ObjectDetectionCategory::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ObjectDetectionCategory_class_data_ =
        ObjectDetectionCategory::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ObjectDetectionCategory::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ObjectDetectionCategory_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ObjectDetectionCategory_class_data_.tc_table);
  return ObjectDetectionCategory_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2>
ObjectDetectionCategory::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ObjectDetectionCategory, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ObjectDetectionCategory_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::objectdetection::ObjectDetectionCategory>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ObjectDetectionCategory, _impl_.envelope_)}},
    // repeated .sensoris.protobuf.categories.objectdetection.MovableObject movable_object = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(ObjectDetectionCategory, _impl_.movable_object_)}},
    // repeated .sensoris.protobuf.categories.objectdetection.StaticObject static_object = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(ObjectDetectionCategory, _impl_.static_object_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
    {PROTOBUF_FIELD_OFFSET(ObjectDetectionCategory, _impl_.envelope_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .sensoris.protobuf.categories.objectdetection.MovableObject movable_object = 2;
    {PROTOBUF_FIELD_OFFSET(ObjectDetectionCategory, _impl_.movable_object_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .sensoris.protobuf.categories.objectdetection.StaticObject static_object = 3;
    {PROTOBUF_FIELD_OFFSET(ObjectDetectionCategory, _impl_.static_object_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::CategoryEnvelope>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::objectdetection::MovableObject>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::objectdetection::StaticObject>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ObjectDetectionCategory::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.movable_object_.Clear();
  _impl_.static_object_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.envelope_ != nullptr);
    _impl_.envelope_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ObjectDetectionCategory::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ObjectDetectionCategory& this_ = static_cast<const ObjectDetectionCategory&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ObjectDetectionCategory::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ObjectDetectionCategory& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.envelope_, this_._impl_.envelope_->GetCachedSize(), target,
        stream);
  }

  // repeated .sensoris.protobuf.categories.objectdetection.MovableObject movable_object = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_movable_object_size());
       i < n; i++) {
    const auto& repfield = this_._internal_movable_object().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .sensoris.protobuf.categories.objectdetection.StaticObject static_object = 3;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_static_object_size());
       i < n; i++) {
    const auto& repfield = this_._internal_static_object().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ObjectDetectionCategory::ByteSizeLong(const MessageLite& base) {
  const ObjectDetectionCategory& this_ = static_cast<const ObjectDetectionCategory&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ObjectDetectionCategory::ByteSizeLong() const {
  const ObjectDetectionCategory& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .sensoris.protobuf.categories.objectdetection.MovableObject movable_object = 2;
    {
      total_size += 1UL * this_._internal_movable_object_size();
      for (const auto& msg : this_._internal_movable_object()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .sensoris.protobuf.categories.objectdetection.StaticObject static_object = 3;
    {
      total_size += 1UL * this_._internal_static_object_size();
      for (const auto& msg : this_._internal_static_object()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // .sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.envelope_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ObjectDetectionCategory::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ObjectDetectionCategory*>(&to_msg);
  auto& from = static_cast<const ObjectDetectionCategory&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_movable_object()->MergeFrom(
      from._internal_movable_object());
  _this->_internal_mutable_static_object()->MergeFrom(
      from._internal_static_object());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.envelope_ != nullptr);
    if (_this->_impl_.envelope_ == nullptr) {
      _this->_impl_.envelope_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.envelope_);
    } else {
      _this->_impl_.envelope_->MergeFrom(*from._impl_.envelope_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ObjectDetectionCategory::CopyFrom(const ObjectDetectionCategory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ObjectDetectionCategory::InternalSwap(ObjectDetectionCategory* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.movable_object_.InternalSwap(&other->_impl_.movable_object_);
  _impl_.static_object_.InternalSwap(&other->_impl_.static_object_);
  swap(_impl_.envelope_, other->_impl_.envelope_);
}

::google::protobuf::Metadata ObjectDetectionCategory::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace objectdetection
}  // namespace categories
}  // namespace protobuf
}  // namespace sensoris
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
