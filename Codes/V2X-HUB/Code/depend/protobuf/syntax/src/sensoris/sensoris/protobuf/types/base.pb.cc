// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: sensoris/protobuf/types/base.proto
// Protobuf C++ Version: 6.31.1

#include "sensoris/protobuf/types/base.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace sensoris {
namespace protobuf {
namespace types {
namespace base {

inline constexpr Urn::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR Urn::Urn(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Urn_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UrnDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UrnDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UrnDefaultTypeInternal() {}
  union {
    Urn _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UrnDefaultTypeInternal _Urn_default_instance_;

inline constexpr Path::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : field_number_{},
        _field_number_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Path::Path(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Path_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PathDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PathDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PathDefaultTypeInternal() {}
  union {
    Path _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PathDefaultTypeInternal _Path_default_instance_;

inline constexpr Int64ValueAndExponent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        value_{::int64_t{0}},
        exponent_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR Int64ValueAndExponent::Int64ValueAndExponent(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Int64ValueAndExponent_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Int64ValueAndExponentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Int64ValueAndExponentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Int64ValueAndExponentDefaultTypeInternal() {}
  union {
    Int64ValueAndExponent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Int64ValueAndExponentDefaultTypeInternal _Int64ValueAndExponent_default_instance_;

inline constexpr EventEnvelope_DetectionType::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        type_{static_cast< ::sensoris::protobuf::types::base::EventEnvelope_DetectionType_Type >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR EventEnvelope_DetectionType::EventEnvelope_DetectionType(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(EventEnvelope_DetectionType_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EventEnvelope_DetectionTypeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventEnvelope_DetectionTypeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventEnvelope_DetectionTypeDefaultTypeInternal() {}
  union {
    EventEnvelope_DetectionType _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventEnvelope_DetectionTypeDefaultTypeInternal _EventEnvelope_DetectionType_default_instance_;

inline constexpr Confidence::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        value_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR Confidence::Confidence(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Confidence_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ConfidenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConfidenceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConfidenceDefaultTypeInternal() {}
  union {
    Confidence _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConfidenceDefaultTypeInternal _Confidence_default_instance_;

inline constexpr Version::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        major_{nullptr},
        minor_{nullptr},
        patch_{nullptr},
        name_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Version::Version(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Version_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct VersionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VersionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VersionDefaultTypeInternal() {}
  union {
    Version _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VersionDefaultTypeInternal _Version_default_instance_;

inline constexpr Timestamp::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        posix_time_{nullptr},
        posix_time_fraction_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Timestamp::Timestamp(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Timestamp_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TimestampDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TimestampDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TimestampDefaultTypeInternal() {}
  union {
    Timestamp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TimestampDefaultTypeInternal _Timestamp_default_instance_;

inline constexpr RelativeInt64Histogram_Bin::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        lower_endpoint_inclusive_{nullptr},
        relative_frequency_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RelativeInt64Histogram_Bin::RelativeInt64Histogram_Bin(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RelativeInt64Histogram_Bin_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RelativeInt64Histogram_BinDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RelativeInt64Histogram_BinDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RelativeInt64Histogram_BinDefaultTypeInternal() {}
  union {
    RelativeInt64Histogram_Bin _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RelativeInt64Histogram_BinDefaultTypeInternal _RelativeInt64Histogram_Bin_default_instance_;

inline constexpr Int64ValueAndAccuracy_ValueAndAccuracy::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        accuracy_{nullptr},
        value_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR Int64ValueAndAccuracy_ValueAndAccuracy::Int64ValueAndAccuracy_ValueAndAccuracy(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Int64ValueAndAccuracy_ValueAndAccuracy_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Int64ValueAndAccuracy_ValueAndAccuracyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Int64ValueAndAccuracy_ValueAndAccuracyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Int64ValueAndAccuracy_ValueAndAccuracyDefaultTypeInternal() {}
  union {
    Int64ValueAndAccuracy_ValueAndAccuracy _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Int64ValueAndAccuracy_ValueAndAccuracyDefaultTypeInternal _Int64ValueAndAccuracy_ValueAndAccuracy_default_instance_;

inline constexpr Int64Matrix3x3::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        a11_{nullptr},
        a12_{nullptr},
        a13_{nullptr},
        a21_{nullptr},
        a22_{nullptr},
        a23_{nullptr},
        a31_{nullptr},
        a32_{nullptr},
        a33_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Int64Matrix3x3::Int64Matrix3x3(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Int64Matrix3x3_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Int64Matrix3x3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Int64Matrix3x3DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Int64Matrix3x3DefaultTypeInternal() {}
  union {
    Int64Matrix3x3 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Int64Matrix3x3DefaultTypeInternal _Int64Matrix3x3_default_instance_;

inline constexpr Int64Interval::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        min_inclusive_{nullptr},
        max_exclusive_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Int64Interval::Int64Interval(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Int64Interval_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Int64IntervalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Int64IntervalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Int64IntervalDefaultTypeInternal() {}
  union {
    Int64Interval _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Int64IntervalDefaultTypeInternal _Int64Interval_default_instance_;

inline constexpr ExtensionTypeUrl::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : type_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ExtensionTypeUrl::ExtensionTypeUrl(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ExtensionTypeUrl_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ExtensionTypeUrlDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExtensionTypeUrlDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExtensionTypeUrlDefaultTypeInternal() {}
  union {
    ExtensionTypeUrl _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExtensionTypeUrlDefaultTypeInternal _ExtensionTypeUrl_default_instance_;

inline constexpr EventDetectionStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        confidence_{nullptr},
        type_{static_cast< ::sensoris::protobuf::types::base::EventDetectionStatus_Type >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR EventDetectionStatus::EventDetectionStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(EventDetectionStatus_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EventDetectionStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventDetectionStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventDetectionStatusDefaultTypeInternal() {}
  union {
    EventDetectionStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventDetectionStatusDefaultTypeInternal _EventDetectionStatus_default_instance_;

inline constexpr CountAndConfidence::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        count_{nullptr},
        confidence_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CountAndConfidence::CountAndConfidence(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CountAndConfidence_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CountAndConfidenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CountAndConfidenceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CountAndConfidenceDefaultTypeInternal() {}
  union {
    CountAndConfidence _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CountAndConfidenceDefaultTypeInternal _CountAndConfidence_default_instance_;

inline constexpr CategoryEnvelope::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : extension_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CategoryEnvelope::CategoryEnvelope(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CategoryEnvelope_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CategoryEnvelopeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CategoryEnvelopeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CategoryEnvelopeDefaultTypeInternal() {}
  union {
    CategoryEnvelope _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CategoryEnvelopeDefaultTypeInternal _CategoryEnvelope_default_instance_;

inline constexpr AbsoluteInt64Histogram_Bin::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        lower_endpoint_inclusive_{nullptr},
        frequency_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR AbsoluteInt64Histogram_Bin::AbsoluteInt64Histogram_Bin(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(AbsoluteInt64Histogram_Bin_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AbsoluteInt64Histogram_BinDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AbsoluteInt64Histogram_BinDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AbsoluteInt64Histogram_BinDefaultTypeInternal() {}
  union {
    AbsoluteInt64Histogram_Bin _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AbsoluteInt64Histogram_BinDefaultTypeInternal _AbsoluteInt64Histogram_Bin_default_instance_;

inline constexpr VersionRange::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        min_inclusive_{nullptr},
        max_exclusive_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR VersionRange::VersionRange(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(VersionRange_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct VersionRangeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VersionRangeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VersionRangeDefaultTypeInternal() {}
  union {
    VersionRange _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VersionRangeDefaultTypeInternal _VersionRange_default_instance_;

inline constexpr TimestampInterval::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        start_inclusive_{nullptr},
        end_exclusive_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR TimestampInterval::TimestampInterval(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TimestampInterval_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TimestampIntervalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TimestampIntervalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TimestampIntervalDefaultTypeInternal() {}
  union {
    TimestampInterval _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TimestampIntervalDefaultTypeInternal _TimestampInterval_default_instance_;

inline constexpr ExtensionTypeUrlAndVersion::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        type_url_{nullptr},
        version_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ExtensionTypeUrlAndVersion::ExtensionTypeUrlAndVersion(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ExtensionTypeUrlAndVersion_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ExtensionTypeUrlAndVersionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExtensionTypeUrlAndVersionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExtensionTypeUrlAndVersionDefaultTypeInternal() {}
  union {
    ExtensionTypeUrlAndVersion _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExtensionTypeUrlAndVersionDefaultTypeInternal _ExtensionTypeUrlAndVersion_default_instance_;

inline constexpr ExtensionPath::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        to_extension_{nullptr},
        type_url_{nullptr},
        in_extension_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ExtensionPath::ExtensionPath(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ExtensionPath_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ExtensionPathDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExtensionPathDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExtensionPathDefaultTypeInternal() {}
  union {
    ExtensionPath _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExtensionPathDefaultTypeInternal _ExtensionPath_default_instance_;

inline constexpr EventEnvelope::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        extension_{},
        id_{nullptr},
        timestamp_{nullptr},
        detection_type_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR EventEnvelope::EventEnvelope(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(EventEnvelope_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EventEnvelopeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventEnvelopeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventEnvelopeDefaultTypeInternal() {}
  union {
    EventEnvelope _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventEnvelopeDefaultTypeInternal _EventEnvelope_default_instance_;

inline constexpr Entity::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        extension_{},
        primary_id_{nullptr},
        secondary_id_{nullptr},
        type_{nullptr},
        software_version_{nullptr},
        hardware_version_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Entity::Entity(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Entity_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EntityDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EntityDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EntityDefaultTypeInternal() {}
  union {
    Entity _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EntityDefaultTypeInternal _Entity_default_instance_;

inline constexpr RelativeInt64Histogram::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        bin_{},
        timestamp_interval_{nullptr},
        total_elements_{nullptr},
        upper_endpoint_inclusive_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RelativeInt64Histogram::RelativeInt64Histogram(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RelativeInt64Histogram_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RelativeInt64HistogramDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RelativeInt64HistogramDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RelativeInt64HistogramDefaultTypeInternal() {}
  union {
    RelativeInt64Histogram _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RelativeInt64HistogramDefaultTypeInternal _RelativeInt64Histogram_default_instance_;

inline constexpr MessagesEnvelope::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        submitter_{},
        extension_type_url_and_version_{},
        extension_{},
        version_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR MessagesEnvelope::MessagesEnvelope(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MessagesEnvelope_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MessagesEnvelopeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessagesEnvelopeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessagesEnvelopeDefaultTypeInternal() {}
  union {
    MessagesEnvelope _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessagesEnvelopeDefaultTypeInternal _MessagesEnvelope_default_instance_;

inline constexpr Int64StatisticMeasureAndAccuracy::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        timestamp_interval_{nullptr},
        accuracy_{nullptr},
        value_{::int64_t{0}},
        type_{static_cast< ::sensoris::protobuf::types::base::StatisticMeasureType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Int64StatisticMeasureAndAccuracy::Int64StatisticMeasureAndAccuracy(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Int64StatisticMeasureAndAccuracy_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Int64StatisticMeasureAndAccuracyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Int64StatisticMeasureAndAccuracyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Int64StatisticMeasureAndAccuracyDefaultTypeInternal() {}
  union {
    Int64StatisticMeasureAndAccuracy _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Int64StatisticMeasureAndAccuracyDefaultTypeInternal _Int64StatisticMeasureAndAccuracy_default_instance_;

inline constexpr Int64StatisticMeasure::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        timestamp_interval_{nullptr},
        value_{::int64_t{0}},
        type_{static_cast< ::sensoris::protobuf::types::base::StatisticMeasureType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Int64StatisticMeasure::Int64StatisticMeasure(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Int64StatisticMeasure_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Int64StatisticMeasureDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Int64StatisticMeasureDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Int64StatisticMeasureDefaultTypeInternal() {}
  union {
    Int64StatisticMeasure _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Int64StatisticMeasureDefaultTypeInternal _Int64StatisticMeasure_default_instance_;

inline constexpr Int64GaussianDistribution::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        timestamp_interval_{nullptr},
        mean_{nullptr},
        variance_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Int64GaussianDistribution::Int64GaussianDistribution(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Int64GaussianDistribution_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Int64GaussianDistributionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Int64GaussianDistributionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Int64GaussianDistributionDefaultTypeInternal() {}
  union {
    Int64GaussianDistribution _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Int64GaussianDistributionDefaultTypeInternal _Int64GaussianDistribution_default_instance_;

inline constexpr ExtensionTypeUrlAndVersionRanges::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        version_range_{},
        type_url_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ExtensionTypeUrlAndVersionRanges::ExtensionTypeUrlAndVersionRanges(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ExtensionTypeUrlAndVersionRanges_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ExtensionTypeUrlAndVersionRangesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExtensionTypeUrlAndVersionRangesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExtensionTypeUrlAndVersionRangesDefaultTypeInternal() {}
  union {
    ExtensionTypeUrlAndVersionRanges _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExtensionTypeUrlAndVersionRangesDefaultTypeInternal _ExtensionTypeUrlAndVersionRanges_default_instance_;

inline constexpr AbsoluteOrExtensionPath::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : path_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR AbsoluteOrExtensionPath::AbsoluteOrExtensionPath(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(AbsoluteOrExtensionPath_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AbsoluteOrExtensionPathDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AbsoluteOrExtensionPathDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AbsoluteOrExtensionPathDefaultTypeInternal() {}
  union {
    AbsoluteOrExtensionPath _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AbsoluteOrExtensionPathDefaultTypeInternal _AbsoluteOrExtensionPath_default_instance_;

inline constexpr AbsoluteInt64Histogram::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        bin_{},
        timestamp_interval_{nullptr},
        total_elements_{nullptr},
        upper_endpoint_inclusive_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR AbsoluteInt64Histogram::AbsoluteInt64Histogram(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(AbsoluteInt64Histogram_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AbsoluteInt64HistogramDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AbsoluteInt64HistogramDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AbsoluteInt64HistogramDefaultTypeInternal() {}
  union {
    AbsoluteInt64Histogram _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AbsoluteInt64HistogramDefaultTypeInternal _AbsoluteInt64Histogram_default_instance_;

inline constexpr Int64ValueAndAccuracy::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_oneof_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Int64ValueAndAccuracy::Int64ValueAndAccuracy(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Int64ValueAndAccuracy_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Int64ValueAndAccuracyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Int64ValueAndAccuracyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Int64ValueAndAccuracyDefaultTypeInternal() {}
  union {
    Int64ValueAndAccuracy _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Int64ValueAndAccuracyDefaultTypeInternal _Int64ValueAndAccuracy_default_instance_;

inline constexpr Int64Value::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_oneof_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Int64Value::Int64Value(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Int64Value_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Int64ValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Int64ValueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Int64ValueDefaultTypeInternal() {}
  union {
    Int64Value _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Int64ValueDefaultTypeInternal _Int64Value_default_instance_;

inline constexpr AbsoluteOrExtensionPaths::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : path_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AbsoluteOrExtensionPaths::AbsoluteOrExtensionPaths(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(AbsoluteOrExtensionPaths_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AbsoluteOrExtensionPathsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AbsoluteOrExtensionPathsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AbsoluteOrExtensionPathsDefaultTypeInternal() {}
  union {
    AbsoluteOrExtensionPaths _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AbsoluteOrExtensionPathsDefaultTypeInternal _AbsoluteOrExtensionPaths_default_instance_;
}  // namespace base
}  // namespace types
}  // namespace protobuf
}  // namespace sensoris
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_sensoris_2fprotobuf_2ftypes_2fbase_2eproto[6];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_sensoris_2fprotobuf_2ftypes_2fbase_2eproto = nullptr;
const ::uint32_t
    TableStruct_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Version, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Version, _impl_.major_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Version, _impl_.minor_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Version, _impl_.patch_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Version, _impl_.name_),
        0,
        1,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::VersionRange, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::VersionRange, _impl_.min_inclusive_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::VersionRange, _impl_.max_exclusive_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Entity, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Entity, _impl_.primary_id_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Entity, _impl_.secondary_id_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Entity, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Entity, _impl_.software_version_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Entity, _impl_.hardware_version_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Entity, _impl_.extension_),
        0,
        1,
        2,
        3,
        4,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Timestamp, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Timestamp, _impl_.posix_time_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Timestamp, _impl_.posix_time_fraction_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::TimestampInterval, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::TimestampInterval, _impl_.start_inclusive_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::TimestampInterval, _impl_.end_exclusive_),
        0,
        1,
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Path, _impl_.field_number_),
        0x004, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::ExtensionTypeUrl, _impl_._oneof_case_[0]),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::ExtensionTypeUrl, _impl_.type_),
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::ExtensionPath, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::ExtensionPath, _impl_.to_extension_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::ExtensionPath, _impl_.type_url_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::ExtensionPath, _impl_.in_extension_),
        0,
        1,
        2,
        0x004, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::AbsoluteOrExtensionPath, _impl_._oneof_case_[0]),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::AbsoluteOrExtensionPath, _impl_.path_),
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::AbsoluteOrExtensionPaths, _impl_.path_),
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::ExtensionTypeUrlAndVersion, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::ExtensionTypeUrlAndVersion, _impl_.type_url_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::ExtensionTypeUrlAndVersion, _impl_.version_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::ExtensionTypeUrlAndVersionRanges, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::ExtensionTypeUrlAndVersionRanges, _impl_.type_url_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::ExtensionTypeUrlAndVersionRanges, _impl_.version_range_),
        0,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::EventEnvelope_DetectionType, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::EventEnvelope_DetectionType, _impl_.type_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::EventEnvelope, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::EventEnvelope, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::EventEnvelope, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::EventEnvelope, _impl_.detection_type_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::EventEnvelope, _impl_.extension_),
        0,
        1,
        2,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::EventDetectionStatus, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::EventDetectionStatus, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::EventDetectionStatus, _impl_.confidence_),
        1,
        0,
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::CategoryEnvelope, _impl_.extension_),
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::MessagesEnvelope, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::MessagesEnvelope, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::MessagesEnvelope, _impl_.submitter_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::MessagesEnvelope, _impl_.extension_type_url_and_version_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::MessagesEnvelope, _impl_.extension_),
        0,
        ~0u,
        ~0u,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64Interval, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64Interval, _impl_.min_inclusive_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64Interval, _impl_.max_exclusive_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64StatisticMeasure, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64StatisticMeasure, _impl_.timestamp_interval_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64StatisticMeasure, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64StatisticMeasure, _impl_.value_),
        0,
        2,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy, _impl_.timestamp_interval_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy, _impl_.accuracy_),
        0,
        3,
        2,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::AbsoluteInt64Histogram_Bin, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::AbsoluteInt64Histogram_Bin, _impl_.lower_endpoint_inclusive_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::AbsoluteInt64Histogram_Bin, _impl_.frequency_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::AbsoluteInt64Histogram, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::AbsoluteInt64Histogram, _impl_.timestamp_interval_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::AbsoluteInt64Histogram, _impl_.total_elements_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::AbsoluteInt64Histogram, _impl_.bin_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::AbsoluteInt64Histogram, _impl_.upper_endpoint_inclusive_),
        0,
        1,
        ~0u,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::RelativeInt64Histogram_Bin, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::RelativeInt64Histogram_Bin, _impl_.lower_endpoint_inclusive_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::RelativeInt64Histogram_Bin, _impl_.relative_frequency_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::RelativeInt64Histogram, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::RelativeInt64Histogram, _impl_.timestamp_interval_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::RelativeInt64Histogram, _impl_.total_elements_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::RelativeInt64Histogram, _impl_.bin_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::RelativeInt64Histogram, _impl_.upper_endpoint_inclusive_),
        0,
        1,
        ~0u,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64GaussianDistribution, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64GaussianDistribution, _impl_.timestamp_interval_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64GaussianDistribution, _impl_.mean_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64GaussianDistribution, _impl_.variance_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64ValueAndExponent, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64ValueAndExponent, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64ValueAndExponent, _impl_.exponent_),
        0,
        1,
        0x004, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64Value, _impl_._oneof_case_[0]),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64Value, _impl_.value_oneof_),
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy, _impl_.accuracy_),
        1,
        0,
        0x004, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64ValueAndAccuracy, _impl_._oneof_case_[0]),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64ValueAndAccuracy, _impl_.value_oneof_),
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Confidence, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Confidence, _impl_.value_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::CountAndConfidence, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::CountAndConfidence, _impl_.count_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::CountAndConfidence, _impl_.confidence_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64Matrix3x3, _impl_._has_bits_),
        12, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64Matrix3x3, _impl_.a11_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64Matrix3x3, _impl_.a12_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64Matrix3x3, _impl_.a13_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64Matrix3x3, _impl_.a21_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64Matrix3x3, _impl_.a22_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64Matrix3x3, _impl_.a23_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64Matrix3x3, _impl_.a31_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64Matrix3x3, _impl_.a32_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64Matrix3x3, _impl_.a33_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Urn, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Urn, _impl_.value_),
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::sensoris::protobuf::types::base::Version)},
        {11, sizeof(::sensoris::protobuf::types::base::VersionRange)},
        {18, sizeof(::sensoris::protobuf::types::base::Entity)},
        {33, sizeof(::sensoris::protobuf::types::base::Timestamp)},
        {40, sizeof(::sensoris::protobuf::types::base::TimestampInterval)},
        {47, sizeof(::sensoris::protobuf::types::base::Path)},
        {49, sizeof(::sensoris::protobuf::types::base::ExtensionTypeUrl)},
        {54, sizeof(::sensoris::protobuf::types::base::ExtensionPath)},
        {63, sizeof(::sensoris::protobuf::types::base::AbsoluteOrExtensionPath)},
        {68, sizeof(::sensoris::protobuf::types::base::AbsoluteOrExtensionPaths)},
        {70, sizeof(::sensoris::protobuf::types::base::ExtensionTypeUrlAndVersion)},
        {77, sizeof(::sensoris::protobuf::types::base::ExtensionTypeUrlAndVersionRanges)},
        {84, sizeof(::sensoris::protobuf::types::base::EventEnvelope_DetectionType)},
        {89, sizeof(::sensoris::protobuf::types::base::EventEnvelope)},
        {100, sizeof(::sensoris::protobuf::types::base::EventDetectionStatus)},
        {107, sizeof(::sensoris::protobuf::types::base::CategoryEnvelope)},
        {109, sizeof(::sensoris::protobuf::types::base::MessagesEnvelope)},
        {120, sizeof(::sensoris::protobuf::types::base::Int64Interval)},
        {127, sizeof(::sensoris::protobuf::types::base::Int64StatisticMeasure)},
        {136, sizeof(::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy)},
        {147, sizeof(::sensoris::protobuf::types::base::AbsoluteInt64Histogram_Bin)},
        {154, sizeof(::sensoris::protobuf::types::base::AbsoluteInt64Histogram)},
        {165, sizeof(::sensoris::protobuf::types::base::RelativeInt64Histogram_Bin)},
        {172, sizeof(::sensoris::protobuf::types::base::RelativeInt64Histogram)},
        {183, sizeof(::sensoris::protobuf::types::base::Int64GaussianDistribution)},
        {192, sizeof(::sensoris::protobuf::types::base::Int64ValueAndExponent)},
        {199, sizeof(::sensoris::protobuf::types::base::Int64Value)},
        {207, sizeof(::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy)},
        {214, sizeof(::sensoris::protobuf::types::base::Int64ValueAndAccuracy)},
        {222, sizeof(::sensoris::protobuf::types::base::Confidence)},
        {227, sizeof(::sensoris::protobuf::types::base::CountAndConfidence)},
        {234, sizeof(::sensoris::protobuf::types::base::Int64Matrix3x3)},
        {255, sizeof(::sensoris::protobuf::types::base::Urn)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::sensoris::protobuf::types::base::_Version_default_instance_._instance,
    &::sensoris::protobuf::types::base::_VersionRange_default_instance_._instance,
    &::sensoris::protobuf::types::base::_Entity_default_instance_._instance,
    &::sensoris::protobuf::types::base::_Timestamp_default_instance_._instance,
    &::sensoris::protobuf::types::base::_TimestampInterval_default_instance_._instance,
    &::sensoris::protobuf::types::base::_Path_default_instance_._instance,
    &::sensoris::protobuf::types::base::_ExtensionTypeUrl_default_instance_._instance,
    &::sensoris::protobuf::types::base::_ExtensionPath_default_instance_._instance,
    &::sensoris::protobuf::types::base::_AbsoluteOrExtensionPath_default_instance_._instance,
    &::sensoris::protobuf::types::base::_AbsoluteOrExtensionPaths_default_instance_._instance,
    &::sensoris::protobuf::types::base::_ExtensionTypeUrlAndVersion_default_instance_._instance,
    &::sensoris::protobuf::types::base::_ExtensionTypeUrlAndVersionRanges_default_instance_._instance,
    &::sensoris::protobuf::types::base::_EventEnvelope_DetectionType_default_instance_._instance,
    &::sensoris::protobuf::types::base::_EventEnvelope_default_instance_._instance,
    &::sensoris::protobuf::types::base::_EventDetectionStatus_default_instance_._instance,
    &::sensoris::protobuf::types::base::_CategoryEnvelope_default_instance_._instance,
    &::sensoris::protobuf::types::base::_MessagesEnvelope_default_instance_._instance,
    &::sensoris::protobuf::types::base::_Int64Interval_default_instance_._instance,
    &::sensoris::protobuf::types::base::_Int64StatisticMeasure_default_instance_._instance,
    &::sensoris::protobuf::types::base::_Int64StatisticMeasureAndAccuracy_default_instance_._instance,
    &::sensoris::protobuf::types::base::_AbsoluteInt64Histogram_Bin_default_instance_._instance,
    &::sensoris::protobuf::types::base::_AbsoluteInt64Histogram_default_instance_._instance,
    &::sensoris::protobuf::types::base::_RelativeInt64Histogram_Bin_default_instance_._instance,
    &::sensoris::protobuf::types::base::_RelativeInt64Histogram_default_instance_._instance,
    &::sensoris::protobuf::types::base::_Int64GaussianDistribution_default_instance_._instance,
    &::sensoris::protobuf::types::base::_Int64ValueAndExponent_default_instance_._instance,
    &::sensoris::protobuf::types::base::_Int64Value_default_instance_._instance,
    &::sensoris::protobuf::types::base::_Int64ValueAndAccuracy_ValueAndAccuracy_default_instance_._instance,
    &::sensoris::protobuf::types::base::_Int64ValueAndAccuracy_default_instance_._instance,
    &::sensoris::protobuf::types::base::_Confidence_default_instance_._instance,
    &::sensoris::protobuf::types::base::_CountAndConfidence_default_instance_._instance,
    &::sensoris::protobuf::types::base::_Int64Matrix3x3_default_instance_._instance,
    &::sensoris::protobuf::types::base::_Urn_default_instance_._instance,
};
const char descriptor_table_protodef_sensoris_2fprotobuf_2ftypes_2fbase_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\"sensoris/protobuf/types/base.proto\022\034se"
    "nsoris.protobuf.types.base\032\031google/proto"
    "buf/any.proto\032 google/protobuf/descripto"
    "r.proto\032\036google/protobuf/wrappers.proto\""
    "\271\001\n\007Version\022*\n\005major\030\001 \001(\0132\033.google.prot"
    "obuf.Int64Value\022*\n\005minor\030\002 \001(\0132\033.google."
    "protobuf.Int64Value\022*\n\005patch\030\003 \001(\0132\033.goo"
    "gle.protobuf.Int64Value\022*\n\004name\030\004 \001(\0132\034."
    "google.protobuf.StringValue\"\212\001\n\014VersionR"
    "ange\022<\n\rmin_inclusive\030\001 \001(\0132%.sensoris.p"
    "rotobuf.types.base.Version\022<\n\rmax_exclus"
    "ive\030\002 \001(\0132%.sensoris.protobuf.types.base"
    ".Version\"\305\002\n\006Entity\0220\n\nprimary_id\030\001 \001(\0132"
    "\034.google.protobuf.StringValue\0222\n\014seconda"
    "ry_id\030\002 \001(\0132\034.google.protobuf.StringValu"
    "e\022*\n\004type\030\003 \001(\0132\034.google.protobuf.String"
    "Value\022\?\n\020software_version\030\004 \001(\0132%.sensor"
    "is.protobuf.types.base.Version\022\?\n\020hardwa"
    "re_version\030\005 \001(\0132%.sensoris.protobuf.typ"
    "es.base.Version\022\'\n\textension\030\017 \003(\0132\024.goo"
    "gle.protobuf.Any\"|\n\tTimestamp\022/\n\nposix_t"
    "ime\030\001 \001(\0132\033.google.protobuf.Int64Value\022>"
    "\n\023posix_time_fraction\030\002 \001(\0132\033.google.pro"
    "tobuf.Int64ValueB\004\210\265\030\000\"\225\001\n\021TimestampInte"
    "rval\022@\n\017start_inclusive\030\001 \001(\0132\'.sensoris"
    ".protobuf.types.base.Timestamp\022>\n\rend_ex"
    "clusive\030\002 \001(\0132\'.sensoris.protobuf.types."
    "base.Timestamp\"\034\n\004Path\022\024\n\014field_number\030\001"
    " \003(\003\"\214\001\n\020ExtensionTypeUrl\022>\n\026google_type"
    "_url_suffix\030\001 \001(\0132\034.google.protobuf.Stri"
    "ngValueH\000\0220\n\010type_url\030\002 \001(\0132\034.google.pro"
    "tobuf.StringValueH\000B\006\n\004type\"\305\001\n\rExtensio"
    "nPath\0228\n\014to_extension\030\001 \001(\0132\".sensoris.p"
    "rotobuf.types.base.Path\022@\n\010type_url\030\002 \001("
    "\0132..sensoris.protobuf.types.base.Extensi"
    "onTypeUrl\0228\n\014in_extension\030\003 \001(\0132\".sensor"
    "is.protobuf.types.base.Path\"\233\001\n\027Absolute"
    "OrExtensionPath\0226\n\010absolute\030\001 \001(\0132\".sens"
    "oris.protobuf.types.base.PathH\000\022@\n\texten"
    "sion\030\002 \001(\0132+.sensoris.protobuf.types.bas"
    "e.ExtensionPathH\000B\006\n\004path\"_\n\030AbsoluteOrE"
    "xtensionPaths\022C\n\004path\030\001 \003(\01325.sensoris.p"
    "rotobuf.types.base.AbsoluteOrExtensionPa"
    "th\"\226\001\n\032ExtensionTypeUrlAndVersion\022@\n\010typ"
    "e_url\030\001 \001(\0132..sensoris.protobuf.types.ba"
    "se.ExtensionTypeUrl\0226\n\007version\030\002 \001(\0132%.s"
    "ensoris.protobuf.types.base.Version\"\247\001\n "
    "ExtensionTypeUrlAndVersionRanges\022@\n\010type"
    "_url\030\001 \001(\0132..sensoris.protobuf.types.bas"
    "e.ExtensionTypeUrl\022A\n\rversion_range\030\002 \003("
    "\0132*.sensoris.protobuf.types.base.Version"
    "Range\"\213\004\n\rEventEnvelope\022\'\n\002id\030\001 \001(\0132\033.go"
    "ogle.protobuf.Int64Value\022:\n\ttimestamp\030\002 "
    "\001(\0132\'.sensoris.protobuf.types.base.Times"
    "tamp\022Q\n\016detection_type\030\003 \001(\01329.sensoris."
    "protobuf.types.base.EventEnvelope.Detect"
    "ionType\022\'\n\textension\030\017 \003(\0132\024.google.prot"
    "obuf.Any\032\230\002\n\rDetectionType\022L\n\004type\030\001 \001(\016"
    "2>.sensoris.protobuf.types.base.EventEnv"
    "elope.DetectionType.Type\"\270\001\n\004Type\022\020\n\014UNK"
    "NOWN_TYPE\020\000\022\026\n\022TRIGGERED_MANUALLY\020\001\022\037\n\033T"
    "RIGGERED_AUTOMATED_REGULAR\020\002\022\034\n\030TRIGGERE"
    "D_AUTOMATED_RARE\020\003\022\022\n\016READING_SINGLE\020\004\022\022"
    "\n\016READING_SIMPLE\020\005\022\022\n\016READING_FUSION\020\006\022\013"
    "\n\007COMPLEX\020\007\"\355\002\n\024EventDetectionStatus\022E\n\004"
    "type\030\001 \001(\01627.sensoris.protobuf.types.bas"
    "e.EventDetectionStatus.Type\022<\n\nconfidenc"
    "e\030\002 \001(\0132(.sensoris.protobuf.types.base.C"
    "onfidence\"\317\001\n\004Type\022\020\n\014UNKNOWN_TYPE\020\000\022\031\n\025"
    "EXPECTED_AND_DETECTED\020\001\022\035\n\031EXPECTED_AND_"
    "NOT_DETECTED\020\002\022,\n(EXPECTED_AND_NOT_DETEC"
    "TED_ACCESS_BLOCKED\020\003\022.\n*EXPECTED_AND_NOT"
    "_DETECTED_ACCESS_AVAILABLE\020\004\022\035\n\031NOT_EXPE"
    "CTED_AND_DETECTED\020\005\";\n\020CategoryEnvelope\022"
    "\'\n\textension\030\017 \003(\0132\024.google.protobuf.Any"
    "\"\216\002\n\020MessagesEnvelope\0226\n\007version\030\001 \001(\0132%"
    ".sensoris.protobuf.types.base.Version\0227\n"
    "\tsubmitter\030\002 \003(\0132$.sensoris.protobuf.typ"
    "es.base.Entity\022`\n\036extension_type_url_and"
    "_version\030\003 \003(\01328.sensoris.protobuf.types"
    ".base.ExtensionTypeUrlAndVersion\022\'\n\texte"
    "nsion\030\017 \003(\0132\024.google.protobuf.Any\"w\n\rInt"
    "64Interval\0222\n\rmin_inclusive\030\001 \001(\0132\033.goog"
    "le.protobuf.Int64Value\0222\n\rmax_exclusive\030"
    "\002 \001(\0132\033.google.protobuf.Int64Value\"\265\001\n\025I"
    "nt64StatisticMeasure\022K\n\022timestamp_interv"
    "al\030\001 \001(\0132/.sensoris.protobuf.types.base."
    "TimestampInterval\022@\n\004type\030\002 \001(\01622.sensor"
    "is.protobuf.types.base.StatisticMeasureT"
    "ype\022\r\n\005value\030\003 \001(\003\"\357\001\n Int64StatisticMea"
    "sureAndAccuracy\022K\n\022timestamp_interval\030\001 "
    "\001(\0132/.sensoris.protobuf.types.base.Times"
    "tampInterval\022@\n\004type\030\002 \001(\01622.sensoris.pr"
    "otobuf.types.base.StatisticMeasureType\022\r"
    "\n\005value\030\003 \001(\003\022-\n\010accuracy\030\004 \001(\0132\033.google"
    ".protobuf.Int64Value\"\226\003\n\026AbsoluteInt64Hi"
    "stogram\022K\n\022timestamp_interval\030\001 \001(\0132/.se"
    "nsoris.protobuf.types.base.TimestampInte"
    "rval\0223\n\016total_elements\030\002 \001(\0132\033.google.pr"
    "otobuf.Int64Value\022E\n\003bin\030\003 \003(\01328.sensori"
    "s.protobuf.types.base.AbsoluteInt64Histo"
    "gram.Bin\022=\n\030upper_endpoint_inclusive\030\004 \001"
    "(\0132\033.google.protobuf.Int64Value\032t\n\003Bin\022="
    "\n\030lower_endpoint_inclusive\030\001 \001(\0132\033.googl"
    "e.protobuf.Int64Value\022.\n\tfrequency\030\002 \001(\013"
    "2\033.google.protobuf.Int64Value\"\246\003\n\026Relati"
    "veInt64Histogram\022K\n\022timestamp_interval\030\001"
    " \001(\0132/.sensoris.protobuf.types.base.Time"
    "stampInterval\0223\n\016total_elements\030\002 \001(\0132\033."
    "google.protobuf.Int64Value\022E\n\003bin\030\003 \003(\0132"
    "8.sensoris.protobuf.types.base.RelativeI"
    "nt64Histogram.Bin\022=\n\030upper_endpoint_incl"
    "usive\030\004 \001(\0132\033.google.protobuf.Int64Value"
    "\032\203\001\n\003Bin\022=\n\030lower_endpoint_inclusive\030\001 \001"
    "(\0132\033.google.protobuf.Int64Value\022=\n\022relat"
    "ive_frequency\030\003 \001(\0132\033.google.protobuf.In"
    "t64ValueB\004\210\265\030\001\"\302\001\n\031Int64GaussianDistribu"
    "tion\022K\n\022timestamp_interval\030\001 \001(\0132/.senso"
    "ris.protobuf.types.base.TimestampInterva"
    "l\022)\n\004mean\030\002 \001(\0132\033.google.protobuf.Int64V"
    "alue\022-\n\010variance\030\003 \001(\0132\033.google.protobuf"
    ".Int64Value\"8\n\025Int64ValueAndExponent\022\r\n\005"
    "value\030\001 \001(\003\022\020\n\010exponent\030\002 \001(\003\"\200\003\n\nInt64V"
    "alue\022\017\n\005value\030\001 \001(\003H\000\022P\n\021statistic_measu"
    "re\030\002 \001(\01323.sensoris.protobuf.types.base."
    "Int64StatisticMeasureH\000\022R\n\022absolute_hist"
    "ogram\030\003 \001(\01324.sensoris.protobuf.types.ba"
    "se.AbsoluteInt64HistogramH\000\022R\n\022relative_"
    "histogram\030\004 \001(\01324.sensoris.protobuf.type"
    "s.base.RelativeInt64HistogramH\000\022X\n\025gauss"
    "ian_distribution\030\005 \001(\01327.sensoris.protob"
    "uf.types.base.Int64GaussianDistributionH"
    "\000B\r\n\013value_oneof\"\310\004\n\025Int64ValueAndAccura"
    "cy\022b\n\022value_and_accuracy\030\001 \001(\0132D.sensori"
    "s.protobuf.types.base.Int64ValueAndAccur"
    "acy.ValueAndAccuracyH\000\022h\n\036statistic_meas"
    "ure_and_accuracy\030\002 \001(\0132>.sensoris.protob"
    "uf.types.base.Int64StatisticMeasureAndAc"
    "curacyH\000\022R\n\022absolute_histogram\030\003 \001(\01324.s"
    "ensoris.protobuf.types.base.AbsoluteInt6"
    "4HistogramH\000\022R\n\022relative_histogram\030\004 \001(\013"
    "24.sensoris.protobuf.types.base.Relative"
    "Int64HistogramH\000\022X\n\025gaussian_distributio"
    "n\030\005 \001(\01327.sensoris.protobuf.types.base.I"
    "nt64GaussianDistributionH\000\032P\n\020ValueAndAc"
    "curacy\022\r\n\005value\030\001 \001(\003\022-\n\010accuracy\030\002 \001(\0132"
    "\033.google.protobuf.Int64ValueB\r\n\013value_on"
    "eof\"!\n\nConfidence\022\023\n\005value\030\001 \001(\003B\004\210\265\030\000\"~"
    "\n\022CountAndConfidence\022*\n\005count\030\001 \001(\0132\033.go"
    "ogle.protobuf.Int64Value\022<\n\nconfidence\030\002"
    " \001(\0132(.sensoris.protobuf.types.base.Conf"
    "idence\"\212\003\n\016Int64Matrix3x3\022(\n\003a11\030\001 \001(\0132\033"
    ".google.protobuf.Int64Value\022(\n\003a12\030\002 \001(\013"
    "2\033.google.protobuf.Int64Value\022(\n\003a13\030\003 \001"
    "(\0132\033.google.protobuf.Int64Value\022(\n\003a21\030\004"
    " \001(\0132\033.google.protobuf.Int64Value\022(\n\003a22"
    "\030\005 \001(\0132\033.google.protobuf.Int64Value\022(\n\003a"
    "23\030\006 \001(\0132\033.google.protobuf.Int64Value\022(\n"
    "\003a31\030\007 \001(\0132\033.google.protobuf.Int64Value\022"
    "(\n\003a32\030\010 \001(\0132\033.google.protobuf.Int64Valu"
    "e\022(\n\003a33\030\t \001(\0132\033.google.protobuf.Int64Va"
    "lue\"\024\n\003Urn\022\r\n\005value\030\001 \001(\t*z\n\007Weekday\022\023\n\017"
    "UNKNOWN_WEEKDAY\020\000\022\n\n\006MONDAY\020\001\022\013\n\007TUESDAY"
    "\020\002\022\r\n\tWEDNESDAY\020\003\022\014\n\010THURSDAY\020\004\022\n\n\006FRIDA"
    "Y\020\005\022\014\n\010SATURDAY\020\006\022\n\n\006SUNDAY\020\007*|\n\010TimeUni"
    "t\022\025\n\021UNKNOWN_TIME_UNIT\020\000\022\017\n\013MILLISECOND\020"
    "\001\022\n\n\006SECOND\020\002\022\n\n\006MINUTE\020\003\022\010\n\004HOUR\020\004\022\007\n\003D"
    "AY\020\005\022\010\n\004WEEK\020\006\022\t\n\005MONTH\020\007\022\010\n\004YEAR\020\010*m\n\024S"
    "tatisticMeasureType\022\"\n\036UNKNOWN_STATISTIC"
    "_MEASURE_TYPE\020\000\022\013\n\007MINIMUM\020\001\022\013\n\007MAXIMUM\020"
    "\002\022\013\n\007AVERAGE\020\003\022\n\n\006MEDIAN\020\004*Q\n\014SystemStat"
    "us\022\031\n\025UNKNOWN_SYSTEM_STATUS\020\000\022\n\n\006ACTIVE\020"
    "\001\022\014\n\010INACTIVE\020\002\022\014\n\010DISABLED\020\003:1\n\010exponen"
    "t\022\035.google.protobuf.FieldOptions\030\321\206\003 \001(\003"
    "BX\n\027org.sensoris.types.baseB\021SensorisBas"
    "eTypesP\001Z%sensoris.org/specification/typ"
    "es/base\370\001\001b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto_deps[3] = {
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
        &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
        &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
};
static ::absl::once_flag descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto = {
    false,
    false,
    7058,
    descriptor_table_protodef_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
    "sensoris/protobuf/types/base.proto",
    &descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto_once,
    descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto_deps,
    3,
    33,
    schemas,
    file_default_instances,
    TableStruct_sensoris_2fprotobuf_2ftypes_2fbase_2eproto::offsets,
    file_level_enum_descriptors_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
    file_level_service_descriptors_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
};
namespace sensoris {
namespace protobuf {
namespace types {
namespace base {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL EventEnvelope_DetectionType_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto);
  return file_level_enum_descriptors_sensoris_2fprotobuf_2ftypes_2fbase_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t EventEnvelope_DetectionType_Type_internal_data_[] = {
    524288u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL EventDetectionStatus_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto);
  return file_level_enum_descriptors_sensoris_2fprotobuf_2ftypes_2fbase_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t EventDetectionStatus_Type_internal_data_[] = {
    393216u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Weekday_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto);
  return file_level_enum_descriptors_sensoris_2fprotobuf_2ftypes_2fbase_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t Weekday_internal_data_[] = {
    524288u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL TimeUnit_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto);
  return file_level_enum_descriptors_sensoris_2fprotobuf_2ftypes_2fbase_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t TimeUnit_internal_data_[] = {
    589824u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL StatisticMeasureType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto);
  return file_level_enum_descriptors_sensoris_2fprotobuf_2ftypes_2fbase_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t StatisticMeasureType_internal_data_[] = {
    327680u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL SystemStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto);
  return file_level_enum_descriptors_sensoris_2fprotobuf_2ftypes_2fbase_2eproto[5];
}
PROTOBUF_CONSTINIT const uint32_t SystemStatus_internal_data_[] = {
    262144u, 0u, };
// ===================================================================

class Version::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Version>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Version, _impl_._has_bits_);
};

void Version::clear_major() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.major_ != nullptr) _impl_.major_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Version::clear_minor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.minor_ != nullptr) _impl_.minor_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void Version::clear_patch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.patch_ != nullptr) _impl_.patch_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void Version::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.name_ != nullptr) _impl_.name_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
Version::Version(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Version_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.Version)
}
PROTOBUF_NDEBUG_INLINE Version::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::base::Version& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Version::Version(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Version& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Version_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Version* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.major_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.major_)
                : nullptr;
  _impl_.minor_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.minor_)
                : nullptr;
  _impl_.patch_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.patch_)
                : nullptr;
  _impl_.name_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.name_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.Version)
}
PROTOBUF_NDEBUG_INLINE Version::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Version::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, major_),
           0,
           offsetof(Impl_, name_) -
               offsetof(Impl_, major_) +
               sizeof(Impl_::name_));
}
Version::~Version() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.Version)
  SharedDtor(*this);
}
inline void Version::SharedDtor(MessageLite& self) {
  Version& this_ = static_cast<Version&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.major_;
  delete this_._impl_.minor_;
  delete this_._impl_.patch_;
  delete this_._impl_.name_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Version::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Version(arena);
}
constexpr auto Version::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Version),
                                            alignof(Version));
}
constexpr auto Version::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Version_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Version::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Version>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Version::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Version>(), &Version::ByteSizeLong,
              &Version::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Version, _impl_._cached_size_),
          false,
      },
      &Version::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Version_class_data_ =
        Version::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Version::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Version_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Version_class_data_.tc_table);
  return Version_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 4, 0, 2>
Version::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Version, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Version_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Version>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.StringValue name = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(Version, _impl_.name_)}},
    // .google.protobuf.Int64Value major = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Version, _impl_.major_)}},
    // .google.protobuf.Int64Value minor = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Version, _impl_.minor_)}},
    // .google.protobuf.Int64Value patch = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(Version, _impl_.patch_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Int64Value major = 1;
    {PROTOBUF_FIELD_OFFSET(Version, _impl_.major_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Int64Value minor = 2;
    {PROTOBUF_FIELD_OFFSET(Version, _impl_.minor_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Int64Value patch = 3;
    {PROTOBUF_FIELD_OFFSET(Version, _impl_.patch_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.StringValue name = 4;
    {PROTOBUF_FIELD_OFFSET(Version, _impl_.name_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::StringValue>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Version::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.Version)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.major_ != nullptr);
      _impl_.major_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.minor_ != nullptr);
      _impl_.minor_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.patch_ != nullptr);
      _impl_.patch_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.name_ != nullptr);
      _impl_.name_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Version::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Version& this_ = static_cast<const Version&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Version::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Version& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.Version)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Int64Value major = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.major_, this_._impl_.major_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Int64Value minor = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.minor_, this_._impl_.minor_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Int64Value patch = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.patch_, this_._impl_.patch_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.StringValue name = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.name_, this_._impl_.name_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.Version)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Version::ByteSizeLong(const MessageLite& base) {
  const Version& this_ = static_cast<const Version&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Version::ByteSizeLong() const {
  const Version& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.Version)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // .google.protobuf.Int64Value major = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.major_);
    }
    // .google.protobuf.Int64Value minor = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.minor_);
    }
    // .google.protobuf.Int64Value patch = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.patch_);
    }
    // .google.protobuf.StringValue name = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.name_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Version::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Version*>(&to_msg);
  auto& from = static_cast<const Version&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.Version)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.major_ != nullptr);
      if (_this->_impl_.major_ == nullptr) {
        _this->_impl_.major_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.major_);
      } else {
        _this->_impl_.major_->MergeFrom(*from._impl_.major_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.minor_ != nullptr);
      if (_this->_impl_.minor_ == nullptr) {
        _this->_impl_.minor_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.minor_);
      } else {
        _this->_impl_.minor_->MergeFrom(*from._impl_.minor_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.patch_ != nullptr);
      if (_this->_impl_.patch_ == nullptr) {
        _this->_impl_.patch_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.patch_);
      } else {
        _this->_impl_.patch_->MergeFrom(*from._impl_.patch_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.name_ != nullptr);
      if (_this->_impl_.name_ == nullptr) {
        _this->_impl_.name_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.name_);
      } else {
        _this->_impl_.name_->MergeFrom(*from._impl_.name_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Version::CopyFrom(const Version& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.Version)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Version::InternalSwap(Version* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Version, _impl_.name_)
      + sizeof(Version::_impl_.name_)
      - PROTOBUF_FIELD_OFFSET(Version, _impl_.major_)>(
          reinterpret_cast<char*>(&_impl_.major_),
          reinterpret_cast<char*>(&other->_impl_.major_));
}

::google::protobuf::Metadata Version::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class VersionRange::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<VersionRange>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(VersionRange, _impl_._has_bits_);
};

VersionRange::VersionRange(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, VersionRange_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.VersionRange)
}
PROTOBUF_NDEBUG_INLINE VersionRange::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::base::VersionRange& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

VersionRange::VersionRange(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const VersionRange& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, VersionRange_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  VersionRange* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.min_inclusive_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.min_inclusive_)
                : nullptr;
  _impl_.max_exclusive_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.max_exclusive_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.VersionRange)
}
PROTOBUF_NDEBUG_INLINE VersionRange::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void VersionRange::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, min_inclusive_),
           0,
           offsetof(Impl_, max_exclusive_) -
               offsetof(Impl_, min_inclusive_) +
               sizeof(Impl_::max_exclusive_));
}
VersionRange::~VersionRange() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.VersionRange)
  SharedDtor(*this);
}
inline void VersionRange::SharedDtor(MessageLite& self) {
  VersionRange& this_ = static_cast<VersionRange&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.min_inclusive_;
  delete this_._impl_.max_exclusive_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL VersionRange::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) VersionRange(arena);
}
constexpr auto VersionRange::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(VersionRange),
                                            alignof(VersionRange));
}
constexpr auto VersionRange::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_VersionRange_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &VersionRange::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<VersionRange>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &VersionRange::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<VersionRange>(), &VersionRange::ByteSizeLong,
              &VersionRange::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(VersionRange, _impl_._cached_size_),
          false,
      },
      &VersionRange::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull VersionRange_class_data_ =
        VersionRange::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
VersionRange::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&VersionRange_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(VersionRange_class_data_.tc_table);
  return VersionRange_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
VersionRange::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VersionRange, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    VersionRange_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::VersionRange>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .sensoris.protobuf.types.base.Version max_exclusive = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(VersionRange, _impl_.max_exclusive_)}},
    // .sensoris.protobuf.types.base.Version min_inclusive = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VersionRange, _impl_.min_inclusive_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.Version min_inclusive = 1;
    {PROTOBUF_FIELD_OFFSET(VersionRange, _impl_.min_inclusive_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.Version max_exclusive = 2;
    {PROTOBUF_FIELD_OFFSET(VersionRange, _impl_.max_exclusive_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Version>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Version>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void VersionRange::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.VersionRange)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.min_inclusive_ != nullptr);
      _impl_.min_inclusive_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.max_exclusive_ != nullptr);
      _impl_.max_exclusive_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL VersionRange::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const VersionRange& this_ = static_cast<const VersionRange&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL VersionRange::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const VersionRange& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.VersionRange)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.Version min_inclusive = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.min_inclusive_, this_._impl_.min_inclusive_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.types.base.Version max_exclusive = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.max_exclusive_, this_._impl_.max_exclusive_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.VersionRange)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t VersionRange::ByteSizeLong(const MessageLite& base) {
  const VersionRange& this_ = static_cast<const VersionRange&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t VersionRange::ByteSizeLong() const {
  const VersionRange& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.VersionRange)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .sensoris.protobuf.types.base.Version min_inclusive = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.min_inclusive_);
    }
    // .sensoris.protobuf.types.base.Version max_exclusive = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.max_exclusive_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void VersionRange::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VersionRange*>(&to_msg);
  auto& from = static_cast<const VersionRange&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.VersionRange)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.min_inclusive_ != nullptr);
      if (_this->_impl_.min_inclusive_ == nullptr) {
        _this->_impl_.min_inclusive_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.min_inclusive_);
      } else {
        _this->_impl_.min_inclusive_->MergeFrom(*from._impl_.min_inclusive_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.max_exclusive_ != nullptr);
      if (_this->_impl_.max_exclusive_ == nullptr) {
        _this->_impl_.max_exclusive_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.max_exclusive_);
      } else {
        _this->_impl_.max_exclusive_->MergeFrom(*from._impl_.max_exclusive_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VersionRange::CopyFrom(const VersionRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.VersionRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void VersionRange::InternalSwap(VersionRange* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VersionRange, _impl_.max_exclusive_)
      + sizeof(VersionRange::_impl_.max_exclusive_)
      - PROTOBUF_FIELD_OFFSET(VersionRange, _impl_.min_inclusive_)>(
          reinterpret_cast<char*>(&_impl_.min_inclusive_),
          reinterpret_cast<char*>(&other->_impl_.min_inclusive_));
}

::google::protobuf::Metadata VersionRange::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Entity::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Entity>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Entity, _impl_._has_bits_);
};

void Entity::clear_primary_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.primary_id_ != nullptr) _impl_.primary_id_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Entity::clear_secondary_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.secondary_id_ != nullptr) _impl_.secondary_id_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void Entity::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.type_ != nullptr) _impl_.type_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void Entity::clear_extension() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.extension_.Clear();
}
Entity::Entity(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Entity_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.Entity)
}
PROTOBUF_NDEBUG_INLINE Entity::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::base::Entity& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        extension_{visibility, arena, from.extension_} {}

Entity::Entity(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Entity& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Entity_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Entity* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.primary_id_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.primary_id_)
                : nullptr;
  _impl_.secondary_id_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.secondary_id_)
                : nullptr;
  _impl_.type_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.type_)
                : nullptr;
  _impl_.software_version_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.software_version_)
                : nullptr;
  _impl_.hardware_version_ = ((cached_has_bits & 0x00000010u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.hardware_version_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.Entity)
}
PROTOBUF_NDEBUG_INLINE Entity::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        extension_{visibility, arena} {}

inline void Entity::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, primary_id_),
           0,
           offsetof(Impl_, hardware_version_) -
               offsetof(Impl_, primary_id_) +
               sizeof(Impl_::hardware_version_));
}
Entity::~Entity() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.Entity)
  SharedDtor(*this);
}
inline void Entity::SharedDtor(MessageLite& self) {
  Entity& this_ = static_cast<Entity&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.primary_id_;
  delete this_._impl_.secondary_id_;
  delete this_._impl_.type_;
  delete this_._impl_.software_version_;
  delete this_._impl_.hardware_version_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Entity::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Entity(arena);
}
constexpr auto Entity::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Entity, _impl_.extension_) +
          decltype(Entity::_impl_.extension_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Entity), alignof(Entity), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Entity::PlacementNew_,
                                 sizeof(Entity),
                                 alignof(Entity));
  }
}
constexpr auto Entity::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Entity_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Entity::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Entity>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Entity::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Entity>(), &Entity::ByteSizeLong,
              &Entity::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Entity, _impl_._cached_size_),
          false,
      },
      &Entity::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Entity_class_data_ =
        Entity::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Entity::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Entity_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Entity_class_data_.tc_table);
  return Entity_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 6, 0, 2>
Entity::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Entity, _impl_._has_bits_),
    0, // no _extensions_
    15, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950880,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Entity_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Entity>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.StringValue primary_id = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Entity, _impl_.primary_id_)}},
    // .google.protobuf.StringValue secondary_id = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Entity, _impl_.secondary_id_)}},
    // .google.protobuf.StringValue type = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(Entity, _impl_.type_)}},
    // .sensoris.protobuf.types.base.Version software_version = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(Entity, _impl_.software_version_)}},
    // .sensoris.protobuf.types.base.Version hardware_version = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 4, PROTOBUF_FIELD_OFFSET(Entity, _impl_.hardware_version_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .google.protobuf.Any extension = 15;
    {::_pbi::TcParser::FastMtR1,
     {122, 63, 5, PROTOBUF_FIELD_OFFSET(Entity, _impl_.extension_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.StringValue primary_id = 1;
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.primary_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.StringValue secondary_id = 2;
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.secondary_id_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.StringValue type = 3;
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.type_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.Version software_version = 4;
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.software_version_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.Version hardware_version = 5;
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.hardware_version_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .google.protobuf.Any extension = 15;
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.extension_), -1, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::StringValue>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::StringValue>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::StringValue>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Version>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Version>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Entity::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.Entity)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.extension_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.primary_id_ != nullptr);
      _impl_.primary_id_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.secondary_id_ != nullptr);
      _impl_.secondary_id_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.type_ != nullptr);
      _impl_.type_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.software_version_ != nullptr);
      _impl_.software_version_->Clear();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(_impl_.hardware_version_ != nullptr);
      _impl_.hardware_version_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Entity::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Entity& this_ = static_cast<const Entity&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Entity::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Entity& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.Entity)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.StringValue primary_id = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.primary_id_, this_._impl_.primary_id_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.StringValue secondary_id = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.secondary_id_, this_._impl_.secondary_id_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.StringValue type = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.type_, this_._impl_.type_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.types.base.Version software_version = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.software_version_, this_._impl_.software_version_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.types.base.Version hardware_version = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.hardware_version_, this_._impl_.hardware_version_->GetCachedSize(), target,
        stream);
  }

  // repeated .google.protobuf.Any extension = 15;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_extension_size());
       i < n; i++) {
    const auto& repfield = this_._internal_extension().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            15, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.Entity)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Entity::ByteSizeLong(const MessageLite& base) {
  const Entity& this_ = static_cast<const Entity&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Entity::ByteSizeLong() const {
  const Entity& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.Entity)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .google.protobuf.Any extension = 15;
    {
      total_size += 1UL * this_._internal_extension_size();
      for (const auto& msg : this_._internal_extension()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // .google.protobuf.StringValue primary_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.primary_id_);
    }
    // .google.protobuf.StringValue secondary_id = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.secondary_id_);
    }
    // .google.protobuf.StringValue type = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_);
    }
    // .sensoris.protobuf.types.base.Version software_version = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.software_version_);
    }
    // .sensoris.protobuf.types.base.Version hardware_version = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.hardware_version_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Entity::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Entity*>(&to_msg);
  auto& from = static_cast<const Entity&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.Entity)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_extension()->MergeFrom(
      from._internal_extension());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.primary_id_ != nullptr);
      if (_this->_impl_.primary_id_ == nullptr) {
        _this->_impl_.primary_id_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.primary_id_);
      } else {
        _this->_impl_.primary_id_->MergeFrom(*from._impl_.primary_id_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.secondary_id_ != nullptr);
      if (_this->_impl_.secondary_id_ == nullptr) {
        _this->_impl_.secondary_id_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.secondary_id_);
      } else {
        _this->_impl_.secondary_id_->MergeFrom(*from._impl_.secondary_id_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.type_ != nullptr);
      if (_this->_impl_.type_ == nullptr) {
        _this->_impl_.type_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.type_);
      } else {
        _this->_impl_.type_->MergeFrom(*from._impl_.type_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.software_version_ != nullptr);
      if (_this->_impl_.software_version_ == nullptr) {
        _this->_impl_.software_version_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.software_version_);
      } else {
        _this->_impl_.software_version_->MergeFrom(*from._impl_.software_version_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(from._impl_.hardware_version_ != nullptr);
      if (_this->_impl_.hardware_version_ == nullptr) {
        _this->_impl_.hardware_version_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.hardware_version_);
      } else {
        _this->_impl_.hardware_version_->MergeFrom(*from._impl_.hardware_version_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Entity::CopyFrom(const Entity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.Entity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Entity::InternalSwap(Entity* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.extension_.InternalSwap(&other->_impl_.extension_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Entity, _impl_.hardware_version_)
      + sizeof(Entity::_impl_.hardware_version_)
      - PROTOBUF_FIELD_OFFSET(Entity, _impl_.primary_id_)>(
          reinterpret_cast<char*>(&_impl_.primary_id_),
          reinterpret_cast<char*>(&other->_impl_.primary_id_));
}

::google::protobuf::Metadata Entity::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Timestamp::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Timestamp>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Timestamp, _impl_._has_bits_);
};

void Timestamp::clear_posix_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.posix_time_ != nullptr) _impl_.posix_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Timestamp::clear_posix_time_fraction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.posix_time_fraction_ != nullptr) _impl_.posix_time_fraction_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
Timestamp::Timestamp(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Timestamp_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.Timestamp)
}
PROTOBUF_NDEBUG_INLINE Timestamp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::base::Timestamp& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Timestamp::Timestamp(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Timestamp& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Timestamp_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Timestamp* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.posix_time_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.posix_time_)
                : nullptr;
  _impl_.posix_time_fraction_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.posix_time_fraction_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.Timestamp)
}
PROTOBUF_NDEBUG_INLINE Timestamp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Timestamp::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, posix_time_),
           0,
           offsetof(Impl_, posix_time_fraction_) -
               offsetof(Impl_, posix_time_) +
               sizeof(Impl_::posix_time_fraction_));
}
Timestamp::~Timestamp() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.Timestamp)
  SharedDtor(*this);
}
inline void Timestamp::SharedDtor(MessageLite& self) {
  Timestamp& this_ = static_cast<Timestamp&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.posix_time_;
  delete this_._impl_.posix_time_fraction_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Timestamp::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Timestamp(arena);
}
constexpr auto Timestamp::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Timestamp),
                                            alignof(Timestamp));
}
constexpr auto Timestamp::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Timestamp_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Timestamp::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Timestamp>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Timestamp::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Timestamp>(), &Timestamp::ByteSizeLong,
              &Timestamp::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Timestamp, _impl_._cached_size_),
          false,
      },
      &Timestamp::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Timestamp_class_data_ =
        Timestamp::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Timestamp::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Timestamp_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Timestamp_class_data_.tc_table);
  return Timestamp_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
Timestamp::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Timestamp, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Timestamp_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Timestamp>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Int64Value posix_time_fraction = 2 [(.sensoris.protobuf.types.base.exponent) = 0];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Timestamp, _impl_.posix_time_fraction_)}},
    // .google.protobuf.Int64Value posix_time = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Timestamp, _impl_.posix_time_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Int64Value posix_time = 1;
    {PROTOBUF_FIELD_OFFSET(Timestamp, _impl_.posix_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Int64Value posix_time_fraction = 2 [(.sensoris.protobuf.types.base.exponent) = 0];
    {PROTOBUF_FIELD_OFFSET(Timestamp, _impl_.posix_time_fraction_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Timestamp::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.Timestamp)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.posix_time_ != nullptr);
      _impl_.posix_time_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.posix_time_fraction_ != nullptr);
      _impl_.posix_time_fraction_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Timestamp::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Timestamp& this_ = static_cast<const Timestamp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Timestamp::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Timestamp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.Timestamp)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Int64Value posix_time = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.posix_time_, this_._impl_.posix_time_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Int64Value posix_time_fraction = 2 [(.sensoris.protobuf.types.base.exponent) = 0];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.posix_time_fraction_, this_._impl_.posix_time_fraction_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.Timestamp)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Timestamp::ByteSizeLong(const MessageLite& base) {
  const Timestamp& this_ = static_cast<const Timestamp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Timestamp::ByteSizeLong() const {
  const Timestamp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.Timestamp)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .google.protobuf.Int64Value posix_time = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.posix_time_);
    }
    // .google.protobuf.Int64Value posix_time_fraction = 2 [(.sensoris.protobuf.types.base.exponent) = 0];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.posix_time_fraction_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Timestamp::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Timestamp*>(&to_msg);
  auto& from = static_cast<const Timestamp&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.Timestamp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.posix_time_ != nullptr);
      if (_this->_impl_.posix_time_ == nullptr) {
        _this->_impl_.posix_time_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.posix_time_);
      } else {
        _this->_impl_.posix_time_->MergeFrom(*from._impl_.posix_time_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.posix_time_fraction_ != nullptr);
      if (_this->_impl_.posix_time_fraction_ == nullptr) {
        _this->_impl_.posix_time_fraction_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.posix_time_fraction_);
      } else {
        _this->_impl_.posix_time_fraction_->MergeFrom(*from._impl_.posix_time_fraction_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Timestamp::CopyFrom(const Timestamp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.Timestamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Timestamp::InternalSwap(Timestamp* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Timestamp, _impl_.posix_time_fraction_)
      + sizeof(Timestamp::_impl_.posix_time_fraction_)
      - PROTOBUF_FIELD_OFFSET(Timestamp, _impl_.posix_time_)>(
          reinterpret_cast<char*>(&_impl_.posix_time_),
          reinterpret_cast<char*>(&other->_impl_.posix_time_));
}

::google::protobuf::Metadata Timestamp::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TimestampInterval::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TimestampInterval>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TimestampInterval, _impl_._has_bits_);
};

TimestampInterval::TimestampInterval(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TimestampInterval_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.TimestampInterval)
}
PROTOBUF_NDEBUG_INLINE TimestampInterval::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::base::TimestampInterval& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

TimestampInterval::TimestampInterval(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TimestampInterval& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TimestampInterval_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TimestampInterval* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.start_inclusive_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.start_inclusive_)
                : nullptr;
  _impl_.end_exclusive_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.end_exclusive_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.TimestampInterval)
}
PROTOBUF_NDEBUG_INLINE TimestampInterval::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void TimestampInterval::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, start_inclusive_),
           0,
           offsetof(Impl_, end_exclusive_) -
               offsetof(Impl_, start_inclusive_) +
               sizeof(Impl_::end_exclusive_));
}
TimestampInterval::~TimestampInterval() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.TimestampInterval)
  SharedDtor(*this);
}
inline void TimestampInterval::SharedDtor(MessageLite& self) {
  TimestampInterval& this_ = static_cast<TimestampInterval&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.start_inclusive_;
  delete this_._impl_.end_exclusive_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TimestampInterval::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TimestampInterval(arena);
}
constexpr auto TimestampInterval::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TimestampInterval),
                                            alignof(TimestampInterval));
}
constexpr auto TimestampInterval::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TimestampInterval_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TimestampInterval::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TimestampInterval>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TimestampInterval::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TimestampInterval>(), &TimestampInterval::ByteSizeLong,
              &TimestampInterval::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TimestampInterval, _impl_._cached_size_),
          false,
      },
      &TimestampInterval::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TimestampInterval_class_data_ =
        TimestampInterval::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TimestampInterval::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TimestampInterval_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TimestampInterval_class_data_.tc_table);
  return TimestampInterval_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
TimestampInterval::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TimestampInterval, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TimestampInterval_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::TimestampInterval>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .sensoris.protobuf.types.base.Timestamp end_exclusive = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(TimestampInterval, _impl_.end_exclusive_)}},
    // .sensoris.protobuf.types.base.Timestamp start_inclusive = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TimestampInterval, _impl_.start_inclusive_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.Timestamp start_inclusive = 1;
    {PROTOBUF_FIELD_OFFSET(TimestampInterval, _impl_.start_inclusive_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.Timestamp end_exclusive = 2;
    {PROTOBUF_FIELD_OFFSET(TimestampInterval, _impl_.end_exclusive_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Timestamp>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Timestamp>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void TimestampInterval::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.TimestampInterval)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.start_inclusive_ != nullptr);
      _impl_.start_inclusive_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.end_exclusive_ != nullptr);
      _impl_.end_exclusive_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TimestampInterval::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TimestampInterval& this_ = static_cast<const TimestampInterval&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TimestampInterval::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TimestampInterval& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.TimestampInterval)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.Timestamp start_inclusive = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.start_inclusive_, this_._impl_.start_inclusive_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.types.base.Timestamp end_exclusive = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.end_exclusive_, this_._impl_.end_exclusive_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.TimestampInterval)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TimestampInterval::ByteSizeLong(const MessageLite& base) {
  const TimestampInterval& this_ = static_cast<const TimestampInterval&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TimestampInterval::ByteSizeLong() const {
  const TimestampInterval& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.TimestampInterval)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .sensoris.protobuf.types.base.Timestamp start_inclusive = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.start_inclusive_);
    }
    // .sensoris.protobuf.types.base.Timestamp end_exclusive = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.end_exclusive_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TimestampInterval::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TimestampInterval*>(&to_msg);
  auto& from = static_cast<const TimestampInterval&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.TimestampInterval)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.start_inclusive_ != nullptr);
      if (_this->_impl_.start_inclusive_ == nullptr) {
        _this->_impl_.start_inclusive_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.start_inclusive_);
      } else {
        _this->_impl_.start_inclusive_->MergeFrom(*from._impl_.start_inclusive_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.end_exclusive_ != nullptr);
      if (_this->_impl_.end_exclusive_ == nullptr) {
        _this->_impl_.end_exclusive_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.end_exclusive_);
      } else {
        _this->_impl_.end_exclusive_->MergeFrom(*from._impl_.end_exclusive_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TimestampInterval::CopyFrom(const TimestampInterval& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.TimestampInterval)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TimestampInterval::InternalSwap(TimestampInterval* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TimestampInterval, _impl_.end_exclusive_)
      + sizeof(TimestampInterval::_impl_.end_exclusive_)
      - PROTOBUF_FIELD_OFFSET(TimestampInterval, _impl_.start_inclusive_)>(
          reinterpret_cast<char*>(&_impl_.start_inclusive_),
          reinterpret_cast<char*>(&other->_impl_.start_inclusive_));
}

::google::protobuf::Metadata TimestampInterval::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Path::_Internal {
 public:
};

Path::Path(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Path_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.Path)
}
PROTOBUF_NDEBUG_INLINE Path::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::base::Path& from_msg)
      : field_number_{visibility, arena, from.field_number_},
        _field_number_cached_byte_size_{0},
        _cached_size_{0} {}

Path::Path(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Path& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Path_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Path* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.Path)
}
PROTOBUF_NDEBUG_INLINE Path::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : field_number_{visibility, arena},
        _field_number_cached_byte_size_{0},
        _cached_size_{0} {}

inline void Path::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Path::~Path() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.Path)
  SharedDtor(*this);
}
inline void Path::SharedDtor(MessageLite& self) {
  Path& this_ = static_cast<Path&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Path::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Path(arena);
}
constexpr auto Path::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Path, _impl_.field_number_) +
          decltype(Path::_impl_.field_number_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Path), alignof(Path), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Path::PlacementNew_,
                                 sizeof(Path),
                                 alignof(Path));
  }
}
constexpr auto Path::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Path_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Path::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Path>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Path::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Path>(), &Path::ByteSizeLong,
              &Path::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Path, _impl_._cached_size_),
          false,
      },
      &Path::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Path_class_data_ =
        Path::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Path::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Path_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Path_class_data_.tc_table);
  return Path_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
Path::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Path_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Path>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated int64 field_number = 1;
    {::_pbi::TcParser::FastV64P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Path, _impl_.field_number_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated int64 field_number = 1;
    {PROTOBUF_FIELD_OFFSET(Path, _impl_.field_number_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void Path::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.Path)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.field_number_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Path::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Path& this_ = static_cast<const Path&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Path::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Path& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.Path)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated int64 field_number = 1;
  {
    int byte_size = this_._impl_._field_number_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          1, this_._internal_field_number(), byte_size, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.Path)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Path::ByteSizeLong(const MessageLite& base) {
  const Path& this_ = static_cast<const Path&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Path::ByteSizeLong() const {
  const Path& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.Path)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated int64 field_number = 1;
    {
      total_size +=
          ::_pbi::WireFormatLite::Int64SizeWithPackedTagSize(
              this_._internal_field_number(), 1,
              this_._impl_._field_number_cached_byte_size_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Path::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Path*>(&to_msg);
  auto& from = static_cast<const Path&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.Path)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_field_number()->MergeFrom(from._internal_field_number());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Path::CopyFrom(const Path& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.Path)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Path::InternalSwap(Path* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.field_number_.InternalSwap(&other->_impl_.field_number_);
}

::google::protobuf::Metadata Path::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ExtensionTypeUrl::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::ExtensionTypeUrl, _impl_._oneof_case_);
};

void ExtensionTypeUrl::set_allocated_google_type_url_suffix(::google::protobuf::StringValue* PROTOBUF_NULLABLE google_type_url_suffix) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (google_type_url_suffix) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(google_type_url_suffix)->GetArena();
    if (message_arena != submessage_arena) {
      google_type_url_suffix = ::google::protobuf::internal::GetOwnedMessage(message_arena, google_type_url_suffix, submessage_arena);
    }
    set_has_google_type_url_suffix();
    _impl_.type_.google_type_url_suffix_ = google_type_url_suffix;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.ExtensionTypeUrl.google_type_url_suffix)
}
void ExtensionTypeUrl::clear_google_type_url_suffix() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kGoogleTypeUrlSuffix) {
    if (GetArena() == nullptr) {
      delete _impl_.type_.google_type_url_suffix_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.google_type_url_suffix_);
    }
    clear_has_type();
  }
}
void ExtensionTypeUrl::set_allocated_type_url(::google::protobuf::StringValue* PROTOBUF_NULLABLE type_url) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (type_url) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(type_url)->GetArena();
    if (message_arena != submessage_arena) {
      type_url = ::google::protobuf::internal::GetOwnedMessage(message_arena, type_url, submessage_arena);
    }
    set_has_type_url();
    _impl_.type_.type_url_ = type_url;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.ExtensionTypeUrl.type_url)
}
void ExtensionTypeUrl::clear_type_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (type_case() == kTypeUrl) {
    if (GetArena() == nullptr) {
      delete _impl_.type_.type_url_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.type_url_);
    }
    clear_has_type();
  }
}
ExtensionTypeUrl::ExtensionTypeUrl(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ExtensionTypeUrl_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.ExtensionTypeUrl)
}
PROTOBUF_NDEBUG_INLINE ExtensionTypeUrl::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::base::ExtensionTypeUrl& from_msg)
      : type_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

ExtensionTypeUrl::ExtensionTypeUrl(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ExtensionTypeUrl& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ExtensionTypeUrl_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ExtensionTypeUrl* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (type_case()) {
    case TYPE_NOT_SET:
      break;
      case kGoogleTypeUrlSuffix:
        _impl_.type_.google_type_url_suffix_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.type_.google_type_url_suffix_);
        break;
      case kTypeUrl:
        _impl_.type_.type_url_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.type_.type_url_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.ExtensionTypeUrl)
}
PROTOBUF_NDEBUG_INLINE ExtensionTypeUrl::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : type_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void ExtensionTypeUrl::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ExtensionTypeUrl::~ExtensionTypeUrl() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.ExtensionTypeUrl)
  SharedDtor(*this);
}
inline void ExtensionTypeUrl::SharedDtor(MessageLite& self) {
  ExtensionTypeUrl& this_ = static_cast<ExtensionTypeUrl&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_type()) {
    this_.clear_type();
  }
  this_._impl_.~Impl_();
}

void ExtensionTypeUrl::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:sensoris.protobuf.types.base.ExtensionTypeUrl)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (type_case()) {
    case kGoogleTypeUrlSuffix: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.google_type_url_suffix_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.google_type_url_suffix_);
      }
      break;
    }
    case kTypeUrl: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.type_url_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.type_url_);
      }
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}


inline void* PROTOBUF_NONNULL ExtensionTypeUrl::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ExtensionTypeUrl(arena);
}
constexpr auto ExtensionTypeUrl::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ExtensionTypeUrl),
                                            alignof(ExtensionTypeUrl));
}
constexpr auto ExtensionTypeUrl::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ExtensionTypeUrl_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ExtensionTypeUrl::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ExtensionTypeUrl>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ExtensionTypeUrl::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ExtensionTypeUrl>(), &ExtensionTypeUrl::ByteSizeLong,
              &ExtensionTypeUrl::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ExtensionTypeUrl, _impl_._cached_size_),
          false,
      },
      &ExtensionTypeUrl::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ExtensionTypeUrl_class_data_ =
        ExtensionTypeUrl::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ExtensionTypeUrl::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ExtensionTypeUrl_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ExtensionTypeUrl_class_data_.tc_table);
  return ExtensionTypeUrl_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2>
ExtensionTypeUrl::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ExtensionTypeUrl_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::ExtensionTypeUrl>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.StringValue google_type_url_suffix = 1;
    {PROTOBUF_FIELD_OFFSET(ExtensionTypeUrl, _impl_.type_.google_type_url_suffix_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.StringValue type_url = 2;
    {PROTOBUF_FIELD_OFFSET(ExtensionTypeUrl, _impl_.type_.type_url_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::StringValue>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::StringValue>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ExtensionTypeUrl::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.ExtensionTypeUrl)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_type();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ExtensionTypeUrl::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ExtensionTypeUrl& this_ = static_cast<const ExtensionTypeUrl&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ExtensionTypeUrl::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ExtensionTypeUrl& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.ExtensionTypeUrl)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.type_case()) {
    case kGoogleTypeUrlSuffix: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *this_._impl_.type_.google_type_url_suffix_, this_._impl_.type_.google_type_url_suffix_->GetCachedSize(), target,
          stream);
      break;
    }
    case kTypeUrl: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *this_._impl_.type_.type_url_, this_._impl_.type_.type_url_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.ExtensionTypeUrl)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ExtensionTypeUrl::ByteSizeLong(const MessageLite& base) {
  const ExtensionTypeUrl& this_ = static_cast<const ExtensionTypeUrl&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ExtensionTypeUrl::ByteSizeLong() const {
  const ExtensionTypeUrl& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.ExtensionTypeUrl)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  switch (this_.type_case()) {
    // .google.protobuf.StringValue google_type_url_suffix = 1;
    case kGoogleTypeUrlSuffix: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_.google_type_url_suffix_);
      break;
    }
    // .google.protobuf.StringValue type_url = 2;
    case kTypeUrl: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_.type_url_);
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ExtensionTypeUrl::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ExtensionTypeUrl*>(&to_msg);
  auto& from = static_cast<const ExtensionTypeUrl&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.ExtensionTypeUrl)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_type();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kGoogleTypeUrlSuffix: {
        if (oneof_needs_init) {
          _this->_impl_.type_.google_type_url_suffix_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.type_.google_type_url_suffix_);
        } else {
          _this->_impl_.type_.google_type_url_suffix_->MergeFrom(*from._impl_.type_.google_type_url_suffix_);
        }
        break;
      }
      case kTypeUrl: {
        if (oneof_needs_init) {
          _this->_impl_.type_.type_url_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.type_.type_url_);
        } else {
          _this->_impl_.type_.type_url_->MergeFrom(*from._impl_.type_.type_url_);
        }
        break;
      }
      case TYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExtensionTypeUrl::CopyFrom(const ExtensionTypeUrl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.ExtensionTypeUrl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ExtensionTypeUrl::InternalSwap(ExtensionTypeUrl* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.type_, other->_impl_.type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ExtensionTypeUrl::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ExtensionPath::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ExtensionPath>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ExtensionPath, _impl_._has_bits_);
};

ExtensionPath::ExtensionPath(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ExtensionPath_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.ExtensionPath)
}
PROTOBUF_NDEBUG_INLINE ExtensionPath::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::base::ExtensionPath& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ExtensionPath::ExtensionPath(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ExtensionPath& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ExtensionPath_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ExtensionPath* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.to_extension_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.to_extension_)
                : nullptr;
  _impl_.type_url_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.type_url_)
                : nullptr;
  _impl_.in_extension_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.in_extension_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.ExtensionPath)
}
PROTOBUF_NDEBUG_INLINE ExtensionPath::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ExtensionPath::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, to_extension_),
           0,
           offsetof(Impl_, in_extension_) -
               offsetof(Impl_, to_extension_) +
               sizeof(Impl_::in_extension_));
}
ExtensionPath::~ExtensionPath() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.ExtensionPath)
  SharedDtor(*this);
}
inline void ExtensionPath::SharedDtor(MessageLite& self) {
  ExtensionPath& this_ = static_cast<ExtensionPath&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.to_extension_;
  delete this_._impl_.type_url_;
  delete this_._impl_.in_extension_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ExtensionPath::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ExtensionPath(arena);
}
constexpr auto ExtensionPath::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ExtensionPath),
                                            alignof(ExtensionPath));
}
constexpr auto ExtensionPath::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ExtensionPath_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ExtensionPath::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ExtensionPath>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ExtensionPath::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ExtensionPath>(), &ExtensionPath::ByteSizeLong,
              &ExtensionPath::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ExtensionPath, _impl_._cached_size_),
          false,
      },
      &ExtensionPath::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ExtensionPath_class_data_ =
        ExtensionPath::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ExtensionPath::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ExtensionPath_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ExtensionPath_class_data_.tc_table);
  return ExtensionPath_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2>
ExtensionPath::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ExtensionPath, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ExtensionPath_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::ExtensionPath>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .sensoris.protobuf.types.base.Path to_extension = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ExtensionPath, _impl_.to_extension_)}},
    // .sensoris.protobuf.types.base.ExtensionTypeUrl type_url = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(ExtensionPath, _impl_.type_url_)}},
    // .sensoris.protobuf.types.base.Path in_extension = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(ExtensionPath, _impl_.in_extension_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.Path to_extension = 1;
    {PROTOBUF_FIELD_OFFSET(ExtensionPath, _impl_.to_extension_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.ExtensionTypeUrl type_url = 2;
    {PROTOBUF_FIELD_OFFSET(ExtensionPath, _impl_.type_url_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.Path in_extension = 3;
    {PROTOBUF_FIELD_OFFSET(ExtensionPath, _impl_.in_extension_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Path>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::ExtensionTypeUrl>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Path>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ExtensionPath::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.ExtensionPath)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.to_extension_ != nullptr);
      _impl_.to_extension_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.type_url_ != nullptr);
      _impl_.type_url_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.in_extension_ != nullptr);
      _impl_.in_extension_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ExtensionPath::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ExtensionPath& this_ = static_cast<const ExtensionPath&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ExtensionPath::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ExtensionPath& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.ExtensionPath)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.Path to_extension = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.to_extension_, this_._impl_.to_extension_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.types.base.ExtensionTypeUrl type_url = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.type_url_, this_._impl_.type_url_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.types.base.Path in_extension = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.in_extension_, this_._impl_.in_extension_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.ExtensionPath)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ExtensionPath::ByteSizeLong(const MessageLite& base) {
  const ExtensionPath& this_ = static_cast<const ExtensionPath&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ExtensionPath::ByteSizeLong() const {
  const ExtensionPath& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.ExtensionPath)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .sensoris.protobuf.types.base.Path to_extension = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.to_extension_);
    }
    // .sensoris.protobuf.types.base.ExtensionTypeUrl type_url = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_url_);
    }
    // .sensoris.protobuf.types.base.Path in_extension = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.in_extension_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ExtensionPath::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ExtensionPath*>(&to_msg);
  auto& from = static_cast<const ExtensionPath&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.ExtensionPath)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.to_extension_ != nullptr);
      if (_this->_impl_.to_extension_ == nullptr) {
        _this->_impl_.to_extension_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.to_extension_);
      } else {
        _this->_impl_.to_extension_->MergeFrom(*from._impl_.to_extension_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.type_url_ != nullptr);
      if (_this->_impl_.type_url_ == nullptr) {
        _this->_impl_.type_url_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.type_url_);
      } else {
        _this->_impl_.type_url_->MergeFrom(*from._impl_.type_url_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.in_extension_ != nullptr);
      if (_this->_impl_.in_extension_ == nullptr) {
        _this->_impl_.in_extension_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.in_extension_);
      } else {
        _this->_impl_.in_extension_->MergeFrom(*from._impl_.in_extension_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExtensionPath::CopyFrom(const ExtensionPath& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.ExtensionPath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ExtensionPath::InternalSwap(ExtensionPath* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ExtensionPath, _impl_.in_extension_)
      + sizeof(ExtensionPath::_impl_.in_extension_)
      - PROTOBUF_FIELD_OFFSET(ExtensionPath, _impl_.to_extension_)>(
          reinterpret_cast<char*>(&_impl_.to_extension_),
          reinterpret_cast<char*>(&other->_impl_.to_extension_));
}

::google::protobuf::Metadata ExtensionPath::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AbsoluteOrExtensionPath::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::AbsoluteOrExtensionPath, _impl_._oneof_case_);
};

void AbsoluteOrExtensionPath::set_allocated_absolute(::sensoris::protobuf::types::base::Path* PROTOBUF_NULLABLE absolute) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_path();
  if (absolute) {
    ::google::protobuf::Arena* submessage_arena = absolute->GetArena();
    if (message_arena != submessage_arena) {
      absolute = ::google::protobuf::internal::GetOwnedMessage(message_arena, absolute, submessage_arena);
    }
    set_has_absolute();
    _impl_.path_.absolute_ = absolute;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.AbsoluteOrExtensionPath.absolute)
}
void AbsoluteOrExtensionPath::set_allocated_extension(::sensoris::protobuf::types::base::ExtensionPath* PROTOBUF_NULLABLE extension) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_path();
  if (extension) {
    ::google::protobuf::Arena* submessage_arena = extension->GetArena();
    if (message_arena != submessage_arena) {
      extension = ::google::protobuf::internal::GetOwnedMessage(message_arena, extension, submessage_arena);
    }
    set_has_extension();
    _impl_.path_.extension_ = extension;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.AbsoluteOrExtensionPath.extension)
}
AbsoluteOrExtensionPath::AbsoluteOrExtensionPath(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AbsoluteOrExtensionPath_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.AbsoluteOrExtensionPath)
}
PROTOBUF_NDEBUG_INLINE AbsoluteOrExtensionPath::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::base::AbsoluteOrExtensionPath& from_msg)
      : path_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

AbsoluteOrExtensionPath::AbsoluteOrExtensionPath(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const AbsoluteOrExtensionPath& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AbsoluteOrExtensionPath_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AbsoluteOrExtensionPath* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (path_case()) {
    case PATH_NOT_SET:
      break;
      case kAbsolute:
        _impl_.path_.absolute_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.path_.absolute_);
        break;
      case kExtension:
        _impl_.path_.extension_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.path_.extension_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.AbsoluteOrExtensionPath)
}
PROTOBUF_NDEBUG_INLINE AbsoluteOrExtensionPath::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : path_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void AbsoluteOrExtensionPath::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AbsoluteOrExtensionPath::~AbsoluteOrExtensionPath() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.AbsoluteOrExtensionPath)
  SharedDtor(*this);
}
inline void AbsoluteOrExtensionPath::SharedDtor(MessageLite& self) {
  AbsoluteOrExtensionPath& this_ = static_cast<AbsoluteOrExtensionPath&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_path()) {
    this_.clear_path();
  }
  this_._impl_.~Impl_();
}

void AbsoluteOrExtensionPath::clear_path() {
// @@protoc_insertion_point(one_of_clear_start:sensoris.protobuf.types.base.AbsoluteOrExtensionPath)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (path_case()) {
    case kAbsolute: {
      if (GetArena() == nullptr) {
        delete _impl_.path_.absolute_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.path_.absolute_);
      }
      break;
    }
    case kExtension: {
      if (GetArena() == nullptr) {
        delete _impl_.path_.extension_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.path_.extension_);
      }
      break;
    }
    case PATH_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PATH_NOT_SET;
}


inline void* PROTOBUF_NONNULL AbsoluteOrExtensionPath::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) AbsoluteOrExtensionPath(arena);
}
constexpr auto AbsoluteOrExtensionPath::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AbsoluteOrExtensionPath),
                                            alignof(AbsoluteOrExtensionPath));
}
constexpr auto AbsoluteOrExtensionPath::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_AbsoluteOrExtensionPath_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &AbsoluteOrExtensionPath::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<AbsoluteOrExtensionPath>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &AbsoluteOrExtensionPath::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<AbsoluteOrExtensionPath>(), &AbsoluteOrExtensionPath::ByteSizeLong,
              &AbsoluteOrExtensionPath::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(AbsoluteOrExtensionPath, _impl_._cached_size_),
          false,
      },
      &AbsoluteOrExtensionPath::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull AbsoluteOrExtensionPath_class_data_ =
        AbsoluteOrExtensionPath::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
AbsoluteOrExtensionPath::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&AbsoluteOrExtensionPath_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(AbsoluteOrExtensionPath_class_data_.tc_table);
  return AbsoluteOrExtensionPath_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2>
AbsoluteOrExtensionPath::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    AbsoluteOrExtensionPath_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::AbsoluteOrExtensionPath>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.Path absolute = 1;
    {PROTOBUF_FIELD_OFFSET(AbsoluteOrExtensionPath, _impl_.path_.absolute_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.ExtensionPath extension = 2;
    {PROTOBUF_FIELD_OFFSET(AbsoluteOrExtensionPath, _impl_.path_.extension_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Path>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::ExtensionPath>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void AbsoluteOrExtensionPath::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.AbsoluteOrExtensionPath)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_path();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL AbsoluteOrExtensionPath::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const AbsoluteOrExtensionPath& this_ = static_cast<const AbsoluteOrExtensionPath&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL AbsoluteOrExtensionPath::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const AbsoluteOrExtensionPath& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.AbsoluteOrExtensionPath)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.path_case()) {
    case kAbsolute: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *this_._impl_.path_.absolute_, this_._impl_.path_.absolute_->GetCachedSize(), target,
          stream);
      break;
    }
    case kExtension: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *this_._impl_.path_.extension_, this_._impl_.path_.extension_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.AbsoluteOrExtensionPath)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t AbsoluteOrExtensionPath::ByteSizeLong(const MessageLite& base) {
  const AbsoluteOrExtensionPath& this_ = static_cast<const AbsoluteOrExtensionPath&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t AbsoluteOrExtensionPath::ByteSizeLong() const {
  const AbsoluteOrExtensionPath& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.AbsoluteOrExtensionPath)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  switch (this_.path_case()) {
    // .sensoris.protobuf.types.base.Path absolute = 1;
    case kAbsolute: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.path_.absolute_);
      break;
    }
    // .sensoris.protobuf.types.base.ExtensionPath extension = 2;
    case kExtension: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.path_.extension_);
      break;
    }
    case PATH_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void AbsoluteOrExtensionPath::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AbsoluteOrExtensionPath*>(&to_msg);
  auto& from = static_cast<const AbsoluteOrExtensionPath&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.AbsoluteOrExtensionPath)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_path();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kAbsolute: {
        if (oneof_needs_init) {
          _this->_impl_.path_.absolute_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.path_.absolute_);
        } else {
          _this->_impl_.path_.absolute_->MergeFrom(*from._impl_.path_.absolute_);
        }
        break;
      }
      case kExtension: {
        if (oneof_needs_init) {
          _this->_impl_.path_.extension_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.path_.extension_);
        } else {
          _this->_impl_.path_.extension_->MergeFrom(*from._impl_.path_.extension_);
        }
        break;
      }
      case PATH_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AbsoluteOrExtensionPath::CopyFrom(const AbsoluteOrExtensionPath& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.AbsoluteOrExtensionPath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AbsoluteOrExtensionPath::InternalSwap(AbsoluteOrExtensionPath* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.path_, other->_impl_.path_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata AbsoluteOrExtensionPath::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AbsoluteOrExtensionPaths::_Internal {
 public:
};

AbsoluteOrExtensionPaths::AbsoluteOrExtensionPaths(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AbsoluteOrExtensionPaths_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.AbsoluteOrExtensionPaths)
}
PROTOBUF_NDEBUG_INLINE AbsoluteOrExtensionPaths::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::base::AbsoluteOrExtensionPaths& from_msg)
      : path_{visibility, arena, from.path_},
        _cached_size_{0} {}

AbsoluteOrExtensionPaths::AbsoluteOrExtensionPaths(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const AbsoluteOrExtensionPaths& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AbsoluteOrExtensionPaths_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AbsoluteOrExtensionPaths* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.AbsoluteOrExtensionPaths)
}
PROTOBUF_NDEBUG_INLINE AbsoluteOrExtensionPaths::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : path_{visibility, arena},
        _cached_size_{0} {}

inline void AbsoluteOrExtensionPaths::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AbsoluteOrExtensionPaths::~AbsoluteOrExtensionPaths() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.AbsoluteOrExtensionPaths)
  SharedDtor(*this);
}
inline void AbsoluteOrExtensionPaths::SharedDtor(MessageLite& self) {
  AbsoluteOrExtensionPaths& this_ = static_cast<AbsoluteOrExtensionPaths&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL AbsoluteOrExtensionPaths::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) AbsoluteOrExtensionPaths(arena);
}
constexpr auto AbsoluteOrExtensionPaths::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(AbsoluteOrExtensionPaths, _impl_.path_) +
          decltype(AbsoluteOrExtensionPaths::_impl_.path_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(AbsoluteOrExtensionPaths), alignof(AbsoluteOrExtensionPaths), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&AbsoluteOrExtensionPaths::PlacementNew_,
                                 sizeof(AbsoluteOrExtensionPaths),
                                 alignof(AbsoluteOrExtensionPaths));
  }
}
constexpr auto AbsoluteOrExtensionPaths::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_AbsoluteOrExtensionPaths_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &AbsoluteOrExtensionPaths::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<AbsoluteOrExtensionPaths>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &AbsoluteOrExtensionPaths::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<AbsoluteOrExtensionPaths>(), &AbsoluteOrExtensionPaths::ByteSizeLong,
              &AbsoluteOrExtensionPaths::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(AbsoluteOrExtensionPaths, _impl_._cached_size_),
          false,
      },
      &AbsoluteOrExtensionPaths::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull AbsoluteOrExtensionPaths_class_data_ =
        AbsoluteOrExtensionPaths::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
AbsoluteOrExtensionPaths::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&AbsoluteOrExtensionPaths_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(AbsoluteOrExtensionPaths_class_data_.tc_table);
  return AbsoluteOrExtensionPaths_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
AbsoluteOrExtensionPaths::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    AbsoluteOrExtensionPaths_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::AbsoluteOrExtensionPaths>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .sensoris.protobuf.types.base.AbsoluteOrExtensionPath path = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AbsoluteOrExtensionPaths, _impl_.path_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .sensoris.protobuf.types.base.AbsoluteOrExtensionPath path = 1;
    {PROTOBUF_FIELD_OFFSET(AbsoluteOrExtensionPaths, _impl_.path_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::AbsoluteOrExtensionPath>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void AbsoluteOrExtensionPaths::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.AbsoluteOrExtensionPaths)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL AbsoluteOrExtensionPaths::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const AbsoluteOrExtensionPaths& this_ = static_cast<const AbsoluteOrExtensionPaths&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL AbsoluteOrExtensionPaths::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const AbsoluteOrExtensionPaths& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.AbsoluteOrExtensionPaths)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .sensoris.protobuf.types.base.AbsoluteOrExtensionPath path = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_path_size());
       i < n; i++) {
    const auto& repfield = this_._internal_path().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.AbsoluteOrExtensionPaths)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t AbsoluteOrExtensionPaths::ByteSizeLong(const MessageLite& base) {
  const AbsoluteOrExtensionPaths& this_ = static_cast<const AbsoluteOrExtensionPaths&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t AbsoluteOrExtensionPaths::ByteSizeLong() const {
  const AbsoluteOrExtensionPaths& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.AbsoluteOrExtensionPaths)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .sensoris.protobuf.types.base.AbsoluteOrExtensionPath path = 1;
    {
      total_size += 1UL * this_._internal_path_size();
      for (const auto& msg : this_._internal_path()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void AbsoluteOrExtensionPaths::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AbsoluteOrExtensionPaths*>(&to_msg);
  auto& from = static_cast<const AbsoluteOrExtensionPaths&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.AbsoluteOrExtensionPaths)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_path()->MergeFrom(
      from._internal_path());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AbsoluteOrExtensionPaths::CopyFrom(const AbsoluteOrExtensionPaths& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.AbsoluteOrExtensionPaths)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AbsoluteOrExtensionPaths::InternalSwap(AbsoluteOrExtensionPaths* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.path_.InternalSwap(&other->_impl_.path_);
}

::google::protobuf::Metadata AbsoluteOrExtensionPaths::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ExtensionTypeUrlAndVersion::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ExtensionTypeUrlAndVersion>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ExtensionTypeUrlAndVersion, _impl_._has_bits_);
};

ExtensionTypeUrlAndVersion::ExtensionTypeUrlAndVersion(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ExtensionTypeUrlAndVersion_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.ExtensionTypeUrlAndVersion)
}
PROTOBUF_NDEBUG_INLINE ExtensionTypeUrlAndVersion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::base::ExtensionTypeUrlAndVersion& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ExtensionTypeUrlAndVersion::ExtensionTypeUrlAndVersion(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ExtensionTypeUrlAndVersion& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ExtensionTypeUrlAndVersion_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ExtensionTypeUrlAndVersion* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.type_url_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.type_url_)
                : nullptr;
  _impl_.version_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.version_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.ExtensionTypeUrlAndVersion)
}
PROTOBUF_NDEBUG_INLINE ExtensionTypeUrlAndVersion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ExtensionTypeUrlAndVersion::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_url_),
           0,
           offsetof(Impl_, version_) -
               offsetof(Impl_, type_url_) +
               sizeof(Impl_::version_));
}
ExtensionTypeUrlAndVersion::~ExtensionTypeUrlAndVersion() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.ExtensionTypeUrlAndVersion)
  SharedDtor(*this);
}
inline void ExtensionTypeUrlAndVersion::SharedDtor(MessageLite& self) {
  ExtensionTypeUrlAndVersion& this_ = static_cast<ExtensionTypeUrlAndVersion&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.type_url_;
  delete this_._impl_.version_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ExtensionTypeUrlAndVersion::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ExtensionTypeUrlAndVersion(arena);
}
constexpr auto ExtensionTypeUrlAndVersion::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ExtensionTypeUrlAndVersion),
                                            alignof(ExtensionTypeUrlAndVersion));
}
constexpr auto ExtensionTypeUrlAndVersion::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ExtensionTypeUrlAndVersion_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ExtensionTypeUrlAndVersion::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ExtensionTypeUrlAndVersion>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ExtensionTypeUrlAndVersion::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ExtensionTypeUrlAndVersion>(), &ExtensionTypeUrlAndVersion::ByteSizeLong,
              &ExtensionTypeUrlAndVersion::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ExtensionTypeUrlAndVersion, _impl_._cached_size_),
          false,
      },
      &ExtensionTypeUrlAndVersion::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ExtensionTypeUrlAndVersion_class_data_ =
        ExtensionTypeUrlAndVersion::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ExtensionTypeUrlAndVersion::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ExtensionTypeUrlAndVersion_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ExtensionTypeUrlAndVersion_class_data_.tc_table);
  return ExtensionTypeUrlAndVersion_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
ExtensionTypeUrlAndVersion::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ExtensionTypeUrlAndVersion, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ExtensionTypeUrlAndVersion_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::ExtensionTypeUrlAndVersion>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .sensoris.protobuf.types.base.Version version = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(ExtensionTypeUrlAndVersion, _impl_.version_)}},
    // .sensoris.protobuf.types.base.ExtensionTypeUrl type_url = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ExtensionTypeUrlAndVersion, _impl_.type_url_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.ExtensionTypeUrl type_url = 1;
    {PROTOBUF_FIELD_OFFSET(ExtensionTypeUrlAndVersion, _impl_.type_url_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.Version version = 2;
    {PROTOBUF_FIELD_OFFSET(ExtensionTypeUrlAndVersion, _impl_.version_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::ExtensionTypeUrl>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Version>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ExtensionTypeUrlAndVersion::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.ExtensionTypeUrlAndVersion)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.type_url_ != nullptr);
      _impl_.type_url_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.version_ != nullptr);
      _impl_.version_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ExtensionTypeUrlAndVersion::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ExtensionTypeUrlAndVersion& this_ = static_cast<const ExtensionTypeUrlAndVersion&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ExtensionTypeUrlAndVersion::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ExtensionTypeUrlAndVersion& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.ExtensionTypeUrlAndVersion)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.ExtensionTypeUrl type_url = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.type_url_, this_._impl_.type_url_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.types.base.Version version = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.version_, this_._impl_.version_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.ExtensionTypeUrlAndVersion)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ExtensionTypeUrlAndVersion::ByteSizeLong(const MessageLite& base) {
  const ExtensionTypeUrlAndVersion& this_ = static_cast<const ExtensionTypeUrlAndVersion&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ExtensionTypeUrlAndVersion::ByteSizeLong() const {
  const ExtensionTypeUrlAndVersion& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.ExtensionTypeUrlAndVersion)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .sensoris.protobuf.types.base.ExtensionTypeUrl type_url = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_url_);
    }
    // .sensoris.protobuf.types.base.Version version = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.version_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ExtensionTypeUrlAndVersion::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ExtensionTypeUrlAndVersion*>(&to_msg);
  auto& from = static_cast<const ExtensionTypeUrlAndVersion&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.ExtensionTypeUrlAndVersion)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.type_url_ != nullptr);
      if (_this->_impl_.type_url_ == nullptr) {
        _this->_impl_.type_url_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.type_url_);
      } else {
        _this->_impl_.type_url_->MergeFrom(*from._impl_.type_url_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.version_ != nullptr);
      if (_this->_impl_.version_ == nullptr) {
        _this->_impl_.version_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.version_);
      } else {
        _this->_impl_.version_->MergeFrom(*from._impl_.version_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExtensionTypeUrlAndVersion::CopyFrom(const ExtensionTypeUrlAndVersion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.ExtensionTypeUrlAndVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ExtensionTypeUrlAndVersion::InternalSwap(ExtensionTypeUrlAndVersion* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ExtensionTypeUrlAndVersion, _impl_.version_)
      + sizeof(ExtensionTypeUrlAndVersion::_impl_.version_)
      - PROTOBUF_FIELD_OFFSET(ExtensionTypeUrlAndVersion, _impl_.type_url_)>(
          reinterpret_cast<char*>(&_impl_.type_url_),
          reinterpret_cast<char*>(&other->_impl_.type_url_));
}

::google::protobuf::Metadata ExtensionTypeUrlAndVersion::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ExtensionTypeUrlAndVersionRanges::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ExtensionTypeUrlAndVersionRanges>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ExtensionTypeUrlAndVersionRanges, _impl_._has_bits_);
};

ExtensionTypeUrlAndVersionRanges::ExtensionTypeUrlAndVersionRanges(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ExtensionTypeUrlAndVersionRanges_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.ExtensionTypeUrlAndVersionRanges)
}
PROTOBUF_NDEBUG_INLINE ExtensionTypeUrlAndVersionRanges::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::base::ExtensionTypeUrlAndVersionRanges& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        version_range_{visibility, arena, from.version_range_} {}

ExtensionTypeUrlAndVersionRanges::ExtensionTypeUrlAndVersionRanges(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ExtensionTypeUrlAndVersionRanges& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ExtensionTypeUrlAndVersionRanges_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ExtensionTypeUrlAndVersionRanges* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.type_url_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.type_url_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.ExtensionTypeUrlAndVersionRanges)
}
PROTOBUF_NDEBUG_INLINE ExtensionTypeUrlAndVersionRanges::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        version_range_{visibility, arena} {}

inline void ExtensionTypeUrlAndVersionRanges::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.type_url_ = {};
}
ExtensionTypeUrlAndVersionRanges::~ExtensionTypeUrlAndVersionRanges() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.ExtensionTypeUrlAndVersionRanges)
  SharedDtor(*this);
}
inline void ExtensionTypeUrlAndVersionRanges::SharedDtor(MessageLite& self) {
  ExtensionTypeUrlAndVersionRanges& this_ = static_cast<ExtensionTypeUrlAndVersionRanges&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.type_url_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ExtensionTypeUrlAndVersionRanges::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ExtensionTypeUrlAndVersionRanges(arena);
}
constexpr auto ExtensionTypeUrlAndVersionRanges::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ExtensionTypeUrlAndVersionRanges, _impl_.version_range_) +
          decltype(ExtensionTypeUrlAndVersionRanges::_impl_.version_range_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ExtensionTypeUrlAndVersionRanges), alignof(ExtensionTypeUrlAndVersionRanges), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ExtensionTypeUrlAndVersionRanges::PlacementNew_,
                                 sizeof(ExtensionTypeUrlAndVersionRanges),
                                 alignof(ExtensionTypeUrlAndVersionRanges));
  }
}
constexpr auto ExtensionTypeUrlAndVersionRanges::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ExtensionTypeUrlAndVersionRanges_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ExtensionTypeUrlAndVersionRanges::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ExtensionTypeUrlAndVersionRanges>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ExtensionTypeUrlAndVersionRanges::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ExtensionTypeUrlAndVersionRanges>(), &ExtensionTypeUrlAndVersionRanges::ByteSizeLong,
              &ExtensionTypeUrlAndVersionRanges::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ExtensionTypeUrlAndVersionRanges, _impl_._cached_size_),
          false,
      },
      &ExtensionTypeUrlAndVersionRanges::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ExtensionTypeUrlAndVersionRanges_class_data_ =
        ExtensionTypeUrlAndVersionRanges::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ExtensionTypeUrlAndVersionRanges::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ExtensionTypeUrlAndVersionRanges_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ExtensionTypeUrlAndVersionRanges_class_data_.tc_table);
  return ExtensionTypeUrlAndVersionRanges_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
ExtensionTypeUrlAndVersionRanges::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ExtensionTypeUrlAndVersionRanges, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ExtensionTypeUrlAndVersionRanges_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::ExtensionTypeUrlAndVersionRanges>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .sensoris.protobuf.types.base.VersionRange version_range = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(ExtensionTypeUrlAndVersionRanges, _impl_.version_range_)}},
    // .sensoris.protobuf.types.base.ExtensionTypeUrl type_url = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ExtensionTypeUrlAndVersionRanges, _impl_.type_url_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.ExtensionTypeUrl type_url = 1;
    {PROTOBUF_FIELD_OFFSET(ExtensionTypeUrlAndVersionRanges, _impl_.type_url_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .sensoris.protobuf.types.base.VersionRange version_range = 2;
    {PROTOBUF_FIELD_OFFSET(ExtensionTypeUrlAndVersionRanges, _impl_.version_range_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::ExtensionTypeUrl>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::VersionRange>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ExtensionTypeUrlAndVersionRanges::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.ExtensionTypeUrlAndVersionRanges)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.version_range_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.type_url_ != nullptr);
    _impl_.type_url_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ExtensionTypeUrlAndVersionRanges::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ExtensionTypeUrlAndVersionRanges& this_ = static_cast<const ExtensionTypeUrlAndVersionRanges&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ExtensionTypeUrlAndVersionRanges::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ExtensionTypeUrlAndVersionRanges& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.ExtensionTypeUrlAndVersionRanges)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.ExtensionTypeUrl type_url = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.type_url_, this_._impl_.type_url_->GetCachedSize(), target,
        stream);
  }

  // repeated .sensoris.protobuf.types.base.VersionRange version_range = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_version_range_size());
       i < n; i++) {
    const auto& repfield = this_._internal_version_range().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.ExtensionTypeUrlAndVersionRanges)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ExtensionTypeUrlAndVersionRanges::ByteSizeLong(const MessageLite& base) {
  const ExtensionTypeUrlAndVersionRanges& this_ = static_cast<const ExtensionTypeUrlAndVersionRanges&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ExtensionTypeUrlAndVersionRanges::ByteSizeLong() const {
  const ExtensionTypeUrlAndVersionRanges& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.ExtensionTypeUrlAndVersionRanges)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .sensoris.protobuf.types.base.VersionRange version_range = 2;
    {
      total_size += 1UL * this_._internal_version_range_size();
      for (const auto& msg : this_._internal_version_range()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // .sensoris.protobuf.types.base.ExtensionTypeUrl type_url = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_url_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ExtensionTypeUrlAndVersionRanges::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ExtensionTypeUrlAndVersionRanges*>(&to_msg);
  auto& from = static_cast<const ExtensionTypeUrlAndVersionRanges&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.ExtensionTypeUrlAndVersionRanges)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_version_range()->MergeFrom(
      from._internal_version_range());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.type_url_ != nullptr);
    if (_this->_impl_.type_url_ == nullptr) {
      _this->_impl_.type_url_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.type_url_);
    } else {
      _this->_impl_.type_url_->MergeFrom(*from._impl_.type_url_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExtensionTypeUrlAndVersionRanges::CopyFrom(const ExtensionTypeUrlAndVersionRanges& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.ExtensionTypeUrlAndVersionRanges)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ExtensionTypeUrlAndVersionRanges::InternalSwap(ExtensionTypeUrlAndVersionRanges* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.version_range_.InternalSwap(&other->_impl_.version_range_);
  swap(_impl_.type_url_, other->_impl_.type_url_);
}

::google::protobuf::Metadata ExtensionTypeUrlAndVersionRanges::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EventEnvelope_DetectionType::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<EventEnvelope_DetectionType>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EventEnvelope_DetectionType, _impl_._has_bits_);
};

EventEnvelope_DetectionType::EventEnvelope_DetectionType(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EventEnvelope_DetectionType_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.EventEnvelope.DetectionType)
}
EventEnvelope_DetectionType::EventEnvelope_DetectionType(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const EventEnvelope_DetectionType& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EventEnvelope_DetectionType_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE EventEnvelope_DetectionType::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void EventEnvelope_DetectionType::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.type_ = {};
}
EventEnvelope_DetectionType::~EventEnvelope_DetectionType() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.EventEnvelope.DetectionType)
  SharedDtor(*this);
}
inline void EventEnvelope_DetectionType::SharedDtor(MessageLite& self) {
  EventEnvelope_DetectionType& this_ = static_cast<EventEnvelope_DetectionType&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL EventEnvelope_DetectionType::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EventEnvelope_DetectionType(arena);
}
constexpr auto EventEnvelope_DetectionType::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(EventEnvelope_DetectionType),
                                            alignof(EventEnvelope_DetectionType));
}
constexpr auto EventEnvelope_DetectionType::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EventEnvelope_DetectionType_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EventEnvelope_DetectionType::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EventEnvelope_DetectionType>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EventEnvelope_DetectionType::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<EventEnvelope_DetectionType>(), &EventEnvelope_DetectionType::ByteSizeLong,
              &EventEnvelope_DetectionType::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EventEnvelope_DetectionType, _impl_._cached_size_),
          false,
      },
      &EventEnvelope_DetectionType::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EventEnvelope_DetectionType_class_data_ =
        EventEnvelope_DetectionType::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
EventEnvelope_DetectionType::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EventEnvelope_DetectionType_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EventEnvelope_DetectionType_class_data_.tc_table);
  return EventEnvelope_DetectionType_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
EventEnvelope_DetectionType::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EventEnvelope_DetectionType, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    EventEnvelope_DetectionType_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::EventEnvelope_DetectionType>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .sensoris.protobuf.types.base.EventEnvelope.DetectionType.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EventEnvelope_DetectionType, _impl_.type_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(EventEnvelope_DetectionType, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.EventEnvelope.DetectionType.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(EventEnvelope_DetectionType, _impl_.type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void EventEnvelope_DetectionType::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.EventEnvelope.DetectionType)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL EventEnvelope_DetectionType::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const EventEnvelope_DetectionType& this_ = static_cast<const EventEnvelope_DetectionType&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL EventEnvelope_DetectionType::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const EventEnvelope_DetectionType& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.EventEnvelope.DetectionType)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .sensoris.protobuf.types.base.EventEnvelope.DetectionType.Type type = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_type(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.EventEnvelope.DetectionType)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EventEnvelope_DetectionType::ByteSizeLong(const MessageLite& base) {
  const EventEnvelope_DetectionType& this_ = static_cast<const EventEnvelope_DetectionType&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EventEnvelope_DetectionType::ByteSizeLong() const {
  const EventEnvelope_DetectionType& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.EventEnvelope.DetectionType)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .sensoris.protobuf.types.base.EventEnvelope.DetectionType.Type type = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void EventEnvelope_DetectionType::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EventEnvelope_DetectionType*>(&to_msg);
  auto& from = static_cast<const EventEnvelope_DetectionType&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.EventEnvelope.DetectionType)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_type() != 0) {
      _this->_impl_.type_ = from._impl_.type_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EventEnvelope_DetectionType::CopyFrom(const EventEnvelope_DetectionType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.EventEnvelope.DetectionType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EventEnvelope_DetectionType::InternalSwap(EventEnvelope_DetectionType* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.type_, other->_impl_.type_);
}

::google::protobuf::Metadata EventEnvelope_DetectionType::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EventEnvelope::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<EventEnvelope>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EventEnvelope, _impl_._has_bits_);
};

void EventEnvelope::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.id_ != nullptr) _impl_.id_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void EventEnvelope::clear_extension() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.extension_.Clear();
}
EventEnvelope::EventEnvelope(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EventEnvelope_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.EventEnvelope)
}
PROTOBUF_NDEBUG_INLINE EventEnvelope::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::base::EventEnvelope& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        extension_{visibility, arena, from.extension_} {}

EventEnvelope::EventEnvelope(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const EventEnvelope& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EventEnvelope_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EventEnvelope* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.id_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.id_)
                : nullptr;
  _impl_.timestamp_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_)
                : nullptr;
  _impl_.detection_type_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.detection_type_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.EventEnvelope)
}
PROTOBUF_NDEBUG_INLINE EventEnvelope::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        extension_{visibility, arena} {}

inline void EventEnvelope::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, detection_type_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::detection_type_));
}
EventEnvelope::~EventEnvelope() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.EventEnvelope)
  SharedDtor(*this);
}
inline void EventEnvelope::SharedDtor(MessageLite& self) {
  EventEnvelope& this_ = static_cast<EventEnvelope&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.id_;
  delete this_._impl_.timestamp_;
  delete this_._impl_.detection_type_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL EventEnvelope::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EventEnvelope(arena);
}
constexpr auto EventEnvelope::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(EventEnvelope, _impl_.extension_) +
          decltype(EventEnvelope::_impl_.extension_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(EventEnvelope), alignof(EventEnvelope), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&EventEnvelope::PlacementNew_,
                                 sizeof(EventEnvelope),
                                 alignof(EventEnvelope));
  }
}
constexpr auto EventEnvelope::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EventEnvelope_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EventEnvelope::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EventEnvelope>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EventEnvelope::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<EventEnvelope>(), &EventEnvelope::ByteSizeLong,
              &EventEnvelope::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EventEnvelope, _impl_._cached_size_),
          false,
      },
      &EventEnvelope::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EventEnvelope_class_data_ =
        EventEnvelope::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
EventEnvelope::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EventEnvelope_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EventEnvelope_class_data_.tc_table);
  return EventEnvelope_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 4, 4, 0, 2>
EventEnvelope::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EventEnvelope, _impl_._has_bits_),
    0, // no _extensions_
    15, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950904,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    EventEnvelope_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::EventEnvelope>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Int64Value id = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EventEnvelope, _impl_.id_)}},
    // .sensoris.protobuf.types.base.Timestamp timestamp = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(EventEnvelope, _impl_.timestamp_)}},
    // .sensoris.protobuf.types.base.EventEnvelope.DetectionType detection_type = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(EventEnvelope, _impl_.detection_type_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .google.protobuf.Any extension = 15;
    {::_pbi::TcParser::FastMtR1,
     {122, 63, 3, PROTOBUF_FIELD_OFFSET(EventEnvelope, _impl_.extension_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Int64Value id = 1;
    {PROTOBUF_FIELD_OFFSET(EventEnvelope, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.Timestamp timestamp = 2;
    {PROTOBUF_FIELD_OFFSET(EventEnvelope, _impl_.timestamp_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.EventEnvelope.DetectionType detection_type = 3;
    {PROTOBUF_FIELD_OFFSET(EventEnvelope, _impl_.detection_type_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .google.protobuf.Any extension = 15;
    {PROTOBUF_FIELD_OFFSET(EventEnvelope, _impl_.extension_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Timestamp>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::EventEnvelope_DetectionType>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void EventEnvelope::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.EventEnvelope)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.extension_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.id_ != nullptr);
      _impl_.id_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.timestamp_ != nullptr);
      _impl_.timestamp_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.detection_type_ != nullptr);
      _impl_.detection_type_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL EventEnvelope::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const EventEnvelope& this_ = static_cast<const EventEnvelope&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL EventEnvelope::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const EventEnvelope& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.EventEnvelope)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Int64Value id = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.id_, this_._impl_.id_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.types.base.Timestamp timestamp = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.timestamp_, this_._impl_.timestamp_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.types.base.EventEnvelope.DetectionType detection_type = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.detection_type_, this_._impl_.detection_type_->GetCachedSize(), target,
        stream);
  }

  // repeated .google.protobuf.Any extension = 15;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_extension_size());
       i < n; i++) {
    const auto& repfield = this_._internal_extension().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            15, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.EventEnvelope)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EventEnvelope::ByteSizeLong(const MessageLite& base) {
  const EventEnvelope& this_ = static_cast<const EventEnvelope&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EventEnvelope::ByteSizeLong() const {
  const EventEnvelope& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.EventEnvelope)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .google.protobuf.Any extension = 15;
    {
      total_size += 1UL * this_._internal_extension_size();
      for (const auto& msg : this_._internal_extension()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .google.protobuf.Int64Value id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.id_);
    }
    // .sensoris.protobuf.types.base.Timestamp timestamp = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.timestamp_);
    }
    // .sensoris.protobuf.types.base.EventEnvelope.DetectionType detection_type = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.detection_type_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void EventEnvelope::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EventEnvelope*>(&to_msg);
  auto& from = static_cast<const EventEnvelope&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.EventEnvelope)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_extension()->MergeFrom(
      from._internal_extension());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.id_ != nullptr);
      if (_this->_impl_.id_ == nullptr) {
        _this->_impl_.id_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.id_);
      } else {
        _this->_impl_.id_->MergeFrom(*from._impl_.id_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.timestamp_ != nullptr);
      if (_this->_impl_.timestamp_ == nullptr) {
        _this->_impl_.timestamp_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_);
      } else {
        _this->_impl_.timestamp_->MergeFrom(*from._impl_.timestamp_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.detection_type_ != nullptr);
      if (_this->_impl_.detection_type_ == nullptr) {
        _this->_impl_.detection_type_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.detection_type_);
      } else {
        _this->_impl_.detection_type_->MergeFrom(*from._impl_.detection_type_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EventEnvelope::CopyFrom(const EventEnvelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.EventEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EventEnvelope::InternalSwap(EventEnvelope* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.extension_.InternalSwap(&other->_impl_.extension_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EventEnvelope, _impl_.detection_type_)
      + sizeof(EventEnvelope::_impl_.detection_type_)
      - PROTOBUF_FIELD_OFFSET(EventEnvelope, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata EventEnvelope::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EventDetectionStatus::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<EventDetectionStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EventDetectionStatus, _impl_._has_bits_);
};

EventDetectionStatus::EventDetectionStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EventDetectionStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.EventDetectionStatus)
}
PROTOBUF_NDEBUG_INLINE EventDetectionStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::base::EventDetectionStatus& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

EventDetectionStatus::EventDetectionStatus(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const EventDetectionStatus& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EventDetectionStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EventDetectionStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.confidence_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.confidence_)
                : nullptr;
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.EventDetectionStatus)
}
PROTOBUF_NDEBUG_INLINE EventDetectionStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void EventDetectionStatus::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, confidence_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, confidence_) +
               sizeof(Impl_::type_));
}
EventDetectionStatus::~EventDetectionStatus() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.EventDetectionStatus)
  SharedDtor(*this);
}
inline void EventDetectionStatus::SharedDtor(MessageLite& self) {
  EventDetectionStatus& this_ = static_cast<EventDetectionStatus&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.confidence_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL EventDetectionStatus::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EventDetectionStatus(arena);
}
constexpr auto EventDetectionStatus::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(EventDetectionStatus),
                                            alignof(EventDetectionStatus));
}
constexpr auto EventDetectionStatus::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EventDetectionStatus_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EventDetectionStatus::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EventDetectionStatus>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EventDetectionStatus::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<EventDetectionStatus>(), &EventDetectionStatus::ByteSizeLong,
              &EventDetectionStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EventDetectionStatus, _impl_._cached_size_),
          false,
      },
      &EventDetectionStatus::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EventDetectionStatus_class_data_ =
        EventDetectionStatus::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
EventDetectionStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EventDetectionStatus_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EventDetectionStatus_class_data_.tc_table);
  return EventDetectionStatus_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
EventDetectionStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EventDetectionStatus, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    EventDetectionStatus_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::EventDetectionStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(EventDetectionStatus, _impl_.confidence_)}},
    // .sensoris.protobuf.types.base.EventDetectionStatus.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EventDetectionStatus, _impl_.type_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(EventDetectionStatus, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.EventDetectionStatus.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(EventDetectionStatus, _impl_.type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    {PROTOBUF_FIELD_OFFSET(EventDetectionStatus, _impl_.confidence_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Confidence>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void EventDetectionStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.EventDetectionStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.confidence_ != nullptr);
    _impl_.confidence_->Clear();
  }
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL EventDetectionStatus::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const EventDetectionStatus& this_ = static_cast<const EventDetectionStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL EventDetectionStatus::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const EventDetectionStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.EventDetectionStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .sensoris.protobuf.types.base.EventDetectionStatus.Type type = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_type(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.Confidence confidence = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.confidence_, this_._impl_.confidence_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.EventDetectionStatus)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EventDetectionStatus::ByteSizeLong(const MessageLite& base) {
  const EventDetectionStatus& this_ = static_cast<const EventDetectionStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EventDetectionStatus::ByteSizeLong() const {
  const EventDetectionStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.EventDetectionStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.confidence_);
    }
    // .sensoris.protobuf.types.base.EventDetectionStatus.Type type = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void EventDetectionStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EventDetectionStatus*>(&to_msg);
  auto& from = static_cast<const EventDetectionStatus&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.EventDetectionStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.confidence_ != nullptr);
      if (_this->_impl_.confidence_ == nullptr) {
        _this->_impl_.confidence_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.confidence_);
      } else {
        _this->_impl_.confidence_->MergeFrom(*from._impl_.confidence_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_type() != 0) {
        _this->_impl_.type_ = from._impl_.type_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EventDetectionStatus::CopyFrom(const EventDetectionStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.EventDetectionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EventDetectionStatus::InternalSwap(EventDetectionStatus* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EventDetectionStatus, _impl_.type_)
      + sizeof(EventDetectionStatus::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(EventDetectionStatus, _impl_.confidence_)>(
          reinterpret_cast<char*>(&_impl_.confidence_),
          reinterpret_cast<char*>(&other->_impl_.confidence_));
}

::google::protobuf::Metadata EventDetectionStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CategoryEnvelope::_Internal {
 public:
};

void CategoryEnvelope::clear_extension() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.extension_.Clear();
}
CategoryEnvelope::CategoryEnvelope(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CategoryEnvelope_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.CategoryEnvelope)
}
PROTOBUF_NDEBUG_INLINE CategoryEnvelope::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::base::CategoryEnvelope& from_msg)
      : extension_{visibility, arena, from.extension_},
        _cached_size_{0} {}

CategoryEnvelope::CategoryEnvelope(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CategoryEnvelope& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CategoryEnvelope_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CategoryEnvelope* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.CategoryEnvelope)
}
PROTOBUF_NDEBUG_INLINE CategoryEnvelope::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : extension_{visibility, arena},
        _cached_size_{0} {}

inline void CategoryEnvelope::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CategoryEnvelope::~CategoryEnvelope() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.CategoryEnvelope)
  SharedDtor(*this);
}
inline void CategoryEnvelope::SharedDtor(MessageLite& self) {
  CategoryEnvelope& this_ = static_cast<CategoryEnvelope&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CategoryEnvelope::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CategoryEnvelope(arena);
}
constexpr auto CategoryEnvelope::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CategoryEnvelope, _impl_.extension_) +
          decltype(CategoryEnvelope::_impl_.extension_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CategoryEnvelope), alignof(CategoryEnvelope), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CategoryEnvelope::PlacementNew_,
                                 sizeof(CategoryEnvelope),
                                 alignof(CategoryEnvelope));
  }
}
constexpr auto CategoryEnvelope::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CategoryEnvelope_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CategoryEnvelope::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CategoryEnvelope>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CategoryEnvelope::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CategoryEnvelope>(), &CategoryEnvelope::ByteSizeLong,
              &CategoryEnvelope::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CategoryEnvelope, _impl_._cached_size_),
          false,
      },
      &CategoryEnvelope::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CategoryEnvelope_class_data_ =
        CategoryEnvelope::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CategoryEnvelope::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CategoryEnvelope_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CategoryEnvelope_class_data_.tc_table);
  return CategoryEnvelope_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
CategoryEnvelope::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    15, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950911,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CategoryEnvelope_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::CategoryEnvelope>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .google.protobuf.Any extension = 15;
    {::_pbi::TcParser::FastMtR1,
     {122, 63, 0, PROTOBUF_FIELD_OFFSET(CategoryEnvelope, _impl_.extension_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .google.protobuf.Any extension = 15;
    {PROTOBUF_FIELD_OFFSET(CategoryEnvelope, _impl_.extension_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CategoryEnvelope::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.CategoryEnvelope)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.extension_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CategoryEnvelope::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CategoryEnvelope& this_ = static_cast<const CategoryEnvelope&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CategoryEnvelope::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CategoryEnvelope& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.CategoryEnvelope)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .google.protobuf.Any extension = 15;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_extension_size());
       i < n; i++) {
    const auto& repfield = this_._internal_extension().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            15, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.CategoryEnvelope)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CategoryEnvelope::ByteSizeLong(const MessageLite& base) {
  const CategoryEnvelope& this_ = static_cast<const CategoryEnvelope&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CategoryEnvelope::ByteSizeLong() const {
  const CategoryEnvelope& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.CategoryEnvelope)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .google.protobuf.Any extension = 15;
    {
      total_size += 1UL * this_._internal_extension_size();
      for (const auto& msg : this_._internal_extension()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CategoryEnvelope::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CategoryEnvelope*>(&to_msg);
  auto& from = static_cast<const CategoryEnvelope&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.CategoryEnvelope)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_extension()->MergeFrom(
      from._internal_extension());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CategoryEnvelope::CopyFrom(const CategoryEnvelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.CategoryEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CategoryEnvelope::InternalSwap(CategoryEnvelope* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.extension_.InternalSwap(&other->_impl_.extension_);
}

::google::protobuf::Metadata CategoryEnvelope::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MessagesEnvelope::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MessagesEnvelope>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MessagesEnvelope, _impl_._has_bits_);
};

void MessagesEnvelope::clear_extension() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.extension_.Clear();
}
MessagesEnvelope::MessagesEnvelope(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MessagesEnvelope_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.MessagesEnvelope)
}
PROTOBUF_NDEBUG_INLINE MessagesEnvelope::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::base::MessagesEnvelope& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        submitter_{visibility, arena, from.submitter_},
        extension_type_url_and_version_{visibility, arena, from.extension_type_url_and_version_},
        extension_{visibility, arena, from.extension_} {}

MessagesEnvelope::MessagesEnvelope(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const MessagesEnvelope& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MessagesEnvelope_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MessagesEnvelope* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.version_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.version_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.MessagesEnvelope)
}
PROTOBUF_NDEBUG_INLINE MessagesEnvelope::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        submitter_{visibility, arena},
        extension_type_url_and_version_{visibility, arena},
        extension_{visibility, arena} {}

inline void MessagesEnvelope::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.version_ = {};
}
MessagesEnvelope::~MessagesEnvelope() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.MessagesEnvelope)
  SharedDtor(*this);
}
inline void MessagesEnvelope::SharedDtor(MessageLite& self) {
  MessagesEnvelope& this_ = static_cast<MessagesEnvelope&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.version_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MessagesEnvelope::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MessagesEnvelope(arena);
}
constexpr auto MessagesEnvelope::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(MessagesEnvelope, _impl_.submitter_) +
          decltype(MessagesEnvelope::_impl_.submitter_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(MessagesEnvelope, _impl_.extension_type_url_and_version_) +
          decltype(MessagesEnvelope::_impl_.extension_type_url_and_version_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(MessagesEnvelope, _impl_.extension_) +
          decltype(MessagesEnvelope::_impl_.extension_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(MessagesEnvelope), alignof(MessagesEnvelope), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&MessagesEnvelope::PlacementNew_,
                                 sizeof(MessagesEnvelope),
                                 alignof(MessagesEnvelope));
  }
}
constexpr auto MessagesEnvelope::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MessagesEnvelope_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MessagesEnvelope::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MessagesEnvelope>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MessagesEnvelope::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MessagesEnvelope>(), &MessagesEnvelope::ByteSizeLong,
              &MessagesEnvelope::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MessagesEnvelope, _impl_._cached_size_),
          false,
      },
      &MessagesEnvelope::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MessagesEnvelope_class_data_ =
        MessagesEnvelope::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MessagesEnvelope::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MessagesEnvelope_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MessagesEnvelope_class_data_.tc_table);
  return MessagesEnvelope_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 4, 4, 0, 2>
MessagesEnvelope::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MessagesEnvelope, _impl_._has_bits_),
    0, // no _extensions_
    15, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950904,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    MessagesEnvelope_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::MessagesEnvelope>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .sensoris.protobuf.types.base.Version version = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(MessagesEnvelope, _impl_.version_)}},
    // repeated .sensoris.protobuf.types.base.Entity submitter = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(MessagesEnvelope, _impl_.submitter_)}},
    // repeated .sensoris.protobuf.types.base.ExtensionTypeUrlAndVersion extension_type_url_and_version = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(MessagesEnvelope, _impl_.extension_type_url_and_version_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .google.protobuf.Any extension = 15;
    {::_pbi::TcParser::FastMtR1,
     {122, 63, 3, PROTOBUF_FIELD_OFFSET(MessagesEnvelope, _impl_.extension_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.Version version = 1;
    {PROTOBUF_FIELD_OFFSET(MessagesEnvelope, _impl_.version_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .sensoris.protobuf.types.base.Entity submitter = 2;
    {PROTOBUF_FIELD_OFFSET(MessagesEnvelope, _impl_.submitter_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .sensoris.protobuf.types.base.ExtensionTypeUrlAndVersion extension_type_url_and_version = 3;
    {PROTOBUF_FIELD_OFFSET(MessagesEnvelope, _impl_.extension_type_url_and_version_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .google.protobuf.Any extension = 15;
    {PROTOBUF_FIELD_OFFSET(MessagesEnvelope, _impl_.extension_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Version>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Entity>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::ExtensionTypeUrlAndVersion>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void MessagesEnvelope::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.MessagesEnvelope)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.submitter_.Clear();
  _impl_.extension_type_url_and_version_.Clear();
  _impl_.extension_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.version_ != nullptr);
    _impl_.version_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MessagesEnvelope::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MessagesEnvelope& this_ = static_cast<const MessagesEnvelope&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MessagesEnvelope::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MessagesEnvelope& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.MessagesEnvelope)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.Version version = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.version_, this_._impl_.version_->GetCachedSize(), target,
        stream);
  }

  // repeated .sensoris.protobuf.types.base.Entity submitter = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_submitter_size());
       i < n; i++) {
    const auto& repfield = this_._internal_submitter().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .sensoris.protobuf.types.base.ExtensionTypeUrlAndVersion extension_type_url_and_version = 3;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_extension_type_url_and_version_size());
       i < n; i++) {
    const auto& repfield = this_._internal_extension_type_url_and_version().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .google.protobuf.Any extension = 15;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_extension_size());
       i < n; i++) {
    const auto& repfield = this_._internal_extension().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            15, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.MessagesEnvelope)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MessagesEnvelope::ByteSizeLong(const MessageLite& base) {
  const MessagesEnvelope& this_ = static_cast<const MessagesEnvelope&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MessagesEnvelope::ByteSizeLong() const {
  const MessagesEnvelope& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.MessagesEnvelope)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .sensoris.protobuf.types.base.Entity submitter = 2;
    {
      total_size += 1UL * this_._internal_submitter_size();
      for (const auto& msg : this_._internal_submitter()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .sensoris.protobuf.types.base.ExtensionTypeUrlAndVersion extension_type_url_and_version = 3;
    {
      total_size += 1UL * this_._internal_extension_type_url_and_version_size();
      for (const auto& msg : this_._internal_extension_type_url_and_version()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .google.protobuf.Any extension = 15;
    {
      total_size += 1UL * this_._internal_extension_size();
      for (const auto& msg : this_._internal_extension()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // .sensoris.protobuf.types.base.Version version = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.version_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MessagesEnvelope::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MessagesEnvelope*>(&to_msg);
  auto& from = static_cast<const MessagesEnvelope&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.MessagesEnvelope)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_submitter()->MergeFrom(
      from._internal_submitter());
  _this->_internal_mutable_extension_type_url_and_version()->MergeFrom(
      from._internal_extension_type_url_and_version());
  _this->_internal_mutable_extension()->MergeFrom(
      from._internal_extension());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.version_ != nullptr);
    if (_this->_impl_.version_ == nullptr) {
      _this->_impl_.version_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.version_);
    } else {
      _this->_impl_.version_->MergeFrom(*from._impl_.version_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MessagesEnvelope::CopyFrom(const MessagesEnvelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.MessagesEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MessagesEnvelope::InternalSwap(MessagesEnvelope* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.submitter_.InternalSwap(&other->_impl_.submitter_);
  _impl_.extension_type_url_and_version_.InternalSwap(&other->_impl_.extension_type_url_and_version_);
  _impl_.extension_.InternalSwap(&other->_impl_.extension_);
  swap(_impl_.version_, other->_impl_.version_);
}

::google::protobuf::Metadata MessagesEnvelope::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Int64Interval::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Int64Interval>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Int64Interval, _impl_._has_bits_);
};

void Int64Interval::clear_min_inclusive() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.min_inclusive_ != nullptr) _impl_.min_inclusive_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Int64Interval::clear_max_exclusive() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.max_exclusive_ != nullptr) _impl_.max_exclusive_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
Int64Interval::Int64Interval(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Int64Interval_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.Int64Interval)
}
PROTOBUF_NDEBUG_INLINE Int64Interval::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::base::Int64Interval& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Int64Interval::Int64Interval(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Int64Interval& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Int64Interval_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Int64Interval* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.min_inclusive_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.min_inclusive_)
                : nullptr;
  _impl_.max_exclusive_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.max_exclusive_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.Int64Interval)
}
PROTOBUF_NDEBUG_INLINE Int64Interval::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Int64Interval::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, min_inclusive_),
           0,
           offsetof(Impl_, max_exclusive_) -
               offsetof(Impl_, min_inclusive_) +
               sizeof(Impl_::max_exclusive_));
}
Int64Interval::~Int64Interval() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.Int64Interval)
  SharedDtor(*this);
}
inline void Int64Interval::SharedDtor(MessageLite& self) {
  Int64Interval& this_ = static_cast<Int64Interval&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.min_inclusive_;
  delete this_._impl_.max_exclusive_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Int64Interval::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Int64Interval(arena);
}
constexpr auto Int64Interval::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Int64Interval),
                                            alignof(Int64Interval));
}
constexpr auto Int64Interval::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Int64Interval_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Int64Interval::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Int64Interval>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Int64Interval::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Int64Interval>(), &Int64Interval::ByteSizeLong,
              &Int64Interval::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Int64Interval, _impl_._cached_size_),
          false,
      },
      &Int64Interval::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Int64Interval_class_data_ =
        Int64Interval::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Int64Interval::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Int64Interval_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Int64Interval_class_data_.tc_table);
  return Int64Interval_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
Int64Interval::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Int64Interval, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Int64Interval_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64Interval>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Int64Value max_exclusive = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Int64Interval, _impl_.max_exclusive_)}},
    // .google.protobuf.Int64Value min_inclusive = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Int64Interval, _impl_.min_inclusive_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Int64Value min_inclusive = 1;
    {PROTOBUF_FIELD_OFFSET(Int64Interval, _impl_.min_inclusive_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Int64Value max_exclusive = 2;
    {PROTOBUF_FIELD_OFFSET(Int64Interval, _impl_.max_exclusive_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Int64Interval::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.Int64Interval)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.min_inclusive_ != nullptr);
      _impl_.min_inclusive_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.max_exclusive_ != nullptr);
      _impl_.max_exclusive_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Int64Interval::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Int64Interval& this_ = static_cast<const Int64Interval&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Int64Interval::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Int64Interval& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.Int64Interval)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Int64Value min_inclusive = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.min_inclusive_, this_._impl_.min_inclusive_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Int64Value max_exclusive = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.max_exclusive_, this_._impl_.max_exclusive_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.Int64Interval)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Int64Interval::ByteSizeLong(const MessageLite& base) {
  const Int64Interval& this_ = static_cast<const Int64Interval&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Int64Interval::ByteSizeLong() const {
  const Int64Interval& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.Int64Interval)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .google.protobuf.Int64Value min_inclusive = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.min_inclusive_);
    }
    // .google.protobuf.Int64Value max_exclusive = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.max_exclusive_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Int64Interval::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Int64Interval*>(&to_msg);
  auto& from = static_cast<const Int64Interval&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.Int64Interval)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.min_inclusive_ != nullptr);
      if (_this->_impl_.min_inclusive_ == nullptr) {
        _this->_impl_.min_inclusive_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.min_inclusive_);
      } else {
        _this->_impl_.min_inclusive_->MergeFrom(*from._impl_.min_inclusive_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.max_exclusive_ != nullptr);
      if (_this->_impl_.max_exclusive_ == nullptr) {
        _this->_impl_.max_exclusive_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.max_exclusive_);
      } else {
        _this->_impl_.max_exclusive_->MergeFrom(*from._impl_.max_exclusive_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Int64Interval::CopyFrom(const Int64Interval& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.Int64Interval)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Int64Interval::InternalSwap(Int64Interval* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Int64Interval, _impl_.max_exclusive_)
      + sizeof(Int64Interval::_impl_.max_exclusive_)
      - PROTOBUF_FIELD_OFFSET(Int64Interval, _impl_.min_inclusive_)>(
          reinterpret_cast<char*>(&_impl_.min_inclusive_),
          reinterpret_cast<char*>(&other->_impl_.min_inclusive_));
}

::google::protobuf::Metadata Int64Interval::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Int64StatisticMeasure::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Int64StatisticMeasure>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Int64StatisticMeasure, _impl_._has_bits_);
};

Int64StatisticMeasure::Int64StatisticMeasure(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Int64StatisticMeasure_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.Int64StatisticMeasure)
}
PROTOBUF_NDEBUG_INLINE Int64StatisticMeasure::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::base::Int64StatisticMeasure& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Int64StatisticMeasure::Int64StatisticMeasure(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Int64StatisticMeasure& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Int64StatisticMeasure_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Int64StatisticMeasure* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.timestamp_interval_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_interval_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, value_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, value_),
           offsetof(Impl_, type_) -
               offsetof(Impl_, value_) +
               sizeof(Impl_::type_));

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.Int64StatisticMeasure)
}
PROTOBUF_NDEBUG_INLINE Int64StatisticMeasure::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Int64StatisticMeasure::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_interval_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, timestamp_interval_) +
               sizeof(Impl_::type_));
}
Int64StatisticMeasure::~Int64StatisticMeasure() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.Int64StatisticMeasure)
  SharedDtor(*this);
}
inline void Int64StatisticMeasure::SharedDtor(MessageLite& self) {
  Int64StatisticMeasure& this_ = static_cast<Int64StatisticMeasure&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.timestamp_interval_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Int64StatisticMeasure::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Int64StatisticMeasure(arena);
}
constexpr auto Int64StatisticMeasure::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Int64StatisticMeasure),
                                            alignof(Int64StatisticMeasure));
}
constexpr auto Int64StatisticMeasure::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Int64StatisticMeasure_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Int64StatisticMeasure::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Int64StatisticMeasure>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Int64StatisticMeasure::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Int64StatisticMeasure>(), &Int64StatisticMeasure::ByteSizeLong,
              &Int64StatisticMeasure::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Int64StatisticMeasure, _impl_._cached_size_),
          false,
      },
      &Int64StatisticMeasure::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Int64StatisticMeasure_class_data_ =
        Int64StatisticMeasure::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Int64StatisticMeasure::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Int64StatisticMeasure_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Int64StatisticMeasure_class_data_.tc_table);
  return Int64StatisticMeasure_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2>
Int64StatisticMeasure::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Int64StatisticMeasure, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Int64StatisticMeasure_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64StatisticMeasure>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Int64StatisticMeasure, _impl_.timestamp_interval_)}},
    // .sensoris.protobuf.types.base.StatisticMeasureType type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Int64StatisticMeasure, _impl_.type_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(Int64StatisticMeasure, _impl_.type_)}},
    // int64 value = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Int64StatisticMeasure, _impl_.value_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(Int64StatisticMeasure, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
    {PROTOBUF_FIELD_OFFSET(Int64StatisticMeasure, _impl_.timestamp_interval_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.StatisticMeasureType type = 2;
    {PROTOBUF_FIELD_OFFSET(Int64StatisticMeasure, _impl_.type_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // int64 value = 3;
    {PROTOBUF_FIELD_OFFSET(Int64StatisticMeasure, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::TimestampInterval>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Int64StatisticMeasure::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.Int64StatisticMeasure)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.timestamp_interval_ != nullptr);
    _impl_.timestamp_interval_->Clear();
  }
  if ((cached_has_bits & 0x00000006u) != 0) {
    ::memset(&_impl_.value_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.type_) -
        reinterpret_cast<char*>(&_impl_.value_)) + sizeof(_impl_.type_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Int64StatisticMeasure::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Int64StatisticMeasure& this_ = static_cast<const Int64StatisticMeasure&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Int64StatisticMeasure::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Int64StatisticMeasure& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.Int64StatisticMeasure)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.timestamp_interval_, this_._impl_.timestamp_interval_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.types.base.StatisticMeasureType type = 2;
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (this_._internal_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_type(), target);
    }
  }

  // int64 value = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    if (this_._internal_value() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<3>(
              stream, this_._internal_value(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.Int64StatisticMeasure)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Int64StatisticMeasure::ByteSizeLong(const MessageLite& base) {
  const Int64StatisticMeasure& this_ = static_cast<const Int64StatisticMeasure&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Int64StatisticMeasure::ByteSizeLong() const {
  const Int64StatisticMeasure& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.Int64StatisticMeasure)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.timestamp_interval_);
    }
    // int64 value = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_value() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_value());
      }
    }
    // .sensoris.protobuf.types.base.StatisticMeasureType type = 2;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Int64StatisticMeasure::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Int64StatisticMeasure*>(&to_msg);
  auto& from = static_cast<const Int64StatisticMeasure&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.Int64StatisticMeasure)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.timestamp_interval_ != nullptr);
      if (_this->_impl_.timestamp_interval_ == nullptr) {
        _this->_impl_.timestamp_interval_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_interval_);
      } else {
        _this->_impl_.timestamp_interval_->MergeFrom(*from._impl_.timestamp_interval_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_value() != 0) {
        _this->_impl_.value_ = from._impl_.value_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_type() != 0) {
        _this->_impl_.type_ = from._impl_.type_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Int64StatisticMeasure::CopyFrom(const Int64StatisticMeasure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.Int64StatisticMeasure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Int64StatisticMeasure::InternalSwap(Int64StatisticMeasure* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Int64StatisticMeasure, _impl_.type_)
      + sizeof(Int64StatisticMeasure::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(Int64StatisticMeasure, _impl_.timestamp_interval_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_interval_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_interval_));
}

::google::protobuf::Metadata Int64StatisticMeasure::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Int64StatisticMeasureAndAccuracy::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Int64StatisticMeasureAndAccuracy>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Int64StatisticMeasureAndAccuracy, _impl_._has_bits_);
};

void Int64StatisticMeasureAndAccuracy::clear_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.accuracy_ != nullptr) _impl_.accuracy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
Int64StatisticMeasureAndAccuracy::Int64StatisticMeasureAndAccuracy(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Int64StatisticMeasureAndAccuracy_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy)
}
PROTOBUF_NDEBUG_INLINE Int64StatisticMeasureAndAccuracy::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Int64StatisticMeasureAndAccuracy::Int64StatisticMeasureAndAccuracy(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Int64StatisticMeasureAndAccuracy& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Int64StatisticMeasureAndAccuracy_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Int64StatisticMeasureAndAccuracy* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.timestamp_interval_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_interval_)
                : nullptr;
  _impl_.accuracy_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.accuracy_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, value_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, value_),
           offsetof(Impl_, type_) -
               offsetof(Impl_, value_) +
               sizeof(Impl_::type_));

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy)
}
PROTOBUF_NDEBUG_INLINE Int64StatisticMeasureAndAccuracy::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Int64StatisticMeasureAndAccuracy::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_interval_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, timestamp_interval_) +
               sizeof(Impl_::type_));
}
Int64StatisticMeasureAndAccuracy::~Int64StatisticMeasureAndAccuracy() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy)
  SharedDtor(*this);
}
inline void Int64StatisticMeasureAndAccuracy::SharedDtor(MessageLite& self) {
  Int64StatisticMeasureAndAccuracy& this_ = static_cast<Int64StatisticMeasureAndAccuracy&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.timestamp_interval_;
  delete this_._impl_.accuracy_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Int64StatisticMeasureAndAccuracy::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Int64StatisticMeasureAndAccuracy(arena);
}
constexpr auto Int64StatisticMeasureAndAccuracy::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Int64StatisticMeasureAndAccuracy),
                                            alignof(Int64StatisticMeasureAndAccuracy));
}
constexpr auto Int64StatisticMeasureAndAccuracy::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Int64StatisticMeasureAndAccuracy_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Int64StatisticMeasureAndAccuracy::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Int64StatisticMeasureAndAccuracy>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Int64StatisticMeasureAndAccuracy::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Int64StatisticMeasureAndAccuracy>(), &Int64StatisticMeasureAndAccuracy::ByteSizeLong,
              &Int64StatisticMeasureAndAccuracy::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Int64StatisticMeasureAndAccuracy, _impl_._cached_size_),
          false,
      },
      &Int64StatisticMeasureAndAccuracy::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Int64StatisticMeasureAndAccuracy_class_data_ =
        Int64StatisticMeasureAndAccuracy::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Int64StatisticMeasureAndAccuracy::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Int64StatisticMeasureAndAccuracy_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Int64StatisticMeasureAndAccuracy_class_data_.tc_table);
  return Int64StatisticMeasureAndAccuracy_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 0, 2>
Int64StatisticMeasureAndAccuracy::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Int64StatisticMeasureAndAccuracy, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Int64StatisticMeasureAndAccuracy_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Int64Value accuracy = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(Int64StatisticMeasureAndAccuracy, _impl_.accuracy_)}},
    // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Int64StatisticMeasureAndAccuracy, _impl_.timestamp_interval_)}},
    // .sensoris.protobuf.types.base.StatisticMeasureType type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Int64StatisticMeasureAndAccuracy, _impl_.type_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(Int64StatisticMeasureAndAccuracy, _impl_.type_)}},
    // int64 value = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Int64StatisticMeasureAndAccuracy, _impl_.value_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(Int64StatisticMeasureAndAccuracy, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
    {PROTOBUF_FIELD_OFFSET(Int64StatisticMeasureAndAccuracy, _impl_.timestamp_interval_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.StatisticMeasureType type = 2;
    {PROTOBUF_FIELD_OFFSET(Int64StatisticMeasureAndAccuracy, _impl_.type_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // int64 value = 3;
    {PROTOBUF_FIELD_OFFSET(Int64StatisticMeasureAndAccuracy, _impl_.value_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // .google.protobuf.Int64Value accuracy = 4;
    {PROTOBUF_FIELD_OFFSET(Int64StatisticMeasureAndAccuracy, _impl_.accuracy_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::TimestampInterval>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Int64StatisticMeasureAndAccuracy::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.timestamp_interval_ != nullptr);
      _impl_.timestamp_interval_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.accuracy_ != nullptr);
      _impl_.accuracy_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000000cu) != 0) {
    ::memset(&_impl_.value_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.type_) -
        reinterpret_cast<char*>(&_impl_.value_)) + sizeof(_impl_.type_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Int64StatisticMeasureAndAccuracy::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Int64StatisticMeasureAndAccuracy& this_ = static_cast<const Int64StatisticMeasureAndAccuracy&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Int64StatisticMeasureAndAccuracy::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Int64StatisticMeasureAndAccuracy& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.timestamp_interval_, this_._impl_.timestamp_interval_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.types.base.StatisticMeasureType type = 2;
  if ((cached_has_bits & 0x00000008u) != 0) {
    if (this_._internal_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_type(), target);
    }
  }

  // int64 value = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (this_._internal_value() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<3>(
              stream, this_._internal_value(), target);
    }
  }

  // .google.protobuf.Int64Value accuracy = 4;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.accuracy_, this_._impl_.accuracy_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Int64StatisticMeasureAndAccuracy::ByteSizeLong(const MessageLite& base) {
  const Int64StatisticMeasureAndAccuracy& this_ = static_cast<const Int64StatisticMeasureAndAccuracy&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Int64StatisticMeasureAndAccuracy::ByteSizeLong() const {
  const Int64StatisticMeasureAndAccuracy& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.timestamp_interval_);
    }
    // .google.protobuf.Int64Value accuracy = 4;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.accuracy_);
    }
    // int64 value = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_value() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_value());
      }
    }
    // .sensoris.protobuf.types.base.StatisticMeasureType type = 2;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Int64StatisticMeasureAndAccuracy::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Int64StatisticMeasureAndAccuracy*>(&to_msg);
  auto& from = static_cast<const Int64StatisticMeasureAndAccuracy&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.timestamp_interval_ != nullptr);
      if (_this->_impl_.timestamp_interval_ == nullptr) {
        _this->_impl_.timestamp_interval_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_interval_);
      } else {
        _this->_impl_.timestamp_interval_->MergeFrom(*from._impl_.timestamp_interval_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.accuracy_ != nullptr);
      if (_this->_impl_.accuracy_ == nullptr) {
        _this->_impl_.accuracy_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.accuracy_);
      } else {
        _this->_impl_.accuracy_->MergeFrom(*from._impl_.accuracy_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_value() != 0) {
        _this->_impl_.value_ = from._impl_.value_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_type() != 0) {
        _this->_impl_.type_ = from._impl_.type_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Int64StatisticMeasureAndAccuracy::CopyFrom(const Int64StatisticMeasureAndAccuracy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Int64StatisticMeasureAndAccuracy::InternalSwap(Int64StatisticMeasureAndAccuracy* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Int64StatisticMeasureAndAccuracy, _impl_.type_)
      + sizeof(Int64StatisticMeasureAndAccuracy::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(Int64StatisticMeasureAndAccuracy, _impl_.timestamp_interval_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_interval_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_interval_));
}

::google::protobuf::Metadata Int64StatisticMeasureAndAccuracy::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AbsoluteInt64Histogram_Bin::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<AbsoluteInt64Histogram_Bin>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AbsoluteInt64Histogram_Bin, _impl_._has_bits_);
};

void AbsoluteInt64Histogram_Bin::clear_lower_endpoint_inclusive() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.lower_endpoint_inclusive_ != nullptr) _impl_.lower_endpoint_inclusive_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void AbsoluteInt64Histogram_Bin::clear_frequency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.frequency_ != nullptr) _impl_.frequency_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
AbsoluteInt64Histogram_Bin::AbsoluteInt64Histogram_Bin(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AbsoluteInt64Histogram_Bin_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin)
}
PROTOBUF_NDEBUG_INLINE AbsoluteInt64Histogram_Bin::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::base::AbsoluteInt64Histogram_Bin& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

AbsoluteInt64Histogram_Bin::AbsoluteInt64Histogram_Bin(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const AbsoluteInt64Histogram_Bin& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AbsoluteInt64Histogram_Bin_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AbsoluteInt64Histogram_Bin* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.lower_endpoint_inclusive_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.lower_endpoint_inclusive_)
                : nullptr;
  _impl_.frequency_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.frequency_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin)
}
PROTOBUF_NDEBUG_INLINE AbsoluteInt64Histogram_Bin::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void AbsoluteInt64Histogram_Bin::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lower_endpoint_inclusive_),
           0,
           offsetof(Impl_, frequency_) -
               offsetof(Impl_, lower_endpoint_inclusive_) +
               sizeof(Impl_::frequency_));
}
AbsoluteInt64Histogram_Bin::~AbsoluteInt64Histogram_Bin() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin)
  SharedDtor(*this);
}
inline void AbsoluteInt64Histogram_Bin::SharedDtor(MessageLite& self) {
  AbsoluteInt64Histogram_Bin& this_ = static_cast<AbsoluteInt64Histogram_Bin&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.lower_endpoint_inclusive_;
  delete this_._impl_.frequency_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL AbsoluteInt64Histogram_Bin::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) AbsoluteInt64Histogram_Bin(arena);
}
constexpr auto AbsoluteInt64Histogram_Bin::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AbsoluteInt64Histogram_Bin),
                                            alignof(AbsoluteInt64Histogram_Bin));
}
constexpr auto AbsoluteInt64Histogram_Bin::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_AbsoluteInt64Histogram_Bin_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &AbsoluteInt64Histogram_Bin::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<AbsoluteInt64Histogram_Bin>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &AbsoluteInt64Histogram_Bin::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<AbsoluteInt64Histogram_Bin>(), &AbsoluteInt64Histogram_Bin::ByteSizeLong,
              &AbsoluteInt64Histogram_Bin::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(AbsoluteInt64Histogram_Bin, _impl_._cached_size_),
          false,
      },
      &AbsoluteInt64Histogram_Bin::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull AbsoluteInt64Histogram_Bin_class_data_ =
        AbsoluteInt64Histogram_Bin::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
AbsoluteInt64Histogram_Bin::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&AbsoluteInt64Histogram_Bin_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(AbsoluteInt64Histogram_Bin_class_data_.tc_table);
  return AbsoluteInt64Histogram_Bin_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
AbsoluteInt64Histogram_Bin::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AbsoluteInt64Histogram_Bin, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    AbsoluteInt64Histogram_Bin_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::AbsoluteInt64Histogram_Bin>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Int64Value frequency = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(AbsoluteInt64Histogram_Bin, _impl_.frequency_)}},
    // .google.protobuf.Int64Value lower_endpoint_inclusive = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AbsoluteInt64Histogram_Bin, _impl_.lower_endpoint_inclusive_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Int64Value lower_endpoint_inclusive = 1;
    {PROTOBUF_FIELD_OFFSET(AbsoluteInt64Histogram_Bin, _impl_.lower_endpoint_inclusive_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Int64Value frequency = 2;
    {PROTOBUF_FIELD_OFFSET(AbsoluteInt64Histogram_Bin, _impl_.frequency_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void AbsoluteInt64Histogram_Bin::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.lower_endpoint_inclusive_ != nullptr);
      _impl_.lower_endpoint_inclusive_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.frequency_ != nullptr);
      _impl_.frequency_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL AbsoluteInt64Histogram_Bin::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const AbsoluteInt64Histogram_Bin& this_ = static_cast<const AbsoluteInt64Histogram_Bin&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL AbsoluteInt64Histogram_Bin::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const AbsoluteInt64Histogram_Bin& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Int64Value lower_endpoint_inclusive = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.lower_endpoint_inclusive_, this_._impl_.lower_endpoint_inclusive_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Int64Value frequency = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.frequency_, this_._impl_.frequency_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t AbsoluteInt64Histogram_Bin::ByteSizeLong(const MessageLite& base) {
  const AbsoluteInt64Histogram_Bin& this_ = static_cast<const AbsoluteInt64Histogram_Bin&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t AbsoluteInt64Histogram_Bin::ByteSizeLong() const {
  const AbsoluteInt64Histogram_Bin& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .google.protobuf.Int64Value lower_endpoint_inclusive = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.lower_endpoint_inclusive_);
    }
    // .google.protobuf.Int64Value frequency = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.frequency_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void AbsoluteInt64Histogram_Bin::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AbsoluteInt64Histogram_Bin*>(&to_msg);
  auto& from = static_cast<const AbsoluteInt64Histogram_Bin&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.lower_endpoint_inclusive_ != nullptr);
      if (_this->_impl_.lower_endpoint_inclusive_ == nullptr) {
        _this->_impl_.lower_endpoint_inclusive_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.lower_endpoint_inclusive_);
      } else {
        _this->_impl_.lower_endpoint_inclusive_->MergeFrom(*from._impl_.lower_endpoint_inclusive_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.frequency_ != nullptr);
      if (_this->_impl_.frequency_ == nullptr) {
        _this->_impl_.frequency_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.frequency_);
      } else {
        _this->_impl_.frequency_->MergeFrom(*from._impl_.frequency_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AbsoluteInt64Histogram_Bin::CopyFrom(const AbsoluteInt64Histogram_Bin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AbsoluteInt64Histogram_Bin::InternalSwap(AbsoluteInt64Histogram_Bin* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AbsoluteInt64Histogram_Bin, _impl_.frequency_)
      + sizeof(AbsoluteInt64Histogram_Bin::_impl_.frequency_)
      - PROTOBUF_FIELD_OFFSET(AbsoluteInt64Histogram_Bin, _impl_.lower_endpoint_inclusive_)>(
          reinterpret_cast<char*>(&_impl_.lower_endpoint_inclusive_),
          reinterpret_cast<char*>(&other->_impl_.lower_endpoint_inclusive_));
}

::google::protobuf::Metadata AbsoluteInt64Histogram_Bin::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AbsoluteInt64Histogram::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<AbsoluteInt64Histogram>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AbsoluteInt64Histogram, _impl_._has_bits_);
};

void AbsoluteInt64Histogram::clear_total_elements() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.total_elements_ != nullptr) _impl_.total_elements_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void AbsoluteInt64Histogram::clear_upper_endpoint_inclusive() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.upper_endpoint_inclusive_ != nullptr) _impl_.upper_endpoint_inclusive_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
AbsoluteInt64Histogram::AbsoluteInt64Histogram(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AbsoluteInt64Histogram_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.AbsoluteInt64Histogram)
}
PROTOBUF_NDEBUG_INLINE AbsoluteInt64Histogram::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::base::AbsoluteInt64Histogram& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        bin_{visibility, arena, from.bin_} {}

AbsoluteInt64Histogram::AbsoluteInt64Histogram(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const AbsoluteInt64Histogram& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AbsoluteInt64Histogram_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AbsoluteInt64Histogram* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.timestamp_interval_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_interval_)
                : nullptr;
  _impl_.total_elements_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.total_elements_)
                : nullptr;
  _impl_.upper_endpoint_inclusive_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.upper_endpoint_inclusive_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.AbsoluteInt64Histogram)
}
PROTOBUF_NDEBUG_INLINE AbsoluteInt64Histogram::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        bin_{visibility, arena} {}

inline void AbsoluteInt64Histogram::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_interval_),
           0,
           offsetof(Impl_, upper_endpoint_inclusive_) -
               offsetof(Impl_, timestamp_interval_) +
               sizeof(Impl_::upper_endpoint_inclusive_));
}
AbsoluteInt64Histogram::~AbsoluteInt64Histogram() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.AbsoluteInt64Histogram)
  SharedDtor(*this);
}
inline void AbsoluteInt64Histogram::SharedDtor(MessageLite& self) {
  AbsoluteInt64Histogram& this_ = static_cast<AbsoluteInt64Histogram&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.timestamp_interval_;
  delete this_._impl_.total_elements_;
  delete this_._impl_.upper_endpoint_inclusive_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL AbsoluteInt64Histogram::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) AbsoluteInt64Histogram(arena);
}
constexpr auto AbsoluteInt64Histogram::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(AbsoluteInt64Histogram, _impl_.bin_) +
          decltype(AbsoluteInt64Histogram::_impl_.bin_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(AbsoluteInt64Histogram), alignof(AbsoluteInt64Histogram), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&AbsoluteInt64Histogram::PlacementNew_,
                                 sizeof(AbsoluteInt64Histogram),
                                 alignof(AbsoluteInt64Histogram));
  }
}
constexpr auto AbsoluteInt64Histogram::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_AbsoluteInt64Histogram_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &AbsoluteInt64Histogram::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<AbsoluteInt64Histogram>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &AbsoluteInt64Histogram::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<AbsoluteInt64Histogram>(), &AbsoluteInt64Histogram::ByteSizeLong,
              &AbsoluteInt64Histogram::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(AbsoluteInt64Histogram, _impl_._cached_size_),
          false,
      },
      &AbsoluteInt64Histogram::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull AbsoluteInt64Histogram_class_data_ =
        AbsoluteInt64Histogram::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
AbsoluteInt64Histogram::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&AbsoluteInt64Histogram_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(AbsoluteInt64Histogram_class_data_.tc_table);
  return AbsoluteInt64Histogram_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 4, 0, 2>
AbsoluteInt64Histogram::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AbsoluteInt64Histogram, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    AbsoluteInt64Histogram_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::AbsoluteInt64Histogram>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Int64Value upper_endpoint_inclusive = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 3, PROTOBUF_FIELD_OFFSET(AbsoluteInt64Histogram, _impl_.upper_endpoint_inclusive_)}},
    // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AbsoluteInt64Histogram, _impl_.timestamp_interval_)}},
    // .google.protobuf.Int64Value total_elements = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(AbsoluteInt64Histogram, _impl_.total_elements_)}},
    // repeated .sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin bin = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(AbsoluteInt64Histogram, _impl_.bin_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
    {PROTOBUF_FIELD_OFFSET(AbsoluteInt64Histogram, _impl_.timestamp_interval_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Int64Value total_elements = 2;
    {PROTOBUF_FIELD_OFFSET(AbsoluteInt64Histogram, _impl_.total_elements_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin bin = 3;
    {PROTOBUF_FIELD_OFFSET(AbsoluteInt64Histogram, _impl_.bin_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Int64Value upper_endpoint_inclusive = 4;
    {PROTOBUF_FIELD_OFFSET(AbsoluteInt64Histogram, _impl_.upper_endpoint_inclusive_), _Internal::kHasBitsOffset + 2, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::TimestampInterval>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::AbsoluteInt64Histogram_Bin>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void AbsoluteInt64Histogram::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.AbsoluteInt64Histogram)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bin_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.timestamp_interval_ != nullptr);
      _impl_.timestamp_interval_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.total_elements_ != nullptr);
      _impl_.total_elements_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.upper_endpoint_inclusive_ != nullptr);
      _impl_.upper_endpoint_inclusive_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL AbsoluteInt64Histogram::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const AbsoluteInt64Histogram& this_ = static_cast<const AbsoluteInt64Histogram&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL AbsoluteInt64Histogram::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const AbsoluteInt64Histogram& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.AbsoluteInt64Histogram)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.timestamp_interval_, this_._impl_.timestamp_interval_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Int64Value total_elements = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.total_elements_, this_._impl_.total_elements_->GetCachedSize(), target,
        stream);
  }

  // repeated .sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin bin = 3;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_bin_size());
       i < n; i++) {
    const auto& repfield = this_._internal_bin().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // .google.protobuf.Int64Value upper_endpoint_inclusive = 4;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.upper_endpoint_inclusive_, this_._impl_.upper_endpoint_inclusive_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.AbsoluteInt64Histogram)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t AbsoluteInt64Histogram::ByteSizeLong(const MessageLite& base) {
  const AbsoluteInt64Histogram& this_ = static_cast<const AbsoluteInt64Histogram&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t AbsoluteInt64Histogram::ByteSizeLong() const {
  const AbsoluteInt64Histogram& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.AbsoluteInt64Histogram)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .sensoris.protobuf.types.base.AbsoluteInt64Histogram.Bin bin = 3;
    {
      total_size += 1UL * this_._internal_bin_size();
      for (const auto& msg : this_._internal_bin()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.timestamp_interval_);
    }
    // .google.protobuf.Int64Value total_elements = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.total_elements_);
    }
    // .google.protobuf.Int64Value upper_endpoint_inclusive = 4;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.upper_endpoint_inclusive_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void AbsoluteInt64Histogram::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AbsoluteInt64Histogram*>(&to_msg);
  auto& from = static_cast<const AbsoluteInt64Histogram&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.AbsoluteInt64Histogram)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_bin()->MergeFrom(
      from._internal_bin());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.timestamp_interval_ != nullptr);
      if (_this->_impl_.timestamp_interval_ == nullptr) {
        _this->_impl_.timestamp_interval_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_interval_);
      } else {
        _this->_impl_.timestamp_interval_->MergeFrom(*from._impl_.timestamp_interval_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.total_elements_ != nullptr);
      if (_this->_impl_.total_elements_ == nullptr) {
        _this->_impl_.total_elements_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.total_elements_);
      } else {
        _this->_impl_.total_elements_->MergeFrom(*from._impl_.total_elements_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.upper_endpoint_inclusive_ != nullptr);
      if (_this->_impl_.upper_endpoint_inclusive_ == nullptr) {
        _this->_impl_.upper_endpoint_inclusive_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.upper_endpoint_inclusive_);
      } else {
        _this->_impl_.upper_endpoint_inclusive_->MergeFrom(*from._impl_.upper_endpoint_inclusive_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AbsoluteInt64Histogram::CopyFrom(const AbsoluteInt64Histogram& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.AbsoluteInt64Histogram)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AbsoluteInt64Histogram::InternalSwap(AbsoluteInt64Histogram* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.bin_.InternalSwap(&other->_impl_.bin_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AbsoluteInt64Histogram, _impl_.upper_endpoint_inclusive_)
      + sizeof(AbsoluteInt64Histogram::_impl_.upper_endpoint_inclusive_)
      - PROTOBUF_FIELD_OFFSET(AbsoluteInt64Histogram, _impl_.timestamp_interval_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_interval_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_interval_));
}

::google::protobuf::Metadata AbsoluteInt64Histogram::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RelativeInt64Histogram_Bin::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RelativeInt64Histogram_Bin>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RelativeInt64Histogram_Bin, _impl_._has_bits_);
};

void RelativeInt64Histogram_Bin::clear_lower_endpoint_inclusive() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.lower_endpoint_inclusive_ != nullptr) _impl_.lower_endpoint_inclusive_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void RelativeInt64Histogram_Bin::clear_relative_frequency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.relative_frequency_ != nullptr) _impl_.relative_frequency_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
RelativeInt64Histogram_Bin::RelativeInt64Histogram_Bin(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RelativeInt64Histogram_Bin_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin)
}
PROTOBUF_NDEBUG_INLINE RelativeInt64Histogram_Bin::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::base::RelativeInt64Histogram_Bin& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RelativeInt64Histogram_Bin::RelativeInt64Histogram_Bin(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RelativeInt64Histogram_Bin& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RelativeInt64Histogram_Bin_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RelativeInt64Histogram_Bin* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.lower_endpoint_inclusive_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.lower_endpoint_inclusive_)
                : nullptr;
  _impl_.relative_frequency_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.relative_frequency_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin)
}
PROTOBUF_NDEBUG_INLINE RelativeInt64Histogram_Bin::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void RelativeInt64Histogram_Bin::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lower_endpoint_inclusive_),
           0,
           offsetof(Impl_, relative_frequency_) -
               offsetof(Impl_, lower_endpoint_inclusive_) +
               sizeof(Impl_::relative_frequency_));
}
RelativeInt64Histogram_Bin::~RelativeInt64Histogram_Bin() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin)
  SharedDtor(*this);
}
inline void RelativeInt64Histogram_Bin::SharedDtor(MessageLite& self) {
  RelativeInt64Histogram_Bin& this_ = static_cast<RelativeInt64Histogram_Bin&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.lower_endpoint_inclusive_;
  delete this_._impl_.relative_frequency_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RelativeInt64Histogram_Bin::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RelativeInt64Histogram_Bin(arena);
}
constexpr auto RelativeInt64Histogram_Bin::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RelativeInt64Histogram_Bin),
                                            alignof(RelativeInt64Histogram_Bin));
}
constexpr auto RelativeInt64Histogram_Bin::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RelativeInt64Histogram_Bin_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RelativeInt64Histogram_Bin::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RelativeInt64Histogram_Bin>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RelativeInt64Histogram_Bin::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RelativeInt64Histogram_Bin>(), &RelativeInt64Histogram_Bin::ByteSizeLong,
              &RelativeInt64Histogram_Bin::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RelativeInt64Histogram_Bin, _impl_._cached_size_),
          false,
      },
      &RelativeInt64Histogram_Bin::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RelativeInt64Histogram_Bin_class_data_ =
        RelativeInt64Histogram_Bin::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RelativeInt64Histogram_Bin::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RelativeInt64Histogram_Bin_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RelativeInt64Histogram_Bin_class_data_.tc_table);
  return RelativeInt64Histogram_Bin_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 2, 2, 0, 2>
RelativeInt64Histogram_Bin::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RelativeInt64Histogram_Bin, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967290,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RelativeInt64Histogram_Bin_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::RelativeInt64Histogram_Bin>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Int64Value lower_endpoint_inclusive = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RelativeInt64Histogram_Bin, _impl_.lower_endpoint_inclusive_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Int64Value relative_frequency = 3 [(.sensoris.protobuf.types.base.exponent) = 1];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(RelativeInt64Histogram_Bin, _impl_.relative_frequency_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Int64Value lower_endpoint_inclusive = 1;
    {PROTOBUF_FIELD_OFFSET(RelativeInt64Histogram_Bin, _impl_.lower_endpoint_inclusive_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Int64Value relative_frequency = 3 [(.sensoris.protobuf.types.base.exponent) = 1];
    {PROTOBUF_FIELD_OFFSET(RelativeInt64Histogram_Bin, _impl_.relative_frequency_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void RelativeInt64Histogram_Bin::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.lower_endpoint_inclusive_ != nullptr);
      _impl_.lower_endpoint_inclusive_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.relative_frequency_ != nullptr);
      _impl_.relative_frequency_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RelativeInt64Histogram_Bin::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RelativeInt64Histogram_Bin& this_ = static_cast<const RelativeInt64Histogram_Bin&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RelativeInt64Histogram_Bin::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RelativeInt64Histogram_Bin& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Int64Value lower_endpoint_inclusive = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.lower_endpoint_inclusive_, this_._impl_.lower_endpoint_inclusive_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Int64Value relative_frequency = 3 [(.sensoris.protobuf.types.base.exponent) = 1];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.relative_frequency_, this_._impl_.relative_frequency_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RelativeInt64Histogram_Bin::ByteSizeLong(const MessageLite& base) {
  const RelativeInt64Histogram_Bin& this_ = static_cast<const RelativeInt64Histogram_Bin&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RelativeInt64Histogram_Bin::ByteSizeLong() const {
  const RelativeInt64Histogram_Bin& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .google.protobuf.Int64Value lower_endpoint_inclusive = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.lower_endpoint_inclusive_);
    }
    // .google.protobuf.Int64Value relative_frequency = 3 [(.sensoris.protobuf.types.base.exponent) = 1];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.relative_frequency_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RelativeInt64Histogram_Bin::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RelativeInt64Histogram_Bin*>(&to_msg);
  auto& from = static_cast<const RelativeInt64Histogram_Bin&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.lower_endpoint_inclusive_ != nullptr);
      if (_this->_impl_.lower_endpoint_inclusive_ == nullptr) {
        _this->_impl_.lower_endpoint_inclusive_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.lower_endpoint_inclusive_);
      } else {
        _this->_impl_.lower_endpoint_inclusive_->MergeFrom(*from._impl_.lower_endpoint_inclusive_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.relative_frequency_ != nullptr);
      if (_this->_impl_.relative_frequency_ == nullptr) {
        _this->_impl_.relative_frequency_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.relative_frequency_);
      } else {
        _this->_impl_.relative_frequency_->MergeFrom(*from._impl_.relative_frequency_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RelativeInt64Histogram_Bin::CopyFrom(const RelativeInt64Histogram_Bin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.RelativeInt64Histogram.Bin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RelativeInt64Histogram_Bin::InternalSwap(RelativeInt64Histogram_Bin* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RelativeInt64Histogram_Bin, _impl_.relative_frequency_)
      + sizeof(RelativeInt64Histogram_Bin::_impl_.relative_frequency_)
      - PROTOBUF_FIELD_OFFSET(RelativeInt64Histogram_Bin, _impl_.lower_endpoint_inclusive_)>(
          reinterpret_cast<char*>(&_impl_.lower_endpoint_inclusive_),
          reinterpret_cast<char*>(&other->_impl_.lower_endpoint_inclusive_));
}

::google::protobuf::Metadata RelativeInt64Histogram_Bin::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RelativeInt64Histogram::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RelativeInt64Histogram>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RelativeInt64Histogram, _impl_._has_bits_);
};

void RelativeInt64Histogram::clear_total_elements() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.total_elements_ != nullptr) _impl_.total_elements_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void RelativeInt64Histogram::clear_upper_endpoint_inclusive() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.upper_endpoint_inclusive_ != nullptr) _impl_.upper_endpoint_inclusive_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
RelativeInt64Histogram::RelativeInt64Histogram(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RelativeInt64Histogram_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.RelativeInt64Histogram)
}
PROTOBUF_NDEBUG_INLINE RelativeInt64Histogram::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::base::RelativeInt64Histogram& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        bin_{visibility, arena, from.bin_} {}

RelativeInt64Histogram::RelativeInt64Histogram(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RelativeInt64Histogram& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RelativeInt64Histogram_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RelativeInt64Histogram* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.timestamp_interval_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_interval_)
                : nullptr;
  _impl_.total_elements_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.total_elements_)
                : nullptr;
  _impl_.upper_endpoint_inclusive_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.upper_endpoint_inclusive_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.RelativeInt64Histogram)
}
PROTOBUF_NDEBUG_INLINE RelativeInt64Histogram::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        bin_{visibility, arena} {}

inline void RelativeInt64Histogram::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_interval_),
           0,
           offsetof(Impl_, upper_endpoint_inclusive_) -
               offsetof(Impl_, timestamp_interval_) +
               sizeof(Impl_::upper_endpoint_inclusive_));
}
RelativeInt64Histogram::~RelativeInt64Histogram() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.RelativeInt64Histogram)
  SharedDtor(*this);
}
inline void RelativeInt64Histogram::SharedDtor(MessageLite& self) {
  RelativeInt64Histogram& this_ = static_cast<RelativeInt64Histogram&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.timestamp_interval_;
  delete this_._impl_.total_elements_;
  delete this_._impl_.upper_endpoint_inclusive_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RelativeInt64Histogram::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RelativeInt64Histogram(arena);
}
constexpr auto RelativeInt64Histogram::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RelativeInt64Histogram, _impl_.bin_) +
          decltype(RelativeInt64Histogram::_impl_.bin_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(RelativeInt64Histogram), alignof(RelativeInt64Histogram), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RelativeInt64Histogram::PlacementNew_,
                                 sizeof(RelativeInt64Histogram),
                                 alignof(RelativeInt64Histogram));
  }
}
constexpr auto RelativeInt64Histogram::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RelativeInt64Histogram_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RelativeInt64Histogram::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RelativeInt64Histogram>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RelativeInt64Histogram::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RelativeInt64Histogram>(), &RelativeInt64Histogram::ByteSizeLong,
              &RelativeInt64Histogram::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RelativeInt64Histogram, _impl_._cached_size_),
          false,
      },
      &RelativeInt64Histogram::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RelativeInt64Histogram_class_data_ =
        RelativeInt64Histogram::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RelativeInt64Histogram::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RelativeInt64Histogram_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RelativeInt64Histogram_class_data_.tc_table);
  return RelativeInt64Histogram_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 4, 0, 2>
RelativeInt64Histogram::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RelativeInt64Histogram, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RelativeInt64Histogram_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::RelativeInt64Histogram>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Int64Value upper_endpoint_inclusive = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 3, PROTOBUF_FIELD_OFFSET(RelativeInt64Histogram, _impl_.upper_endpoint_inclusive_)}},
    // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RelativeInt64Histogram, _impl_.timestamp_interval_)}},
    // .google.protobuf.Int64Value total_elements = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(RelativeInt64Histogram, _impl_.total_elements_)}},
    // repeated .sensoris.protobuf.types.base.RelativeInt64Histogram.Bin bin = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(RelativeInt64Histogram, _impl_.bin_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
    {PROTOBUF_FIELD_OFFSET(RelativeInt64Histogram, _impl_.timestamp_interval_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Int64Value total_elements = 2;
    {PROTOBUF_FIELD_OFFSET(RelativeInt64Histogram, _impl_.total_elements_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .sensoris.protobuf.types.base.RelativeInt64Histogram.Bin bin = 3;
    {PROTOBUF_FIELD_OFFSET(RelativeInt64Histogram, _impl_.bin_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Int64Value upper_endpoint_inclusive = 4;
    {PROTOBUF_FIELD_OFFSET(RelativeInt64Histogram, _impl_.upper_endpoint_inclusive_), _Internal::kHasBitsOffset + 2, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::TimestampInterval>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::RelativeInt64Histogram_Bin>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void RelativeInt64Histogram::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.RelativeInt64Histogram)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bin_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.timestamp_interval_ != nullptr);
      _impl_.timestamp_interval_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.total_elements_ != nullptr);
      _impl_.total_elements_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.upper_endpoint_inclusive_ != nullptr);
      _impl_.upper_endpoint_inclusive_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RelativeInt64Histogram::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RelativeInt64Histogram& this_ = static_cast<const RelativeInt64Histogram&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RelativeInt64Histogram::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RelativeInt64Histogram& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.RelativeInt64Histogram)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.timestamp_interval_, this_._impl_.timestamp_interval_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Int64Value total_elements = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.total_elements_, this_._impl_.total_elements_->GetCachedSize(), target,
        stream);
  }

  // repeated .sensoris.protobuf.types.base.RelativeInt64Histogram.Bin bin = 3;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_bin_size());
       i < n; i++) {
    const auto& repfield = this_._internal_bin().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // .google.protobuf.Int64Value upper_endpoint_inclusive = 4;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.upper_endpoint_inclusive_, this_._impl_.upper_endpoint_inclusive_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.RelativeInt64Histogram)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RelativeInt64Histogram::ByteSizeLong(const MessageLite& base) {
  const RelativeInt64Histogram& this_ = static_cast<const RelativeInt64Histogram&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RelativeInt64Histogram::ByteSizeLong() const {
  const RelativeInt64Histogram& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.RelativeInt64Histogram)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .sensoris.protobuf.types.base.RelativeInt64Histogram.Bin bin = 3;
    {
      total_size += 1UL * this_._internal_bin_size();
      for (const auto& msg : this_._internal_bin()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.timestamp_interval_);
    }
    // .google.protobuf.Int64Value total_elements = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.total_elements_);
    }
    // .google.protobuf.Int64Value upper_endpoint_inclusive = 4;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.upper_endpoint_inclusive_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RelativeInt64Histogram::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RelativeInt64Histogram*>(&to_msg);
  auto& from = static_cast<const RelativeInt64Histogram&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.RelativeInt64Histogram)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_bin()->MergeFrom(
      from._internal_bin());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.timestamp_interval_ != nullptr);
      if (_this->_impl_.timestamp_interval_ == nullptr) {
        _this->_impl_.timestamp_interval_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_interval_);
      } else {
        _this->_impl_.timestamp_interval_->MergeFrom(*from._impl_.timestamp_interval_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.total_elements_ != nullptr);
      if (_this->_impl_.total_elements_ == nullptr) {
        _this->_impl_.total_elements_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.total_elements_);
      } else {
        _this->_impl_.total_elements_->MergeFrom(*from._impl_.total_elements_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.upper_endpoint_inclusive_ != nullptr);
      if (_this->_impl_.upper_endpoint_inclusive_ == nullptr) {
        _this->_impl_.upper_endpoint_inclusive_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.upper_endpoint_inclusive_);
      } else {
        _this->_impl_.upper_endpoint_inclusive_->MergeFrom(*from._impl_.upper_endpoint_inclusive_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RelativeInt64Histogram::CopyFrom(const RelativeInt64Histogram& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.RelativeInt64Histogram)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RelativeInt64Histogram::InternalSwap(RelativeInt64Histogram* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.bin_.InternalSwap(&other->_impl_.bin_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RelativeInt64Histogram, _impl_.upper_endpoint_inclusive_)
      + sizeof(RelativeInt64Histogram::_impl_.upper_endpoint_inclusive_)
      - PROTOBUF_FIELD_OFFSET(RelativeInt64Histogram, _impl_.timestamp_interval_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_interval_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_interval_));
}

::google::protobuf::Metadata RelativeInt64Histogram::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Int64GaussianDistribution::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Int64GaussianDistribution>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Int64GaussianDistribution, _impl_._has_bits_);
};

void Int64GaussianDistribution::clear_mean() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mean_ != nullptr) _impl_.mean_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void Int64GaussianDistribution::clear_variance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.variance_ != nullptr) _impl_.variance_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
Int64GaussianDistribution::Int64GaussianDistribution(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Int64GaussianDistribution_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.Int64GaussianDistribution)
}
PROTOBUF_NDEBUG_INLINE Int64GaussianDistribution::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::base::Int64GaussianDistribution& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Int64GaussianDistribution::Int64GaussianDistribution(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Int64GaussianDistribution& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Int64GaussianDistribution_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Int64GaussianDistribution* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.timestamp_interval_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_interval_)
                : nullptr;
  _impl_.mean_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.mean_)
                : nullptr;
  _impl_.variance_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.variance_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.Int64GaussianDistribution)
}
PROTOBUF_NDEBUG_INLINE Int64GaussianDistribution::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Int64GaussianDistribution::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_interval_),
           0,
           offsetof(Impl_, variance_) -
               offsetof(Impl_, timestamp_interval_) +
               sizeof(Impl_::variance_));
}
Int64GaussianDistribution::~Int64GaussianDistribution() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.Int64GaussianDistribution)
  SharedDtor(*this);
}
inline void Int64GaussianDistribution::SharedDtor(MessageLite& self) {
  Int64GaussianDistribution& this_ = static_cast<Int64GaussianDistribution&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.timestamp_interval_;
  delete this_._impl_.mean_;
  delete this_._impl_.variance_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Int64GaussianDistribution::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Int64GaussianDistribution(arena);
}
constexpr auto Int64GaussianDistribution::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Int64GaussianDistribution),
                                            alignof(Int64GaussianDistribution));
}
constexpr auto Int64GaussianDistribution::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Int64GaussianDistribution_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Int64GaussianDistribution::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Int64GaussianDistribution>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Int64GaussianDistribution::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Int64GaussianDistribution>(), &Int64GaussianDistribution::ByteSizeLong,
              &Int64GaussianDistribution::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Int64GaussianDistribution, _impl_._cached_size_),
          false,
      },
      &Int64GaussianDistribution::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Int64GaussianDistribution_class_data_ =
        Int64GaussianDistribution::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Int64GaussianDistribution::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Int64GaussianDistribution_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Int64GaussianDistribution_class_data_.tc_table);
  return Int64GaussianDistribution_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2>
Int64GaussianDistribution::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Int64GaussianDistribution, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Int64GaussianDistribution_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64GaussianDistribution>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Int64GaussianDistribution, _impl_.timestamp_interval_)}},
    // .google.protobuf.Int64Value mean = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Int64GaussianDistribution, _impl_.mean_)}},
    // .google.protobuf.Int64Value variance = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(Int64GaussianDistribution, _impl_.variance_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
    {PROTOBUF_FIELD_OFFSET(Int64GaussianDistribution, _impl_.timestamp_interval_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Int64Value mean = 2;
    {PROTOBUF_FIELD_OFFSET(Int64GaussianDistribution, _impl_.mean_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Int64Value variance = 3;
    {PROTOBUF_FIELD_OFFSET(Int64GaussianDistribution, _impl_.variance_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::TimestampInterval>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Int64GaussianDistribution::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.Int64GaussianDistribution)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.timestamp_interval_ != nullptr);
      _impl_.timestamp_interval_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.mean_ != nullptr);
      _impl_.mean_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.variance_ != nullptr);
      _impl_.variance_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Int64GaussianDistribution::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Int64GaussianDistribution& this_ = static_cast<const Int64GaussianDistribution&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Int64GaussianDistribution::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Int64GaussianDistribution& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.Int64GaussianDistribution)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.timestamp_interval_, this_._impl_.timestamp_interval_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Int64Value mean = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.mean_, this_._impl_.mean_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Int64Value variance = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.variance_, this_._impl_.variance_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.Int64GaussianDistribution)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Int64GaussianDistribution::ByteSizeLong(const MessageLite& base) {
  const Int64GaussianDistribution& this_ = static_cast<const Int64GaussianDistribution&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Int64GaussianDistribution::ByteSizeLong() const {
  const Int64GaussianDistribution& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.Int64GaussianDistribution)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .sensoris.protobuf.types.base.TimestampInterval timestamp_interval = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.timestamp_interval_);
    }
    // .google.protobuf.Int64Value mean = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.mean_);
    }
    // .google.protobuf.Int64Value variance = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.variance_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Int64GaussianDistribution::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Int64GaussianDistribution*>(&to_msg);
  auto& from = static_cast<const Int64GaussianDistribution&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.Int64GaussianDistribution)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.timestamp_interval_ != nullptr);
      if (_this->_impl_.timestamp_interval_ == nullptr) {
        _this->_impl_.timestamp_interval_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_interval_);
      } else {
        _this->_impl_.timestamp_interval_->MergeFrom(*from._impl_.timestamp_interval_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.mean_ != nullptr);
      if (_this->_impl_.mean_ == nullptr) {
        _this->_impl_.mean_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.mean_);
      } else {
        _this->_impl_.mean_->MergeFrom(*from._impl_.mean_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.variance_ != nullptr);
      if (_this->_impl_.variance_ == nullptr) {
        _this->_impl_.variance_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.variance_);
      } else {
        _this->_impl_.variance_->MergeFrom(*from._impl_.variance_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Int64GaussianDistribution::CopyFrom(const Int64GaussianDistribution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.Int64GaussianDistribution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Int64GaussianDistribution::InternalSwap(Int64GaussianDistribution* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Int64GaussianDistribution, _impl_.variance_)
      + sizeof(Int64GaussianDistribution::_impl_.variance_)
      - PROTOBUF_FIELD_OFFSET(Int64GaussianDistribution, _impl_.timestamp_interval_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_interval_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_interval_));
}

::google::protobuf::Metadata Int64GaussianDistribution::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Int64ValueAndExponent::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Int64ValueAndExponent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Int64ValueAndExponent, _impl_._has_bits_);
};

Int64ValueAndExponent::Int64ValueAndExponent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Int64ValueAndExponent_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.Int64ValueAndExponent)
}
Int64ValueAndExponent::Int64ValueAndExponent(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Int64ValueAndExponent& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Int64ValueAndExponent_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE Int64ValueAndExponent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Int64ValueAndExponent::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, value_),
           0,
           offsetof(Impl_, exponent_) -
               offsetof(Impl_, value_) +
               sizeof(Impl_::exponent_));
}
Int64ValueAndExponent::~Int64ValueAndExponent() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.Int64ValueAndExponent)
  SharedDtor(*this);
}
inline void Int64ValueAndExponent::SharedDtor(MessageLite& self) {
  Int64ValueAndExponent& this_ = static_cast<Int64ValueAndExponent&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Int64ValueAndExponent::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Int64ValueAndExponent(arena);
}
constexpr auto Int64ValueAndExponent::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Int64ValueAndExponent),
                                            alignof(Int64ValueAndExponent));
}
constexpr auto Int64ValueAndExponent::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Int64ValueAndExponent_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Int64ValueAndExponent::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Int64ValueAndExponent>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Int64ValueAndExponent::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Int64ValueAndExponent>(), &Int64ValueAndExponent::ByteSizeLong,
              &Int64ValueAndExponent::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Int64ValueAndExponent, _impl_._cached_size_),
          false,
      },
      &Int64ValueAndExponent::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Int64ValueAndExponent_class_data_ =
        Int64ValueAndExponent::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Int64ValueAndExponent::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Int64ValueAndExponent_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Int64ValueAndExponent_class_data_.tc_table);
  return Int64ValueAndExponent_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
Int64ValueAndExponent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Int64ValueAndExponent, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Int64ValueAndExponent_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64ValueAndExponent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 exponent = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Int64ValueAndExponent, _impl_.exponent_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(Int64ValueAndExponent, _impl_.exponent_)}},
    // int64 value = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Int64ValueAndExponent, _impl_.value_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Int64ValueAndExponent, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 value = 1;
    {PROTOBUF_FIELD_OFFSET(Int64ValueAndExponent, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 exponent = 2;
    {PROTOBUF_FIELD_OFFSET(Int64ValueAndExponent, _impl_.exponent_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void Int64ValueAndExponent::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.Int64ValueAndExponent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.value_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.exponent_) -
        reinterpret_cast<char*>(&_impl_.value_)) + sizeof(_impl_.exponent_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Int64ValueAndExponent::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Int64ValueAndExponent& this_ = static_cast<const Int64ValueAndExponent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Int64ValueAndExponent::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Int64ValueAndExponent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.Int64ValueAndExponent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 value = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_value() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_value(), target);
    }
  }

  // int64 exponent = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_exponent() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<2>(
              stream, this_._internal_exponent(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.Int64ValueAndExponent)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Int64ValueAndExponent::ByteSizeLong(const MessageLite& base) {
  const Int64ValueAndExponent& this_ = static_cast<const Int64ValueAndExponent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Int64ValueAndExponent::ByteSizeLong() const {
  const Int64ValueAndExponent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.Int64ValueAndExponent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // int64 value = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_value() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_value());
      }
    }
    // int64 exponent = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_exponent() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_exponent());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Int64ValueAndExponent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Int64ValueAndExponent*>(&to_msg);
  auto& from = static_cast<const Int64ValueAndExponent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.Int64ValueAndExponent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_value() != 0) {
        _this->_impl_.value_ = from._impl_.value_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_exponent() != 0) {
        _this->_impl_.exponent_ = from._impl_.exponent_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Int64ValueAndExponent::CopyFrom(const Int64ValueAndExponent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.Int64ValueAndExponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Int64ValueAndExponent::InternalSwap(Int64ValueAndExponent* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Int64ValueAndExponent, _impl_.exponent_)
      + sizeof(Int64ValueAndExponent::_impl_.exponent_)
      - PROTOBUF_FIELD_OFFSET(Int64ValueAndExponent, _impl_.value_)>(
          reinterpret_cast<char*>(&_impl_.value_),
          reinterpret_cast<char*>(&other->_impl_.value_));
}

::google::protobuf::Metadata Int64ValueAndExponent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Int64Value::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64Value, _impl_._oneof_case_);
};

void Int64Value::set_allocated_statistic_measure(::sensoris::protobuf::types::base::Int64StatisticMeasure* PROTOBUF_NULLABLE statistic_measure) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value_oneof();
  if (statistic_measure) {
    ::google::protobuf::Arena* submessage_arena = statistic_measure->GetArena();
    if (message_arena != submessage_arena) {
      statistic_measure = ::google::protobuf::internal::GetOwnedMessage(message_arena, statistic_measure, submessage_arena);
    }
    set_has_statistic_measure();
    _impl_.value_oneof_.statistic_measure_ = statistic_measure;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Int64Value.statistic_measure)
}
void Int64Value::set_allocated_absolute_histogram(::sensoris::protobuf::types::base::AbsoluteInt64Histogram* PROTOBUF_NULLABLE absolute_histogram) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value_oneof();
  if (absolute_histogram) {
    ::google::protobuf::Arena* submessage_arena = absolute_histogram->GetArena();
    if (message_arena != submessage_arena) {
      absolute_histogram = ::google::protobuf::internal::GetOwnedMessage(message_arena, absolute_histogram, submessage_arena);
    }
    set_has_absolute_histogram();
    _impl_.value_oneof_.absolute_histogram_ = absolute_histogram;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Int64Value.absolute_histogram)
}
void Int64Value::set_allocated_relative_histogram(::sensoris::protobuf::types::base::RelativeInt64Histogram* PROTOBUF_NULLABLE relative_histogram) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value_oneof();
  if (relative_histogram) {
    ::google::protobuf::Arena* submessage_arena = relative_histogram->GetArena();
    if (message_arena != submessage_arena) {
      relative_histogram = ::google::protobuf::internal::GetOwnedMessage(message_arena, relative_histogram, submessage_arena);
    }
    set_has_relative_histogram();
    _impl_.value_oneof_.relative_histogram_ = relative_histogram;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Int64Value.relative_histogram)
}
void Int64Value::set_allocated_gaussian_distribution(::sensoris::protobuf::types::base::Int64GaussianDistribution* PROTOBUF_NULLABLE gaussian_distribution) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value_oneof();
  if (gaussian_distribution) {
    ::google::protobuf::Arena* submessage_arena = gaussian_distribution->GetArena();
    if (message_arena != submessage_arena) {
      gaussian_distribution = ::google::protobuf::internal::GetOwnedMessage(message_arena, gaussian_distribution, submessage_arena);
    }
    set_has_gaussian_distribution();
    _impl_.value_oneof_.gaussian_distribution_ = gaussian_distribution;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Int64Value.gaussian_distribution)
}
Int64Value::Int64Value(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Int64Value_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.Int64Value)
}
PROTOBUF_NDEBUG_INLINE Int64Value::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::base::Int64Value& from_msg)
      : value_oneof_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Int64Value::Int64Value(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Int64Value& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Int64Value_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Int64Value* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (value_oneof_case()) {
    case VALUE_ONEOF_NOT_SET:
      break;
      case kValue:
        _impl_.value_oneof_.value_ = from._impl_.value_oneof_.value_;
        break;
      case kStatisticMeasure:
        _impl_.value_oneof_.statistic_measure_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.value_oneof_.statistic_measure_);
        break;
      case kAbsoluteHistogram:
        _impl_.value_oneof_.absolute_histogram_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.value_oneof_.absolute_histogram_);
        break;
      case kRelativeHistogram:
        _impl_.value_oneof_.relative_histogram_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.value_oneof_.relative_histogram_);
        break;
      case kGaussianDistribution:
        _impl_.value_oneof_.gaussian_distribution_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.value_oneof_.gaussian_distribution_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.Int64Value)
}
PROTOBUF_NDEBUG_INLINE Int64Value::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : value_oneof_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Int64Value::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Int64Value::~Int64Value() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.Int64Value)
  SharedDtor(*this);
}
inline void Int64Value::SharedDtor(MessageLite& self) {
  Int64Value& this_ = static_cast<Int64Value&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_value_oneof()) {
    this_.clear_value_oneof();
  }
  this_._impl_.~Impl_();
}

void Int64Value::clear_value_oneof() {
// @@protoc_insertion_point(one_of_clear_start:sensoris.protobuf.types.base.Int64Value)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (value_oneof_case()) {
    case kValue: {
      // No need to clear
      break;
    }
    case kStatisticMeasure: {
      if (GetArena() == nullptr) {
        delete _impl_.value_oneof_.statistic_measure_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_oneof_.statistic_measure_);
      }
      break;
    }
    case kAbsoluteHistogram: {
      if (GetArena() == nullptr) {
        delete _impl_.value_oneof_.absolute_histogram_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_oneof_.absolute_histogram_);
      }
      break;
    }
    case kRelativeHistogram: {
      if (GetArena() == nullptr) {
        delete _impl_.value_oneof_.relative_histogram_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_oneof_.relative_histogram_);
      }
      break;
    }
    case kGaussianDistribution: {
      if (GetArena() == nullptr) {
        delete _impl_.value_oneof_.gaussian_distribution_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_oneof_.gaussian_distribution_);
      }
      break;
    }
    case VALUE_ONEOF_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_ONEOF_NOT_SET;
}


inline void* PROTOBUF_NONNULL Int64Value::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Int64Value(arena);
}
constexpr auto Int64Value::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Int64Value),
                                            alignof(Int64Value));
}
constexpr auto Int64Value::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Int64Value_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Int64Value::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Int64Value>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Int64Value::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Int64Value>(), &Int64Value::ByteSizeLong,
              &Int64Value::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Int64Value, _impl_._cached_size_),
          false,
      },
      &Int64Value::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Int64Value_class_data_ =
        Int64Value::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Int64Value::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Int64Value_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Int64Value_class_data_.tc_table);
  return Int64Value_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 5, 4, 0, 2>
Int64Value::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Int64Value_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64Value>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 value = 1;
    {PROTOBUF_FIELD_OFFSET(Int64Value, _impl_.value_oneof_.value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kInt64)},
    // .sensoris.protobuf.types.base.Int64StatisticMeasure statistic_measure = 2;
    {PROTOBUF_FIELD_OFFSET(Int64Value, _impl_.value_oneof_.statistic_measure_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.AbsoluteInt64Histogram absolute_histogram = 3;
    {PROTOBUF_FIELD_OFFSET(Int64Value, _impl_.value_oneof_.absolute_histogram_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.RelativeInt64Histogram relative_histogram = 4;
    {PROTOBUF_FIELD_OFFSET(Int64Value, _impl_.value_oneof_.relative_histogram_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.Int64GaussianDistribution gaussian_distribution = 5;
    {PROTOBUF_FIELD_OFFSET(Int64Value, _impl_.value_oneof_.gaussian_distribution_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64StatisticMeasure>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::AbsoluteInt64Histogram>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::RelativeInt64Histogram>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64GaussianDistribution>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Int64Value::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.Int64Value)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value_oneof();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Int64Value::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Int64Value& this_ = static_cast<const Int64Value&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Int64Value::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Int64Value& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.Int64Value)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.value_oneof_case()) {
    case kValue: {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_value(), target);
      break;
    }
    case kStatisticMeasure: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *this_._impl_.value_oneof_.statistic_measure_, this_._impl_.value_oneof_.statistic_measure_->GetCachedSize(), target,
          stream);
      break;
    }
    case kAbsoluteHistogram: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *this_._impl_.value_oneof_.absolute_histogram_, this_._impl_.value_oneof_.absolute_histogram_->GetCachedSize(), target,
          stream);
      break;
    }
    case kRelativeHistogram: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *this_._impl_.value_oneof_.relative_histogram_, this_._impl_.value_oneof_.relative_histogram_->GetCachedSize(), target,
          stream);
      break;
    }
    case kGaussianDistribution: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, *this_._impl_.value_oneof_.gaussian_distribution_, this_._impl_.value_oneof_.gaussian_distribution_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.Int64Value)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Int64Value::ByteSizeLong(const MessageLite& base) {
  const Int64Value& this_ = static_cast<const Int64Value&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Int64Value::ByteSizeLong() const {
  const Int64Value& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.Int64Value)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  switch (this_.value_oneof_case()) {
    // int64 value = 1;
    case kValue: {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this_._internal_value());
      break;
    }
    // .sensoris.protobuf.types.base.Int64StatisticMeasure statistic_measure = 2;
    case kStatisticMeasure: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_oneof_.statistic_measure_);
      break;
    }
    // .sensoris.protobuf.types.base.AbsoluteInt64Histogram absolute_histogram = 3;
    case kAbsoluteHistogram: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_oneof_.absolute_histogram_);
      break;
    }
    // .sensoris.protobuf.types.base.RelativeInt64Histogram relative_histogram = 4;
    case kRelativeHistogram: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_oneof_.relative_histogram_);
      break;
    }
    // .sensoris.protobuf.types.base.Int64GaussianDistribution gaussian_distribution = 5;
    case kGaussianDistribution: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_oneof_.gaussian_distribution_);
      break;
    }
    case VALUE_ONEOF_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Int64Value::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Int64Value*>(&to_msg);
  auto& from = static_cast<const Int64Value&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.Int64Value)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_value_oneof();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kValue: {
        _this->_impl_.value_oneof_.value_ = from._impl_.value_oneof_.value_;
        break;
      }
      case kStatisticMeasure: {
        if (oneof_needs_init) {
          _this->_impl_.value_oneof_.statistic_measure_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.value_oneof_.statistic_measure_);
        } else {
          _this->_impl_.value_oneof_.statistic_measure_->MergeFrom(*from._impl_.value_oneof_.statistic_measure_);
        }
        break;
      }
      case kAbsoluteHistogram: {
        if (oneof_needs_init) {
          _this->_impl_.value_oneof_.absolute_histogram_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.value_oneof_.absolute_histogram_);
        } else {
          _this->_impl_.value_oneof_.absolute_histogram_->MergeFrom(*from._impl_.value_oneof_.absolute_histogram_);
        }
        break;
      }
      case kRelativeHistogram: {
        if (oneof_needs_init) {
          _this->_impl_.value_oneof_.relative_histogram_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.value_oneof_.relative_histogram_);
        } else {
          _this->_impl_.value_oneof_.relative_histogram_->MergeFrom(*from._impl_.value_oneof_.relative_histogram_);
        }
        break;
      }
      case kGaussianDistribution: {
        if (oneof_needs_init) {
          _this->_impl_.value_oneof_.gaussian_distribution_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.value_oneof_.gaussian_distribution_);
        } else {
          _this->_impl_.value_oneof_.gaussian_distribution_->MergeFrom(*from._impl_.value_oneof_.gaussian_distribution_);
        }
        break;
      }
      case VALUE_ONEOF_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Int64Value::CopyFrom(const Int64Value& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.Int64Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Int64Value::InternalSwap(Int64Value* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.value_oneof_, other->_impl_.value_oneof_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Int64Value::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Int64ValueAndAccuracy_ValueAndAccuracy::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Int64ValueAndAccuracy_ValueAndAccuracy>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Int64ValueAndAccuracy_ValueAndAccuracy, _impl_._has_bits_);
};

void Int64ValueAndAccuracy_ValueAndAccuracy::clear_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.accuracy_ != nullptr) _impl_.accuracy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Int64ValueAndAccuracy_ValueAndAccuracy::Int64ValueAndAccuracy_ValueAndAccuracy(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Int64ValueAndAccuracy_ValueAndAccuracy_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy)
}
PROTOBUF_NDEBUG_INLINE Int64ValueAndAccuracy_ValueAndAccuracy::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Int64ValueAndAccuracy_ValueAndAccuracy::Int64ValueAndAccuracy_ValueAndAccuracy(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Int64ValueAndAccuracy_ValueAndAccuracy& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Int64ValueAndAccuracy_ValueAndAccuracy_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Int64ValueAndAccuracy_ValueAndAccuracy* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.accuracy_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.accuracy_)
                : nullptr;
  _impl_.value_ = from._impl_.value_;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy)
}
PROTOBUF_NDEBUG_INLINE Int64ValueAndAccuracy_ValueAndAccuracy::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Int64ValueAndAccuracy_ValueAndAccuracy::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, accuracy_),
           0,
           offsetof(Impl_, value_) -
               offsetof(Impl_, accuracy_) +
               sizeof(Impl_::value_));
}
Int64ValueAndAccuracy_ValueAndAccuracy::~Int64ValueAndAccuracy_ValueAndAccuracy() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy)
  SharedDtor(*this);
}
inline void Int64ValueAndAccuracy_ValueAndAccuracy::SharedDtor(MessageLite& self) {
  Int64ValueAndAccuracy_ValueAndAccuracy& this_ = static_cast<Int64ValueAndAccuracy_ValueAndAccuracy&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.accuracy_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Int64ValueAndAccuracy_ValueAndAccuracy::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Int64ValueAndAccuracy_ValueAndAccuracy(arena);
}
constexpr auto Int64ValueAndAccuracy_ValueAndAccuracy::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Int64ValueAndAccuracy_ValueAndAccuracy),
                                            alignof(Int64ValueAndAccuracy_ValueAndAccuracy));
}
constexpr auto Int64ValueAndAccuracy_ValueAndAccuracy::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Int64ValueAndAccuracy_ValueAndAccuracy_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Int64ValueAndAccuracy_ValueAndAccuracy::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Int64ValueAndAccuracy_ValueAndAccuracy>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Int64ValueAndAccuracy_ValueAndAccuracy::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Int64ValueAndAccuracy_ValueAndAccuracy>(), &Int64ValueAndAccuracy_ValueAndAccuracy::ByteSizeLong,
              &Int64ValueAndAccuracy_ValueAndAccuracy::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Int64ValueAndAccuracy_ValueAndAccuracy, _impl_._cached_size_),
          false,
      },
      &Int64ValueAndAccuracy_ValueAndAccuracy::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Int64ValueAndAccuracy_ValueAndAccuracy_class_data_ =
        Int64ValueAndAccuracy_ValueAndAccuracy::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Int64ValueAndAccuracy_ValueAndAccuracy::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Int64ValueAndAccuracy_ValueAndAccuracy_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Int64ValueAndAccuracy_ValueAndAccuracy_class_data_.tc_table);
  return Int64ValueAndAccuracy_ValueAndAccuracy_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
Int64ValueAndAccuracy_ValueAndAccuracy::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Int64ValueAndAccuracy_ValueAndAccuracy, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Int64ValueAndAccuracy_ValueAndAccuracy_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Int64Value accuracy = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Int64ValueAndAccuracy_ValueAndAccuracy, _impl_.accuracy_)}},
    // int64 value = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Int64ValueAndAccuracy_ValueAndAccuracy, _impl_.value_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(Int64ValueAndAccuracy_ValueAndAccuracy, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 value = 1;
    {PROTOBUF_FIELD_OFFSET(Int64ValueAndAccuracy_ValueAndAccuracy, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // .google.protobuf.Int64Value accuracy = 2;
    {PROTOBUF_FIELD_OFFSET(Int64ValueAndAccuracy_ValueAndAccuracy, _impl_.accuracy_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Int64ValueAndAccuracy_ValueAndAccuracy::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.accuracy_ != nullptr);
    _impl_.accuracy_->Clear();
  }
  _impl_.value_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Int64ValueAndAccuracy_ValueAndAccuracy::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Int64ValueAndAccuracy_ValueAndAccuracy& this_ = static_cast<const Int64ValueAndAccuracy_ValueAndAccuracy&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Int64ValueAndAccuracy_ValueAndAccuracy::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Int64ValueAndAccuracy_ValueAndAccuracy& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 value = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_value() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_value(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Int64Value accuracy = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.accuracy_, this_._impl_.accuracy_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Int64ValueAndAccuracy_ValueAndAccuracy::ByteSizeLong(const MessageLite& base) {
  const Int64ValueAndAccuracy_ValueAndAccuracy& this_ = static_cast<const Int64ValueAndAccuracy_ValueAndAccuracy&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Int64ValueAndAccuracy_ValueAndAccuracy::ByteSizeLong() const {
  const Int64ValueAndAccuracy_ValueAndAccuracy& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .google.protobuf.Int64Value accuracy = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.accuracy_);
    }
    // int64 value = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_value() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_value());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Int64ValueAndAccuracy_ValueAndAccuracy::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Int64ValueAndAccuracy_ValueAndAccuracy*>(&to_msg);
  auto& from = static_cast<const Int64ValueAndAccuracy_ValueAndAccuracy&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.accuracy_ != nullptr);
      if (_this->_impl_.accuracy_ == nullptr) {
        _this->_impl_.accuracy_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.accuracy_);
      } else {
        _this->_impl_.accuracy_->MergeFrom(*from._impl_.accuracy_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_value() != 0) {
        _this->_impl_.value_ = from._impl_.value_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Int64ValueAndAccuracy_ValueAndAccuracy::CopyFrom(const Int64ValueAndAccuracy_ValueAndAccuracy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Int64ValueAndAccuracy_ValueAndAccuracy::InternalSwap(Int64ValueAndAccuracy_ValueAndAccuracy* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Int64ValueAndAccuracy_ValueAndAccuracy, _impl_.value_)
      + sizeof(Int64ValueAndAccuracy_ValueAndAccuracy::_impl_.value_)
      - PROTOBUF_FIELD_OFFSET(Int64ValueAndAccuracy_ValueAndAccuracy, _impl_.accuracy_)>(
          reinterpret_cast<char*>(&_impl_.accuracy_),
          reinterpret_cast<char*>(&other->_impl_.accuracy_));
}

::google::protobuf::Metadata Int64ValueAndAccuracy_ValueAndAccuracy::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Int64ValueAndAccuracy::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::base::Int64ValueAndAccuracy, _impl_._oneof_case_);
};

void Int64ValueAndAccuracy::set_allocated_value_and_accuracy(::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy* PROTOBUF_NULLABLE value_and_accuracy) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value_oneof();
  if (value_and_accuracy) {
    ::google::protobuf::Arena* submessage_arena = value_and_accuracy->GetArena();
    if (message_arena != submessage_arena) {
      value_and_accuracy = ::google::protobuf::internal::GetOwnedMessage(message_arena, value_and_accuracy, submessage_arena);
    }
    set_has_value_and_accuracy();
    _impl_.value_oneof_.value_and_accuracy_ = value_and_accuracy;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Int64ValueAndAccuracy.value_and_accuracy)
}
void Int64ValueAndAccuracy::set_allocated_statistic_measure_and_accuracy(::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy* PROTOBUF_NULLABLE statistic_measure_and_accuracy) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value_oneof();
  if (statistic_measure_and_accuracy) {
    ::google::protobuf::Arena* submessage_arena = statistic_measure_and_accuracy->GetArena();
    if (message_arena != submessage_arena) {
      statistic_measure_and_accuracy = ::google::protobuf::internal::GetOwnedMessage(message_arena, statistic_measure_and_accuracy, submessage_arena);
    }
    set_has_statistic_measure_and_accuracy();
    _impl_.value_oneof_.statistic_measure_and_accuracy_ = statistic_measure_and_accuracy;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Int64ValueAndAccuracy.statistic_measure_and_accuracy)
}
void Int64ValueAndAccuracy::set_allocated_absolute_histogram(::sensoris::protobuf::types::base::AbsoluteInt64Histogram* PROTOBUF_NULLABLE absolute_histogram) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value_oneof();
  if (absolute_histogram) {
    ::google::protobuf::Arena* submessage_arena = absolute_histogram->GetArena();
    if (message_arena != submessage_arena) {
      absolute_histogram = ::google::protobuf::internal::GetOwnedMessage(message_arena, absolute_histogram, submessage_arena);
    }
    set_has_absolute_histogram();
    _impl_.value_oneof_.absolute_histogram_ = absolute_histogram;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Int64ValueAndAccuracy.absolute_histogram)
}
void Int64ValueAndAccuracy::set_allocated_relative_histogram(::sensoris::protobuf::types::base::RelativeInt64Histogram* PROTOBUF_NULLABLE relative_histogram) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value_oneof();
  if (relative_histogram) {
    ::google::protobuf::Arena* submessage_arena = relative_histogram->GetArena();
    if (message_arena != submessage_arena) {
      relative_histogram = ::google::protobuf::internal::GetOwnedMessage(message_arena, relative_histogram, submessage_arena);
    }
    set_has_relative_histogram();
    _impl_.value_oneof_.relative_histogram_ = relative_histogram;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Int64ValueAndAccuracy.relative_histogram)
}
void Int64ValueAndAccuracy::set_allocated_gaussian_distribution(::sensoris::protobuf::types::base::Int64GaussianDistribution* PROTOBUF_NULLABLE gaussian_distribution) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value_oneof();
  if (gaussian_distribution) {
    ::google::protobuf::Arena* submessage_arena = gaussian_distribution->GetArena();
    if (message_arena != submessage_arena) {
      gaussian_distribution = ::google::protobuf::internal::GetOwnedMessage(message_arena, gaussian_distribution, submessage_arena);
    }
    set_has_gaussian_distribution();
    _impl_.value_oneof_.gaussian_distribution_ = gaussian_distribution;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.base.Int64ValueAndAccuracy.gaussian_distribution)
}
Int64ValueAndAccuracy::Int64ValueAndAccuracy(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Int64ValueAndAccuracy_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.Int64ValueAndAccuracy)
}
PROTOBUF_NDEBUG_INLINE Int64ValueAndAccuracy::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::base::Int64ValueAndAccuracy& from_msg)
      : value_oneof_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Int64ValueAndAccuracy::Int64ValueAndAccuracy(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Int64ValueAndAccuracy& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Int64ValueAndAccuracy_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Int64ValueAndAccuracy* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (value_oneof_case()) {
    case VALUE_ONEOF_NOT_SET:
      break;
      case kValueAndAccuracy:
        _impl_.value_oneof_.value_and_accuracy_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.value_oneof_.value_and_accuracy_);
        break;
      case kStatisticMeasureAndAccuracy:
        _impl_.value_oneof_.statistic_measure_and_accuracy_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.value_oneof_.statistic_measure_and_accuracy_);
        break;
      case kAbsoluteHistogram:
        _impl_.value_oneof_.absolute_histogram_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.value_oneof_.absolute_histogram_);
        break;
      case kRelativeHistogram:
        _impl_.value_oneof_.relative_histogram_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.value_oneof_.relative_histogram_);
        break;
      case kGaussianDistribution:
        _impl_.value_oneof_.gaussian_distribution_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.value_oneof_.gaussian_distribution_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.Int64ValueAndAccuracy)
}
PROTOBUF_NDEBUG_INLINE Int64ValueAndAccuracy::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : value_oneof_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Int64ValueAndAccuracy::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Int64ValueAndAccuracy::~Int64ValueAndAccuracy() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.Int64ValueAndAccuracy)
  SharedDtor(*this);
}
inline void Int64ValueAndAccuracy::SharedDtor(MessageLite& self) {
  Int64ValueAndAccuracy& this_ = static_cast<Int64ValueAndAccuracy&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_value_oneof()) {
    this_.clear_value_oneof();
  }
  this_._impl_.~Impl_();
}

void Int64ValueAndAccuracy::clear_value_oneof() {
// @@protoc_insertion_point(one_of_clear_start:sensoris.protobuf.types.base.Int64ValueAndAccuracy)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (value_oneof_case()) {
    case kValueAndAccuracy: {
      if (GetArena() == nullptr) {
        delete _impl_.value_oneof_.value_and_accuracy_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_oneof_.value_and_accuracy_);
      }
      break;
    }
    case kStatisticMeasureAndAccuracy: {
      if (GetArena() == nullptr) {
        delete _impl_.value_oneof_.statistic_measure_and_accuracy_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_oneof_.statistic_measure_and_accuracy_);
      }
      break;
    }
    case kAbsoluteHistogram: {
      if (GetArena() == nullptr) {
        delete _impl_.value_oneof_.absolute_histogram_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_oneof_.absolute_histogram_);
      }
      break;
    }
    case kRelativeHistogram: {
      if (GetArena() == nullptr) {
        delete _impl_.value_oneof_.relative_histogram_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_oneof_.relative_histogram_);
      }
      break;
    }
    case kGaussianDistribution: {
      if (GetArena() == nullptr) {
        delete _impl_.value_oneof_.gaussian_distribution_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_oneof_.gaussian_distribution_);
      }
      break;
    }
    case VALUE_ONEOF_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_ONEOF_NOT_SET;
}


inline void* PROTOBUF_NONNULL Int64ValueAndAccuracy::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Int64ValueAndAccuracy(arena);
}
constexpr auto Int64ValueAndAccuracy::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Int64ValueAndAccuracy),
                                            alignof(Int64ValueAndAccuracy));
}
constexpr auto Int64ValueAndAccuracy::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Int64ValueAndAccuracy_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Int64ValueAndAccuracy::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Int64ValueAndAccuracy>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Int64ValueAndAccuracy::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Int64ValueAndAccuracy>(), &Int64ValueAndAccuracy::ByteSizeLong,
              &Int64ValueAndAccuracy::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Int64ValueAndAccuracy, _impl_._cached_size_),
          false,
      },
      &Int64ValueAndAccuracy::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Int64ValueAndAccuracy_class_data_ =
        Int64ValueAndAccuracy::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Int64ValueAndAccuracy::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Int64ValueAndAccuracy_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Int64ValueAndAccuracy_class_data_.tc_table);
  return Int64ValueAndAccuracy_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 5, 5, 0, 2>
Int64ValueAndAccuracy::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Int64ValueAndAccuracy_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64ValueAndAccuracy>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy value_and_accuracy = 1;
    {PROTOBUF_FIELD_OFFSET(Int64ValueAndAccuracy, _impl_.value_oneof_.value_and_accuracy_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy statistic_measure_and_accuracy = 2;
    {PROTOBUF_FIELD_OFFSET(Int64ValueAndAccuracy, _impl_.value_oneof_.statistic_measure_and_accuracy_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.AbsoluteInt64Histogram absolute_histogram = 3;
    {PROTOBUF_FIELD_OFFSET(Int64ValueAndAccuracy, _impl_.value_oneof_.absolute_histogram_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.RelativeInt64Histogram relative_histogram = 4;
    {PROTOBUF_FIELD_OFFSET(Int64ValueAndAccuracy, _impl_.value_oneof_.relative_histogram_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.Int64GaussianDistribution gaussian_distribution = 5;
    {PROTOBUF_FIELD_OFFSET(Int64ValueAndAccuracy, _impl_.value_oneof_.gaussian_distribution_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64ValueAndAccuracy_ValueAndAccuracy>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64StatisticMeasureAndAccuracy>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::AbsoluteInt64Histogram>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::RelativeInt64Histogram>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64GaussianDistribution>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Int64ValueAndAccuracy::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.Int64ValueAndAccuracy)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value_oneof();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Int64ValueAndAccuracy::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Int64ValueAndAccuracy& this_ = static_cast<const Int64ValueAndAccuracy&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Int64ValueAndAccuracy::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Int64ValueAndAccuracy& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.Int64ValueAndAccuracy)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.value_oneof_case()) {
    case kValueAndAccuracy: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *this_._impl_.value_oneof_.value_and_accuracy_, this_._impl_.value_oneof_.value_and_accuracy_->GetCachedSize(), target,
          stream);
      break;
    }
    case kStatisticMeasureAndAccuracy: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *this_._impl_.value_oneof_.statistic_measure_and_accuracy_, this_._impl_.value_oneof_.statistic_measure_and_accuracy_->GetCachedSize(), target,
          stream);
      break;
    }
    case kAbsoluteHistogram: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *this_._impl_.value_oneof_.absolute_histogram_, this_._impl_.value_oneof_.absolute_histogram_->GetCachedSize(), target,
          stream);
      break;
    }
    case kRelativeHistogram: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *this_._impl_.value_oneof_.relative_histogram_, this_._impl_.value_oneof_.relative_histogram_->GetCachedSize(), target,
          stream);
      break;
    }
    case kGaussianDistribution: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, *this_._impl_.value_oneof_.gaussian_distribution_, this_._impl_.value_oneof_.gaussian_distribution_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.Int64ValueAndAccuracy)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Int64ValueAndAccuracy::ByteSizeLong(const MessageLite& base) {
  const Int64ValueAndAccuracy& this_ = static_cast<const Int64ValueAndAccuracy&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Int64ValueAndAccuracy::ByteSizeLong() const {
  const Int64ValueAndAccuracy& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.Int64ValueAndAccuracy)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  switch (this_.value_oneof_case()) {
    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy.ValueAndAccuracy value_and_accuracy = 1;
    case kValueAndAccuracy: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_oneof_.value_and_accuracy_);
      break;
    }
    // .sensoris.protobuf.types.base.Int64StatisticMeasureAndAccuracy statistic_measure_and_accuracy = 2;
    case kStatisticMeasureAndAccuracy: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_oneof_.statistic_measure_and_accuracy_);
      break;
    }
    // .sensoris.protobuf.types.base.AbsoluteInt64Histogram absolute_histogram = 3;
    case kAbsoluteHistogram: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_oneof_.absolute_histogram_);
      break;
    }
    // .sensoris.protobuf.types.base.RelativeInt64Histogram relative_histogram = 4;
    case kRelativeHistogram: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_oneof_.relative_histogram_);
      break;
    }
    // .sensoris.protobuf.types.base.Int64GaussianDistribution gaussian_distribution = 5;
    case kGaussianDistribution: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_oneof_.gaussian_distribution_);
      break;
    }
    case VALUE_ONEOF_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Int64ValueAndAccuracy::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Int64ValueAndAccuracy*>(&to_msg);
  auto& from = static_cast<const Int64ValueAndAccuracy&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.Int64ValueAndAccuracy)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_value_oneof();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kValueAndAccuracy: {
        if (oneof_needs_init) {
          _this->_impl_.value_oneof_.value_and_accuracy_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.value_oneof_.value_and_accuracy_);
        } else {
          _this->_impl_.value_oneof_.value_and_accuracy_->MergeFrom(*from._impl_.value_oneof_.value_and_accuracy_);
        }
        break;
      }
      case kStatisticMeasureAndAccuracy: {
        if (oneof_needs_init) {
          _this->_impl_.value_oneof_.statistic_measure_and_accuracy_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.value_oneof_.statistic_measure_and_accuracy_);
        } else {
          _this->_impl_.value_oneof_.statistic_measure_and_accuracy_->MergeFrom(*from._impl_.value_oneof_.statistic_measure_and_accuracy_);
        }
        break;
      }
      case kAbsoluteHistogram: {
        if (oneof_needs_init) {
          _this->_impl_.value_oneof_.absolute_histogram_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.value_oneof_.absolute_histogram_);
        } else {
          _this->_impl_.value_oneof_.absolute_histogram_->MergeFrom(*from._impl_.value_oneof_.absolute_histogram_);
        }
        break;
      }
      case kRelativeHistogram: {
        if (oneof_needs_init) {
          _this->_impl_.value_oneof_.relative_histogram_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.value_oneof_.relative_histogram_);
        } else {
          _this->_impl_.value_oneof_.relative_histogram_->MergeFrom(*from._impl_.value_oneof_.relative_histogram_);
        }
        break;
      }
      case kGaussianDistribution: {
        if (oneof_needs_init) {
          _this->_impl_.value_oneof_.gaussian_distribution_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.value_oneof_.gaussian_distribution_);
        } else {
          _this->_impl_.value_oneof_.gaussian_distribution_->MergeFrom(*from._impl_.value_oneof_.gaussian_distribution_);
        }
        break;
      }
      case VALUE_ONEOF_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Int64ValueAndAccuracy::CopyFrom(const Int64ValueAndAccuracy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.Int64ValueAndAccuracy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Int64ValueAndAccuracy::InternalSwap(Int64ValueAndAccuracy* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.value_oneof_, other->_impl_.value_oneof_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Int64ValueAndAccuracy::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Confidence::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Confidence>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Confidence, _impl_._has_bits_);
};

Confidence::Confidence(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Confidence_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.Confidence)
}
Confidence::Confidence(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Confidence& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Confidence_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE Confidence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Confidence::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.value_ = {};
}
Confidence::~Confidence() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.Confidence)
  SharedDtor(*this);
}
inline void Confidence::SharedDtor(MessageLite& self) {
  Confidence& this_ = static_cast<Confidence&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Confidence::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Confidence(arena);
}
constexpr auto Confidence::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Confidence),
                                            alignof(Confidence));
}
constexpr auto Confidence::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Confidence_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Confidence::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Confidence>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Confidence::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Confidence>(), &Confidence::ByteSizeLong,
              &Confidence::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Confidence, _impl_._cached_size_),
          false,
      },
      &Confidence::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Confidence_class_data_ =
        Confidence::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Confidence::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Confidence_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Confidence_class_data_.tc_table);
  return Confidence_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
Confidence::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Confidence, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Confidence_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Confidence>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 value = 1 [(.sensoris.protobuf.types.base.exponent) = 0];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Confidence, _impl_.value_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Confidence, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 value = 1 [(.sensoris.protobuf.types.base.exponent) = 0];
    {PROTOBUF_FIELD_OFFSET(Confidence, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void Confidence::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.Confidence)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Confidence::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Confidence& this_ = static_cast<const Confidence&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Confidence::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Confidence& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.Confidence)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 value = 1 [(.sensoris.protobuf.types.base.exponent) = 0];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_value() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_value(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.Confidence)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Confidence::ByteSizeLong(const MessageLite& base) {
  const Confidence& this_ = static_cast<const Confidence&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Confidence::ByteSizeLong() const {
  const Confidence& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.Confidence)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // int64 value = 1 [(.sensoris.protobuf.types.base.exponent) = 0];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_value() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_value());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Confidence::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Confidence*>(&to_msg);
  auto& from = static_cast<const Confidence&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.Confidence)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_value() != 0) {
      _this->_impl_.value_ = from._impl_.value_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Confidence::CopyFrom(const Confidence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.Confidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Confidence::InternalSwap(Confidence* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata Confidence::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CountAndConfidence::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CountAndConfidence>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CountAndConfidence, _impl_._has_bits_);
};

void CountAndConfidence::clear_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.count_ != nullptr) _impl_.count_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CountAndConfidence::CountAndConfidence(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CountAndConfidence_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.CountAndConfidence)
}
PROTOBUF_NDEBUG_INLINE CountAndConfidence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::base::CountAndConfidence& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CountAndConfidence::CountAndConfidence(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CountAndConfidence& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CountAndConfidence_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CountAndConfidence* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.count_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.count_)
                : nullptr;
  _impl_.confidence_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.confidence_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.CountAndConfidence)
}
PROTOBUF_NDEBUG_INLINE CountAndConfidence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CountAndConfidence::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, count_),
           0,
           offsetof(Impl_, confidence_) -
               offsetof(Impl_, count_) +
               sizeof(Impl_::confidence_));
}
CountAndConfidence::~CountAndConfidence() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.CountAndConfidence)
  SharedDtor(*this);
}
inline void CountAndConfidence::SharedDtor(MessageLite& self) {
  CountAndConfidence& this_ = static_cast<CountAndConfidence&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.count_;
  delete this_._impl_.confidence_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CountAndConfidence::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CountAndConfidence(arena);
}
constexpr auto CountAndConfidence::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CountAndConfidence),
                                            alignof(CountAndConfidence));
}
constexpr auto CountAndConfidence::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CountAndConfidence_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CountAndConfidence::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CountAndConfidence>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CountAndConfidence::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CountAndConfidence>(), &CountAndConfidence::ByteSizeLong,
              &CountAndConfidence::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CountAndConfidence, _impl_._cached_size_),
          false,
      },
      &CountAndConfidence::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CountAndConfidence_class_data_ =
        CountAndConfidence::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CountAndConfidence::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CountAndConfidence_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CountAndConfidence_class_data_.tc_table);
  return CountAndConfidence_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
CountAndConfidence::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CountAndConfidence, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CountAndConfidence_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::CountAndConfidence>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(CountAndConfidence, _impl_.confidence_)}},
    // .google.protobuf.Int64Value count = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CountAndConfidence, _impl_.count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Int64Value count = 1;
    {PROTOBUF_FIELD_OFFSET(CountAndConfidence, _impl_.count_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    {PROTOBUF_FIELD_OFFSET(CountAndConfidence, _impl_.confidence_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Confidence>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CountAndConfidence::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.CountAndConfidence)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.count_ != nullptr);
      _impl_.count_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.confidence_ != nullptr);
      _impl_.confidence_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CountAndConfidence::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CountAndConfidence& this_ = static_cast<const CountAndConfidence&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CountAndConfidence::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CountAndConfidence& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.CountAndConfidence)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Int64Value count = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.count_, this_._impl_.count_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.types.base.Confidence confidence = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.confidence_, this_._impl_.confidence_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.CountAndConfidence)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CountAndConfidence::ByteSizeLong(const MessageLite& base) {
  const CountAndConfidence& this_ = static_cast<const CountAndConfidence&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CountAndConfidence::ByteSizeLong() const {
  const CountAndConfidence& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.CountAndConfidence)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .google.protobuf.Int64Value count = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.count_);
    }
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.confidence_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CountAndConfidence::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CountAndConfidence*>(&to_msg);
  auto& from = static_cast<const CountAndConfidence&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.CountAndConfidence)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.count_ != nullptr);
      if (_this->_impl_.count_ == nullptr) {
        _this->_impl_.count_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.count_);
      } else {
        _this->_impl_.count_->MergeFrom(*from._impl_.count_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.confidence_ != nullptr);
      if (_this->_impl_.confidence_ == nullptr) {
        _this->_impl_.confidence_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.confidence_);
      } else {
        _this->_impl_.confidence_->MergeFrom(*from._impl_.confidence_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CountAndConfidence::CopyFrom(const CountAndConfidence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.CountAndConfidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CountAndConfidence::InternalSwap(CountAndConfidence* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CountAndConfidence, _impl_.confidence_)
      + sizeof(CountAndConfidence::_impl_.confidence_)
      - PROTOBUF_FIELD_OFFSET(CountAndConfidence, _impl_.count_)>(
          reinterpret_cast<char*>(&_impl_.count_),
          reinterpret_cast<char*>(&other->_impl_.count_));
}

::google::protobuf::Metadata CountAndConfidence::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Int64Matrix3x3::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Int64Matrix3x3>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Int64Matrix3x3, _impl_._has_bits_);
};

void Int64Matrix3x3::clear_a11() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.a11_ != nullptr) _impl_.a11_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Int64Matrix3x3::clear_a12() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.a12_ != nullptr) _impl_.a12_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void Int64Matrix3x3::clear_a13() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.a13_ != nullptr) _impl_.a13_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void Int64Matrix3x3::clear_a21() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.a21_ != nullptr) _impl_.a21_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void Int64Matrix3x3::clear_a22() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.a22_ != nullptr) _impl_.a22_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void Int64Matrix3x3::clear_a23() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.a23_ != nullptr) _impl_.a23_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void Int64Matrix3x3::clear_a31() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.a31_ != nullptr) _impl_.a31_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void Int64Matrix3x3::clear_a32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.a32_ != nullptr) _impl_.a32_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
void Int64Matrix3x3::clear_a33() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.a33_ != nullptr) _impl_.a33_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
Int64Matrix3x3::Int64Matrix3x3(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Int64Matrix3x3_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.Int64Matrix3x3)
}
PROTOBUF_NDEBUG_INLINE Int64Matrix3x3::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::base::Int64Matrix3x3& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Int64Matrix3x3::Int64Matrix3x3(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Int64Matrix3x3& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Int64Matrix3x3_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Int64Matrix3x3* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.a11_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.a11_)
                : nullptr;
  _impl_.a12_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.a12_)
                : nullptr;
  _impl_.a13_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.a13_)
                : nullptr;
  _impl_.a21_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.a21_)
                : nullptr;
  _impl_.a22_ = ((cached_has_bits & 0x00000010u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.a22_)
                : nullptr;
  _impl_.a23_ = ((cached_has_bits & 0x00000020u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.a23_)
                : nullptr;
  _impl_.a31_ = ((cached_has_bits & 0x00000040u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.a31_)
                : nullptr;
  _impl_.a32_ = ((cached_has_bits & 0x00000080u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.a32_)
                : nullptr;
  _impl_.a33_ = ((cached_has_bits & 0x00000100u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.a33_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.Int64Matrix3x3)
}
PROTOBUF_NDEBUG_INLINE Int64Matrix3x3::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Int64Matrix3x3::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, a11_),
           0,
           offsetof(Impl_, a33_) -
               offsetof(Impl_, a11_) +
               sizeof(Impl_::a33_));
}
Int64Matrix3x3::~Int64Matrix3x3() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.Int64Matrix3x3)
  SharedDtor(*this);
}
inline void Int64Matrix3x3::SharedDtor(MessageLite& self) {
  Int64Matrix3x3& this_ = static_cast<Int64Matrix3x3&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.a11_;
  delete this_._impl_.a12_;
  delete this_._impl_.a13_;
  delete this_._impl_.a21_;
  delete this_._impl_.a22_;
  delete this_._impl_.a23_;
  delete this_._impl_.a31_;
  delete this_._impl_.a32_;
  delete this_._impl_.a33_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Int64Matrix3x3::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Int64Matrix3x3(arena);
}
constexpr auto Int64Matrix3x3::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Int64Matrix3x3),
                                            alignof(Int64Matrix3x3));
}
constexpr auto Int64Matrix3x3::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Int64Matrix3x3_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Int64Matrix3x3::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Int64Matrix3x3>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Int64Matrix3x3::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Int64Matrix3x3>(), &Int64Matrix3x3::ByteSizeLong,
              &Int64Matrix3x3::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Int64Matrix3x3, _impl_._cached_size_),
          false,
      },
      &Int64Matrix3x3::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Int64Matrix3x3_class_data_ =
        Int64Matrix3x3::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Int64Matrix3x3::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Int64Matrix3x3_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Int64Matrix3x3_class_data_.tc_table);
  return Int64Matrix3x3_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 9, 0, 2>
Int64Matrix3x3::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Int64Matrix3x3, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    9,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Int64Matrix3x3_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64Matrix3x3>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Int64Value a11 = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Int64Matrix3x3, _impl_.a11_)}},
    // .google.protobuf.Int64Value a12 = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Int64Matrix3x3, _impl_.a12_)}},
    // .google.protobuf.Int64Value a13 = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(Int64Matrix3x3, _impl_.a13_)}},
    // .google.protobuf.Int64Value a21 = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(Int64Matrix3x3, _impl_.a21_)}},
    // .google.protobuf.Int64Value a22 = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 4, PROTOBUF_FIELD_OFFSET(Int64Matrix3x3, _impl_.a22_)}},
    // .google.protobuf.Int64Value a23 = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 5, 5, PROTOBUF_FIELD_OFFSET(Int64Matrix3x3, _impl_.a23_)}},
    // .google.protobuf.Int64Value a31 = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 6, 6, PROTOBUF_FIELD_OFFSET(Int64Matrix3x3, _impl_.a31_)}},
    // .google.protobuf.Int64Value a32 = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 7, 7, PROTOBUF_FIELD_OFFSET(Int64Matrix3x3, _impl_.a32_)}},
    // .google.protobuf.Int64Value a33 = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 8, 8, PROTOBUF_FIELD_OFFSET(Int64Matrix3x3, _impl_.a33_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Int64Value a11 = 1;
    {PROTOBUF_FIELD_OFFSET(Int64Matrix3x3, _impl_.a11_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Int64Value a12 = 2;
    {PROTOBUF_FIELD_OFFSET(Int64Matrix3x3, _impl_.a12_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Int64Value a13 = 3;
    {PROTOBUF_FIELD_OFFSET(Int64Matrix3x3, _impl_.a13_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Int64Value a21 = 4;
    {PROTOBUF_FIELD_OFFSET(Int64Matrix3x3, _impl_.a21_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Int64Value a22 = 5;
    {PROTOBUF_FIELD_OFFSET(Int64Matrix3x3, _impl_.a22_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Int64Value a23 = 6;
    {PROTOBUF_FIELD_OFFSET(Int64Matrix3x3, _impl_.a23_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Int64Value a31 = 7;
    {PROTOBUF_FIELD_OFFSET(Int64Matrix3x3, _impl_.a31_), _Internal::kHasBitsOffset + 6, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Int64Value a32 = 8;
    {PROTOBUF_FIELD_OFFSET(Int64Matrix3x3, _impl_.a32_), _Internal::kHasBitsOffset + 7, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Int64Value a33 = 9;
    {PROTOBUF_FIELD_OFFSET(Int64Matrix3x3, _impl_.a33_), _Internal::kHasBitsOffset + 8, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Int64Matrix3x3::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.Int64Matrix3x3)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.a11_ != nullptr);
      _impl_.a11_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.a12_ != nullptr);
      _impl_.a12_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.a13_ != nullptr);
      _impl_.a13_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.a21_ != nullptr);
      _impl_.a21_->Clear();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(_impl_.a22_ != nullptr);
      _impl_.a22_->Clear();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(_impl_.a23_ != nullptr);
      _impl_.a23_->Clear();
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      ABSL_DCHECK(_impl_.a31_ != nullptr);
      _impl_.a31_->Clear();
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      ABSL_DCHECK(_impl_.a32_ != nullptr);
      _impl_.a32_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000100u) != 0) {
    ABSL_DCHECK(_impl_.a33_ != nullptr);
    _impl_.a33_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Int64Matrix3x3::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Int64Matrix3x3& this_ = static_cast<const Int64Matrix3x3&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Int64Matrix3x3::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Int64Matrix3x3& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.Int64Matrix3x3)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Int64Value a11 = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.a11_, this_._impl_.a11_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Int64Value a12 = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.a12_, this_._impl_.a12_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Int64Value a13 = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.a13_, this_._impl_.a13_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Int64Value a21 = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.a21_, this_._impl_.a21_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Int64Value a22 = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.a22_, this_._impl_.a22_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Int64Value a23 = 6;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.a23_, this_._impl_.a23_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Int64Value a31 = 7;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *this_._impl_.a31_, this_._impl_.a31_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Int64Value a32 = 8;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, *this_._impl_.a32_, this_._impl_.a32_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Int64Value a33 = 9;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        9, *this_._impl_.a33_, this_._impl_.a33_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.Int64Matrix3x3)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Int64Matrix3x3::ByteSizeLong(const MessageLite& base) {
  const Int64Matrix3x3& this_ = static_cast<const Int64Matrix3x3&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Int64Matrix3x3::ByteSizeLong() const {
  const Int64Matrix3x3& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.Int64Matrix3x3)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // .google.protobuf.Int64Value a11 = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.a11_);
    }
    // .google.protobuf.Int64Value a12 = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.a12_);
    }
    // .google.protobuf.Int64Value a13 = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.a13_);
    }
    // .google.protobuf.Int64Value a21 = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.a21_);
    }
    // .google.protobuf.Int64Value a22 = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.a22_);
    }
    // .google.protobuf.Int64Value a23 = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.a23_);
    }
    // .google.protobuf.Int64Value a31 = 7;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.a31_);
    }
    // .google.protobuf.Int64Value a32 = 8;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.a32_);
    }
  }
   {
    // .google.protobuf.Int64Value a33 = 9;
    if ((cached_has_bits & 0x00000100u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.a33_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Int64Matrix3x3::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Int64Matrix3x3*>(&to_msg);
  auto& from = static_cast<const Int64Matrix3x3&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.Int64Matrix3x3)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.a11_ != nullptr);
      if (_this->_impl_.a11_ == nullptr) {
        _this->_impl_.a11_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.a11_);
      } else {
        _this->_impl_.a11_->MergeFrom(*from._impl_.a11_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.a12_ != nullptr);
      if (_this->_impl_.a12_ == nullptr) {
        _this->_impl_.a12_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.a12_);
      } else {
        _this->_impl_.a12_->MergeFrom(*from._impl_.a12_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.a13_ != nullptr);
      if (_this->_impl_.a13_ == nullptr) {
        _this->_impl_.a13_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.a13_);
      } else {
        _this->_impl_.a13_->MergeFrom(*from._impl_.a13_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.a21_ != nullptr);
      if (_this->_impl_.a21_ == nullptr) {
        _this->_impl_.a21_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.a21_);
      } else {
        _this->_impl_.a21_->MergeFrom(*from._impl_.a21_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(from._impl_.a22_ != nullptr);
      if (_this->_impl_.a22_ == nullptr) {
        _this->_impl_.a22_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.a22_);
      } else {
        _this->_impl_.a22_->MergeFrom(*from._impl_.a22_);
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(from._impl_.a23_ != nullptr);
      if (_this->_impl_.a23_ == nullptr) {
        _this->_impl_.a23_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.a23_);
      } else {
        _this->_impl_.a23_->MergeFrom(*from._impl_.a23_);
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      ABSL_DCHECK(from._impl_.a31_ != nullptr);
      if (_this->_impl_.a31_ == nullptr) {
        _this->_impl_.a31_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.a31_);
      } else {
        _this->_impl_.a31_->MergeFrom(*from._impl_.a31_);
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      ABSL_DCHECK(from._impl_.a32_ != nullptr);
      if (_this->_impl_.a32_ == nullptr) {
        _this->_impl_.a32_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.a32_);
      } else {
        _this->_impl_.a32_->MergeFrom(*from._impl_.a32_);
      }
    }
  }
  if ((cached_has_bits & 0x00000100u) != 0) {
    ABSL_DCHECK(from._impl_.a33_ != nullptr);
    if (_this->_impl_.a33_ == nullptr) {
      _this->_impl_.a33_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.a33_);
    } else {
      _this->_impl_.a33_->MergeFrom(*from._impl_.a33_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Int64Matrix3x3::CopyFrom(const Int64Matrix3x3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.Int64Matrix3x3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Int64Matrix3x3::InternalSwap(Int64Matrix3x3* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Int64Matrix3x3, _impl_.a33_)
      + sizeof(Int64Matrix3x3::_impl_.a33_)
      - PROTOBUF_FIELD_OFFSET(Int64Matrix3x3, _impl_.a11_)>(
          reinterpret_cast<char*>(&_impl_.a11_),
          reinterpret_cast<char*>(&other->_impl_.a11_));
}

::google::protobuf::Metadata Int64Matrix3x3::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Urn::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Urn>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Urn, _impl_._has_bits_);
};

Urn::Urn(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Urn_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.base.Urn)
}
PROTOBUF_NDEBUG_INLINE Urn::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::base::Urn& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        value_(arena, from.value_) {}

Urn::Urn(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Urn& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Urn_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Urn* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.base.Urn)
}
PROTOBUF_NDEBUG_INLINE Urn::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        value_(arena) {}

inline void Urn::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Urn::~Urn() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.base.Urn)
  SharedDtor(*this);
}
inline void Urn::SharedDtor(MessageLite& self) {
  Urn& this_ = static_cast<Urn&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.value_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Urn::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Urn(arena);
}
constexpr auto Urn::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Urn),
                                            alignof(Urn));
}
constexpr auto Urn::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Urn_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Urn::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Urn>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Urn::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Urn>(), &Urn::ByteSizeLong,
              &Urn::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Urn, _impl_._cached_size_),
          false,
      },
      &Urn::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Urn_class_data_ =
        Urn::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Urn::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Urn_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Urn_class_data_.tc_table);
  return Urn_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 46, 2>
Urn::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Urn, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Urn_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Urn>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Urn, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string value = 1;
    {PROTOBUF_FIELD_OFFSET(Urn, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\40\5\0\0\0\0\0\0"
    "sensoris.protobuf.types.base.Urn"
    "value"
  }},
};
PROTOBUF_NOINLINE void Urn::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.base.Urn)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.value_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Urn::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Urn& this_ = static_cast<const Urn&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Urn::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Urn& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.base.Urn)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string value = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_value().empty()) {
      const ::std::string& _s = this_._internal_value();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "sensoris.protobuf.types.base.Urn.value");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.base.Urn)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Urn::ByteSizeLong(const MessageLite& base) {
  const Urn& this_ = static_cast<const Urn&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Urn::ByteSizeLong() const {
  const Urn& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.base.Urn)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // string value = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_value().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_value());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Urn::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Urn*>(&to_msg);
  auto& from = static_cast<const Urn&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.base.Urn)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!from._internal_value().empty()) {
      _this->_internal_set_value(from._internal_value());
    } else {
      if (_this->_impl_.value_.IsDefault()) {
        _this->_internal_set_value("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Urn::CopyFrom(const Urn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.base.Urn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Urn::InternalSwap(Urn* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
}

::google::protobuf::Metadata Urn::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::_pbi::ExtensionIdentifier<
        ::google::protobuf::FieldOptions, ::_pbi::PrimitiveTypeTraits< ::int64_t >, 3, false>
        exponent(kExponentFieldNumber, ::int64_t{0});
// @@protoc_insertion_point(namespace_scope)
}  // namespace base
}  // namespace types
}  // namespace protobuf
}  // namespace sensoris
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto),
        ::_pbi::ExtensionSet::RegisterExtension(
            &::google::protobuf::FieldOptions::default_instance(), 50001, 3,
            false, false),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
