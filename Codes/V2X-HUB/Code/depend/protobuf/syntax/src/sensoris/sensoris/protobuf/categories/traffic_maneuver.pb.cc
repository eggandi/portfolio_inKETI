// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: sensoris/protobuf/categories/traffic_maneuver.proto
// Protobuf C++ Version: 6.31.1

#include "sensoris/protobuf/categories/traffic_maneuver.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace sensoris {
namespace protobuf {
namespace categories {
namespace trafficmaneuver {

inline constexpr Maneuver_TypeAndConfidence::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        confidence_{nullptr},
        type_{static_cast< ::sensoris::protobuf::categories::trafficmaneuver::Maneuver_TypeAndConfidence_Type >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Maneuver_TypeAndConfidence::Maneuver_TypeAndConfidence(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Maneuver_TypeAndConfidence_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Maneuver_TypeAndConfidenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Maneuver_TypeAndConfidenceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Maneuver_TypeAndConfidenceDefaultTypeInternal() {}
  union {
    Maneuver_TypeAndConfidence _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Maneuver_TypeAndConfidenceDefaultTypeInternal _Maneuver_TypeAndConfidence_default_instance_;

inline constexpr Maneuver::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        envelope_{nullptr},
        type_and_confidence_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Maneuver::Maneuver(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Maneuver_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ManeuverDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ManeuverDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ManeuverDefaultTypeInternal() {}
  union {
    Maneuver _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ManeuverDefaultTypeInternal _Maneuver_default_instance_;

inline constexpr Refueling::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        envelope_{nullptr},
        quantity_to_full_and_accuracy_{nullptr},
        type_{static_cast< ::sensoris::protobuf::categories::trafficmaneuver::Refueling_Type >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Refueling::Refueling(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Refueling_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RefuelingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RefuelingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RefuelingDefaultTypeInternal() {}
  union {
    Refueling _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RefuelingDefaultTypeInternal _Refueling_default_instance_;

inline constexpr Charging::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        envelope_{nullptr},
        voltage_and_accuracy_{nullptr},
        current_and_accuracy_{nullptr},
        type_{static_cast< ::sensoris::protobuf::categories::trafficmaneuver::Charging_Type >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Charging::Charging(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Charging_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ChargingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChargingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChargingDefaultTypeInternal() {}
  union {
    Charging _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChargingDefaultTypeInternal _Charging_default_instance_;

inline constexpr TrafficManeuverCategory::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        maneuver_{},
        charging_{},
        refueling_{},
        envelope_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR TrafficManeuverCategory::TrafficManeuverCategory(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TrafficManeuverCategory_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TrafficManeuverCategoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TrafficManeuverCategoryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TrafficManeuverCategoryDefaultTypeInternal() {}
  union {
    TrafficManeuverCategory _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TrafficManeuverCategoryDefaultTypeInternal _TrafficManeuverCategory_default_instance_;
}  // namespace trafficmaneuver
}  // namespace categories
}  // namespace protobuf
}  // namespace sensoris
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2ftraffic_5fmaneuver_2eproto[3];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_sensoris_2fprotobuf_2fcategories_2ftraffic_5fmaneuver_2eproto = nullptr;
const ::uint32_t
    TableStruct_sensoris_2fprotobuf_2fcategories_2ftraffic_5fmaneuver_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::trafficmaneuver::Maneuver_TypeAndConfidence, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::trafficmaneuver::Maneuver_TypeAndConfidence, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::trafficmaneuver::Maneuver_TypeAndConfidence, _impl_.confidence_),
        1,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::trafficmaneuver::Maneuver, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::trafficmaneuver::Maneuver, _impl_.envelope_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::trafficmaneuver::Maneuver, _impl_.type_and_confidence_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::trafficmaneuver::Charging, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::trafficmaneuver::Charging, _impl_.envelope_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::trafficmaneuver::Charging, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::trafficmaneuver::Charging, _impl_.voltage_and_accuracy_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::trafficmaneuver::Charging, _impl_.current_and_accuracy_),
        0,
        3,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::trafficmaneuver::Refueling, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::trafficmaneuver::Refueling, _impl_.envelope_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::trafficmaneuver::Refueling, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::trafficmaneuver::Refueling, _impl_.quantity_to_full_and_accuracy_),
        0,
        2,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory, _impl_.envelope_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory, _impl_.maneuver_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory, _impl_.charging_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory, _impl_.refueling_),
        0,
        ~0u,
        ~0u,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::sensoris::protobuf::categories::trafficmaneuver::Maneuver_TypeAndConfidence)},
        {7, sizeof(::sensoris::protobuf::categories::trafficmaneuver::Maneuver)},
        {14, sizeof(::sensoris::protobuf::categories::trafficmaneuver::Charging)},
        {25, sizeof(::sensoris::protobuf::categories::trafficmaneuver::Refueling)},
        {34, sizeof(::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::sensoris::protobuf::categories::trafficmaneuver::_Maneuver_TypeAndConfidence_default_instance_._instance,
    &::sensoris::protobuf::categories::trafficmaneuver::_Maneuver_default_instance_._instance,
    &::sensoris::protobuf::categories::trafficmaneuver::_Charging_default_instance_._instance,
    &::sensoris::protobuf::categories::trafficmaneuver::_Refueling_default_instance_._instance,
    &::sensoris::protobuf::categories::trafficmaneuver::_TrafficManeuverCategory_default_instance_._instance,
};
const char descriptor_table_protodef_sensoris_2fprotobuf_2fcategories_2ftraffic_5fmaneuver_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n3sensoris/protobuf/categories/traffic_m"
    "aneuver.proto\022,sensoris.protobuf.categor"
    "ies.trafficmaneuver\032\"sensoris/protobuf/t"
    "ypes/base.proto\"\361\004\n\010Maneuver\022=\n\010envelope"
    "\030\001 \001(\0132+.sensoris.protobuf.types.base.Ev"
    "entEnvelope\022e\n\023type_and_confidence\030\002 \001(\013"
    "2H.sensoris.protobuf.categories.trafficm"
    "aneuver.Maneuver.TypeAndConfidence\032\276\003\n\021T"
    "ypeAndConfidence\022[\n\004type\030\001 \001(\0162M.sensori"
    "s.protobuf.categories.trafficmaneuver.Ma"
    "neuver.TypeAndConfidence.Type\022<\n\nconfide"
    "nce\030\002 \001(\0132(.sensoris.protobuf.types.base"
    ".Confidence\"\215\002\n\004Type\022\020\n\014UNKNOWN_TYPE\020\000\022\013"
    "\n\007EVASIVE\020\001\022\017\n\013LANE_CHANGE\020\002\022\025\n\021LANE_CHA"
    "NGE_RIGHT\020\003\022\024\n\020LANE_CHANGE_LEFT\020\004\022\016\n\nOVE"
    "RTAKING\020\005\022\025\n\021INTERSECTION_STOP\020\006\022\013\n\007TURN"
    "ING\020\007\022\021\n\rTURNING_RIGHT\020\010\022\020\n\014TURNING_LEFT"
    "\020\t\022\027\n\023SHARP_TURNING_RIGHT\020\n\022\026\n\022SHARP_TUR"
    "NING_LEFT\020\013\022\020\n\014ACCELERATING\020\014\022\014\n\010BREAKIN"
    "G\020\r\"\264\003\n\010Charging\022=\n\010envelope\030\001 \001(\0132+.sen"
    "soris.protobuf.types.base.EventEnvelope\022"
    "I\n\004type\030\002 \001(\0162;.sensoris.protobuf.catego"
    "ries.trafficmaneuver.Charging.Type\022W\n\024vo"
    "ltage_and_accuracy\030\003 \001(\01323.sensoris.prot"
    "obuf.types.base.Int64ValueAndAccuracyB\004\210"
    "\265\030\000\022W\n\024current_and_accuracy\030\004 \001(\01323.sens"
    "oris.protobuf.types.base.Int64ValueAndAc"
    "curacyB\004\210\265\030\001\"l\n\004Type\022\020\n\014UNKNOWN_TYPE\020\000\022\016"
    "\n\nPORT_J1772\020\001\022\013\n\007CHADEMO\020\002\022\r\n\tSAE_COMBO"
    "\020\003\022\016\n\nTESLA_HPWC\020\004\022\026\n\022TESLA_SUPERCHARGER"
    "\020\005\"\206\003\n\tRefueling\022=\n\010envelope\030\001 \001(\0132+.sen"
    "soris.protobuf.types.base.EventEnvelope\022"
    "J\n\004type\030\002 \001(\0162<.sensoris.protobuf.catego"
    "ries.trafficmaneuver.Refueling.Type\022`\n\035q"
    "uantity_to_full_and_accuracy\030\003 \001(\01323.sen"
    "soris.protobuf.types.base.Int64ValueAndA"
    "ccuracyB\004\210\265\030\001\"\213\001\n\004Type\022\020\n\014UNKNOWN_TYPE\020\000"
    "\022\022\n\016PETROL_PREMIUM\020\001\022\020\n\014PETROL_SUPER\020\002\022\n"
    "\n\006DIESEL\020\003\022\007\n\003LPG\020\004\022\007\n\003CNG\020\005\022\016\n\nBIO_DIES"
    "EL\020\006\022\017\n\013BIO_ETHANOL\020\007\022\014\n\010HYDROGEN\020\010\"\273\002\n\027"
    "TrafficManeuverCategory\022@\n\010envelope\030\001 \001("
    "\0132..sensoris.protobuf.types.base.Categor"
    "yEnvelope\022H\n\010maneuver\030\002 \003(\01326.sensoris.p"
    "rotobuf.categories.trafficmaneuver.Maneu"
    "ver\022H\n\010charging\030\003 \003(\01326.sensoris.protobu"
    "f.categories.trafficmaneuver.Charging\022J\n"
    "\trefueling\030\004 \003(\01327.sensoris.protobuf.cat"
    "egories.trafficmaneuver.RefuelingB\206\001\n\'or"
    "g.sensoris.categories.trafficmaneuverB\037S"
    "ensorisTrafficManeuverCategoryP\001Z5sensor"
    "is.org/specification/categories/trafficm"
    "aneuver\370\001\001b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_sensoris_2fprotobuf_2fcategories_2ftraffic_5fmaneuver_2eproto_deps[1] = {
        &::descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
};
static ::absl::once_flag descriptor_table_sensoris_2fprotobuf_2fcategories_2ftraffic_5fmaneuver_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_sensoris_2fprotobuf_2fcategories_2ftraffic_5fmaneuver_2eproto = {
    false,
    false,
    2058,
    descriptor_table_protodef_sensoris_2fprotobuf_2fcategories_2ftraffic_5fmaneuver_2eproto,
    "sensoris/protobuf/categories/traffic_maneuver.proto",
    &descriptor_table_sensoris_2fprotobuf_2fcategories_2ftraffic_5fmaneuver_2eproto_once,
    descriptor_table_sensoris_2fprotobuf_2fcategories_2ftraffic_5fmaneuver_2eproto_deps,
    1,
    5,
    schemas,
    file_default_instances,
    TableStruct_sensoris_2fprotobuf_2fcategories_2ftraffic_5fmaneuver_2eproto::offsets,
    file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2ftraffic_5fmaneuver_2eproto,
    file_level_service_descriptors_sensoris_2fprotobuf_2fcategories_2ftraffic_5fmaneuver_2eproto,
};
namespace sensoris {
namespace protobuf {
namespace categories {
namespace trafficmaneuver {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Maneuver_TypeAndConfidence_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensoris_2fprotobuf_2fcategories_2ftraffic_5fmaneuver_2eproto);
  return file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2ftraffic_5fmaneuver_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t Maneuver_TypeAndConfidence_Type_internal_data_[] = {
    917504u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Charging_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensoris_2fprotobuf_2fcategories_2ftraffic_5fmaneuver_2eproto);
  return file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2ftraffic_5fmaneuver_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t Charging_Type_internal_data_[] = {
    393216u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Refueling_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensoris_2fprotobuf_2fcategories_2ftraffic_5fmaneuver_2eproto);
  return file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2ftraffic_5fmaneuver_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t Refueling_Type_internal_data_[] = {
    589824u, 0u, };
// ===================================================================

class Maneuver_TypeAndConfidence::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Maneuver_TypeAndConfidence>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Maneuver_TypeAndConfidence, _impl_._has_bits_);
};

void Maneuver_TypeAndConfidence::clear_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.confidence_ != nullptr) _impl_.confidence_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Maneuver_TypeAndConfidence::Maneuver_TypeAndConfidence(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Maneuver_TypeAndConfidence_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.trafficmaneuver.Maneuver.TypeAndConfidence)
}
PROTOBUF_NDEBUG_INLINE Maneuver_TypeAndConfidence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::categories::trafficmaneuver::Maneuver_TypeAndConfidence& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Maneuver_TypeAndConfidence::Maneuver_TypeAndConfidence(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Maneuver_TypeAndConfidence& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Maneuver_TypeAndConfidence_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Maneuver_TypeAndConfidence* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.confidence_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.confidence_)
                : nullptr;
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.trafficmaneuver.Maneuver.TypeAndConfidence)
}
PROTOBUF_NDEBUG_INLINE Maneuver_TypeAndConfidence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Maneuver_TypeAndConfidence::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, confidence_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, confidence_) +
               sizeof(Impl_::type_));
}
Maneuver_TypeAndConfidence::~Maneuver_TypeAndConfidence() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.trafficmaneuver.Maneuver.TypeAndConfidence)
  SharedDtor(*this);
}
inline void Maneuver_TypeAndConfidence::SharedDtor(MessageLite& self) {
  Maneuver_TypeAndConfidence& this_ = static_cast<Maneuver_TypeAndConfidence&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.confidence_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Maneuver_TypeAndConfidence::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Maneuver_TypeAndConfidence(arena);
}
constexpr auto Maneuver_TypeAndConfidence::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Maneuver_TypeAndConfidence),
                                            alignof(Maneuver_TypeAndConfidence));
}
constexpr auto Maneuver_TypeAndConfidence::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Maneuver_TypeAndConfidence_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Maneuver_TypeAndConfidence::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Maneuver_TypeAndConfidence>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Maneuver_TypeAndConfidence::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Maneuver_TypeAndConfidence>(), &Maneuver_TypeAndConfidence::ByteSizeLong,
              &Maneuver_TypeAndConfidence::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Maneuver_TypeAndConfidence, _impl_._cached_size_),
          false,
      },
      &Maneuver_TypeAndConfidence::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2ftraffic_5fmaneuver_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Maneuver_TypeAndConfidence_class_data_ =
        Maneuver_TypeAndConfidence::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Maneuver_TypeAndConfidence::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Maneuver_TypeAndConfidence_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Maneuver_TypeAndConfidence_class_data_.tc_table);
  return Maneuver_TypeAndConfidence_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
Maneuver_TypeAndConfidence::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Maneuver_TypeAndConfidence, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Maneuver_TypeAndConfidence_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::trafficmaneuver::Maneuver_TypeAndConfidence>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Maneuver_TypeAndConfidence, _impl_.confidence_)}},
    // .sensoris.protobuf.categories.trafficmaneuver.Maneuver.TypeAndConfidence.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Maneuver_TypeAndConfidence, _impl_.type_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(Maneuver_TypeAndConfidence, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.categories.trafficmaneuver.Maneuver.TypeAndConfidence.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(Maneuver_TypeAndConfidence, _impl_.type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    {PROTOBUF_FIELD_OFFSET(Maneuver_TypeAndConfidence, _impl_.confidence_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Confidence>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Maneuver_TypeAndConfidence::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.trafficmaneuver.Maneuver.TypeAndConfidence)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.confidence_ != nullptr);
    _impl_.confidence_->Clear();
  }
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Maneuver_TypeAndConfidence::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Maneuver_TypeAndConfidence& this_ = static_cast<const Maneuver_TypeAndConfidence&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Maneuver_TypeAndConfidence::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Maneuver_TypeAndConfidence& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.trafficmaneuver.Maneuver.TypeAndConfidence)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .sensoris.protobuf.categories.trafficmaneuver.Maneuver.TypeAndConfidence.Type type = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_type(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.Confidence confidence = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.confidence_, this_._impl_.confidence_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.trafficmaneuver.Maneuver.TypeAndConfidence)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Maneuver_TypeAndConfidence::ByteSizeLong(const MessageLite& base) {
  const Maneuver_TypeAndConfidence& this_ = static_cast<const Maneuver_TypeAndConfidence&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Maneuver_TypeAndConfidence::ByteSizeLong() const {
  const Maneuver_TypeAndConfidence& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.trafficmaneuver.Maneuver.TypeAndConfidence)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.confidence_);
    }
    // .sensoris.protobuf.categories.trafficmaneuver.Maneuver.TypeAndConfidence.Type type = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Maneuver_TypeAndConfidence::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Maneuver_TypeAndConfidence*>(&to_msg);
  auto& from = static_cast<const Maneuver_TypeAndConfidence&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.trafficmaneuver.Maneuver.TypeAndConfidence)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.confidence_ != nullptr);
      if (_this->_impl_.confidence_ == nullptr) {
        _this->_impl_.confidence_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.confidence_);
      } else {
        _this->_impl_.confidence_->MergeFrom(*from._impl_.confidence_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_type() != 0) {
        _this->_impl_.type_ = from._impl_.type_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Maneuver_TypeAndConfidence::CopyFrom(const Maneuver_TypeAndConfidence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.trafficmaneuver.Maneuver.TypeAndConfidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Maneuver_TypeAndConfidence::InternalSwap(Maneuver_TypeAndConfidence* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Maneuver_TypeAndConfidence, _impl_.type_)
      + sizeof(Maneuver_TypeAndConfidence::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(Maneuver_TypeAndConfidence, _impl_.confidence_)>(
          reinterpret_cast<char*>(&_impl_.confidence_),
          reinterpret_cast<char*>(&other->_impl_.confidence_));
}

::google::protobuf::Metadata Maneuver_TypeAndConfidence::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Maneuver::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Maneuver>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Maneuver, _impl_._has_bits_);
};

void Maneuver::clear_envelope() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.envelope_ != nullptr) _impl_.envelope_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Maneuver::Maneuver(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Maneuver_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.trafficmaneuver.Maneuver)
}
PROTOBUF_NDEBUG_INLINE Maneuver::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::categories::trafficmaneuver::Maneuver& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Maneuver::Maneuver(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Maneuver& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Maneuver_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Maneuver* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.envelope_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.envelope_)
                : nullptr;
  _impl_.type_and_confidence_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.type_and_confidence_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.trafficmaneuver.Maneuver)
}
PROTOBUF_NDEBUG_INLINE Maneuver::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Maneuver::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, envelope_),
           0,
           offsetof(Impl_, type_and_confidence_) -
               offsetof(Impl_, envelope_) +
               sizeof(Impl_::type_and_confidence_));
}
Maneuver::~Maneuver() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.trafficmaneuver.Maneuver)
  SharedDtor(*this);
}
inline void Maneuver::SharedDtor(MessageLite& self) {
  Maneuver& this_ = static_cast<Maneuver&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.envelope_;
  delete this_._impl_.type_and_confidence_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Maneuver::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Maneuver(arena);
}
constexpr auto Maneuver::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Maneuver),
                                            alignof(Maneuver));
}
constexpr auto Maneuver::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Maneuver_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Maneuver::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Maneuver>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Maneuver::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Maneuver>(), &Maneuver::ByteSizeLong,
              &Maneuver::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Maneuver, _impl_._cached_size_),
          false,
      },
      &Maneuver::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2ftraffic_5fmaneuver_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Maneuver_class_data_ =
        Maneuver::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Maneuver::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Maneuver_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Maneuver_class_data_.tc_table);
  return Maneuver_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
Maneuver::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Maneuver, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Maneuver_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::trafficmaneuver::Maneuver>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .sensoris.protobuf.categories.trafficmaneuver.Maneuver.TypeAndConfidence type_and_confidence = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Maneuver, _impl_.type_and_confidence_)}},
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Maneuver, _impl_.envelope_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    {PROTOBUF_FIELD_OFFSET(Maneuver, _impl_.envelope_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.categories.trafficmaneuver.Maneuver.TypeAndConfidence type_and_confidence = 2;
    {PROTOBUF_FIELD_OFFSET(Maneuver, _impl_.type_and_confidence_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::EventEnvelope>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::trafficmaneuver::Maneuver_TypeAndConfidence>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Maneuver::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.trafficmaneuver.Maneuver)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.envelope_ != nullptr);
      _impl_.envelope_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.type_and_confidence_ != nullptr);
      _impl_.type_and_confidence_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Maneuver::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Maneuver& this_ = static_cast<const Maneuver&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Maneuver::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Maneuver& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.trafficmaneuver.Maneuver)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.envelope_, this_._impl_.envelope_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.categories.trafficmaneuver.Maneuver.TypeAndConfidence type_and_confidence = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.type_and_confidence_, this_._impl_.type_and_confidence_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.trafficmaneuver.Maneuver)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Maneuver::ByteSizeLong(const MessageLite& base) {
  const Maneuver& this_ = static_cast<const Maneuver&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Maneuver::ByteSizeLong() const {
  const Maneuver& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.trafficmaneuver.Maneuver)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.envelope_);
    }
    // .sensoris.protobuf.categories.trafficmaneuver.Maneuver.TypeAndConfidence type_and_confidence = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_and_confidence_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Maneuver::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Maneuver*>(&to_msg);
  auto& from = static_cast<const Maneuver&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.trafficmaneuver.Maneuver)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.envelope_ != nullptr);
      if (_this->_impl_.envelope_ == nullptr) {
        _this->_impl_.envelope_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.envelope_);
      } else {
        _this->_impl_.envelope_->MergeFrom(*from._impl_.envelope_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.type_and_confidence_ != nullptr);
      if (_this->_impl_.type_and_confidence_ == nullptr) {
        _this->_impl_.type_and_confidence_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.type_and_confidence_);
      } else {
        _this->_impl_.type_and_confidence_->MergeFrom(*from._impl_.type_and_confidence_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Maneuver::CopyFrom(const Maneuver& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.trafficmaneuver.Maneuver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Maneuver::InternalSwap(Maneuver* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Maneuver, _impl_.type_and_confidence_)
      + sizeof(Maneuver::_impl_.type_and_confidence_)
      - PROTOBUF_FIELD_OFFSET(Maneuver, _impl_.envelope_)>(
          reinterpret_cast<char*>(&_impl_.envelope_),
          reinterpret_cast<char*>(&other->_impl_.envelope_));
}

::google::protobuf::Metadata Maneuver::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Charging::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Charging>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Charging, _impl_._has_bits_);
};

void Charging::clear_envelope() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.envelope_ != nullptr) _impl_.envelope_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Charging::clear_voltage_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.voltage_and_accuracy_ != nullptr) _impl_.voltage_and_accuracy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void Charging::clear_current_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.current_and_accuracy_ != nullptr) _impl_.current_and_accuracy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
Charging::Charging(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Charging_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.trafficmaneuver.Charging)
}
PROTOBUF_NDEBUG_INLINE Charging::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::categories::trafficmaneuver::Charging& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Charging::Charging(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Charging& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Charging_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Charging* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.envelope_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.envelope_)
                : nullptr;
  _impl_.voltage_and_accuracy_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.voltage_and_accuracy_)
                : nullptr;
  _impl_.current_and_accuracy_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.current_and_accuracy_)
                : nullptr;
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.trafficmaneuver.Charging)
}
PROTOBUF_NDEBUG_INLINE Charging::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Charging::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, envelope_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, envelope_) +
               sizeof(Impl_::type_));
}
Charging::~Charging() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.trafficmaneuver.Charging)
  SharedDtor(*this);
}
inline void Charging::SharedDtor(MessageLite& self) {
  Charging& this_ = static_cast<Charging&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.envelope_;
  delete this_._impl_.voltage_and_accuracy_;
  delete this_._impl_.current_and_accuracy_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Charging::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Charging(arena);
}
constexpr auto Charging::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Charging),
                                            alignof(Charging));
}
constexpr auto Charging::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Charging_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Charging::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Charging>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Charging::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Charging>(), &Charging::ByteSizeLong,
              &Charging::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Charging, _impl_._cached_size_),
          false,
      },
      &Charging::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2ftraffic_5fmaneuver_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Charging_class_data_ =
        Charging::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Charging::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Charging_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Charging_class_data_.tc_table);
  return Charging_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 3, 0, 2>
Charging::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Charging, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Charging_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::trafficmaneuver::Charging>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy current_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 1];
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 2, PROTOBUF_FIELD_OFFSET(Charging, _impl_.current_and_accuracy_)}},
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Charging, _impl_.envelope_)}},
    // .sensoris.protobuf.categories.trafficmaneuver.Charging.Type type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Charging, _impl_.type_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(Charging, _impl_.type_)}},
    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy voltage_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(Charging, _impl_.voltage_and_accuracy_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    {PROTOBUF_FIELD_OFFSET(Charging, _impl_.envelope_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.categories.trafficmaneuver.Charging.Type type = 2;
    {PROTOBUF_FIELD_OFFSET(Charging, _impl_.type_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy voltage_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];
    {PROTOBUF_FIELD_OFFSET(Charging, _impl_.voltage_and_accuracy_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy current_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 1];
    {PROTOBUF_FIELD_OFFSET(Charging, _impl_.current_and_accuracy_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::EventEnvelope>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64ValueAndAccuracy>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64ValueAndAccuracy>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Charging::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.trafficmaneuver.Charging)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.envelope_ != nullptr);
      _impl_.envelope_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.voltage_and_accuracy_ != nullptr);
      _impl_.voltage_and_accuracy_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.current_and_accuracy_ != nullptr);
      _impl_.current_and_accuracy_->Clear();
    }
  }
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Charging::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Charging& this_ = static_cast<const Charging&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Charging::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Charging& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.trafficmaneuver.Charging)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.envelope_, this_._impl_.envelope_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.categories.trafficmaneuver.Charging.Type type = 2;
  if ((cached_has_bits & 0x00000008u) != 0) {
    if (this_._internal_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_type(), target);
    }
  }

  // .sensoris.protobuf.types.base.Int64ValueAndAccuracy voltage_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.voltage_and_accuracy_, this_._impl_.voltage_and_accuracy_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.types.base.Int64ValueAndAccuracy current_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 1];
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.current_and_accuracy_, this_._impl_.current_and_accuracy_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.trafficmaneuver.Charging)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Charging::ByteSizeLong(const MessageLite& base) {
  const Charging& this_ = static_cast<const Charging&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Charging::ByteSizeLong() const {
  const Charging& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.trafficmaneuver.Charging)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.envelope_);
    }
    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy voltage_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.voltage_and_accuracy_);
    }
    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy current_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 1];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.current_and_accuracy_);
    }
    // .sensoris.protobuf.categories.trafficmaneuver.Charging.Type type = 2;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Charging::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Charging*>(&to_msg);
  auto& from = static_cast<const Charging&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.trafficmaneuver.Charging)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.envelope_ != nullptr);
      if (_this->_impl_.envelope_ == nullptr) {
        _this->_impl_.envelope_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.envelope_);
      } else {
        _this->_impl_.envelope_->MergeFrom(*from._impl_.envelope_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.voltage_and_accuracy_ != nullptr);
      if (_this->_impl_.voltage_and_accuracy_ == nullptr) {
        _this->_impl_.voltage_and_accuracy_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.voltage_and_accuracy_);
      } else {
        _this->_impl_.voltage_and_accuracy_->MergeFrom(*from._impl_.voltage_and_accuracy_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.current_and_accuracy_ != nullptr);
      if (_this->_impl_.current_and_accuracy_ == nullptr) {
        _this->_impl_.current_and_accuracy_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.current_and_accuracy_);
      } else {
        _this->_impl_.current_and_accuracy_->MergeFrom(*from._impl_.current_and_accuracy_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_type() != 0) {
        _this->_impl_.type_ = from._impl_.type_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Charging::CopyFrom(const Charging& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.trafficmaneuver.Charging)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Charging::InternalSwap(Charging* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Charging, _impl_.type_)
      + sizeof(Charging::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(Charging, _impl_.envelope_)>(
          reinterpret_cast<char*>(&_impl_.envelope_),
          reinterpret_cast<char*>(&other->_impl_.envelope_));
}

::google::protobuf::Metadata Charging::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Refueling::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Refueling>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Refueling, _impl_._has_bits_);
};

void Refueling::clear_envelope() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.envelope_ != nullptr) _impl_.envelope_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Refueling::clear_quantity_to_full_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.quantity_to_full_and_accuracy_ != nullptr) _impl_.quantity_to_full_and_accuracy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
Refueling::Refueling(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Refueling_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.trafficmaneuver.Refueling)
}
PROTOBUF_NDEBUG_INLINE Refueling::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::categories::trafficmaneuver::Refueling& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Refueling::Refueling(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Refueling& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Refueling_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Refueling* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.envelope_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.envelope_)
                : nullptr;
  _impl_.quantity_to_full_and_accuracy_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.quantity_to_full_and_accuracy_)
                : nullptr;
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.trafficmaneuver.Refueling)
}
PROTOBUF_NDEBUG_INLINE Refueling::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Refueling::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, envelope_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, envelope_) +
               sizeof(Impl_::type_));
}
Refueling::~Refueling() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.trafficmaneuver.Refueling)
  SharedDtor(*this);
}
inline void Refueling::SharedDtor(MessageLite& self) {
  Refueling& this_ = static_cast<Refueling&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.envelope_;
  delete this_._impl_.quantity_to_full_and_accuracy_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Refueling::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Refueling(arena);
}
constexpr auto Refueling::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Refueling),
                                            alignof(Refueling));
}
constexpr auto Refueling::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Refueling_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Refueling::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Refueling>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Refueling::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Refueling>(), &Refueling::ByteSizeLong,
              &Refueling::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Refueling, _impl_._cached_size_),
          false,
      },
      &Refueling::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2ftraffic_5fmaneuver_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Refueling_class_data_ =
        Refueling::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Refueling::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Refueling_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Refueling_class_data_.tc_table);
  return Refueling_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2>
Refueling::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Refueling, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Refueling_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::trafficmaneuver::Refueling>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Refueling, _impl_.envelope_)}},
    // .sensoris.protobuf.categories.trafficmaneuver.Refueling.Type type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Refueling, _impl_.type_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(Refueling, _impl_.type_)}},
    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy quantity_to_full_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 1];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(Refueling, _impl_.quantity_to_full_and_accuracy_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    {PROTOBUF_FIELD_OFFSET(Refueling, _impl_.envelope_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.categories.trafficmaneuver.Refueling.Type type = 2;
    {PROTOBUF_FIELD_OFFSET(Refueling, _impl_.type_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy quantity_to_full_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 1];
    {PROTOBUF_FIELD_OFFSET(Refueling, _impl_.quantity_to_full_and_accuracy_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::EventEnvelope>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64ValueAndAccuracy>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Refueling::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.trafficmaneuver.Refueling)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.envelope_ != nullptr);
      _impl_.envelope_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.quantity_to_full_and_accuracy_ != nullptr);
      _impl_.quantity_to_full_and_accuracy_->Clear();
    }
  }
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Refueling::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Refueling& this_ = static_cast<const Refueling&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Refueling::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Refueling& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.trafficmaneuver.Refueling)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.envelope_, this_._impl_.envelope_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.categories.trafficmaneuver.Refueling.Type type = 2;
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (this_._internal_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_type(), target);
    }
  }

  // .sensoris.protobuf.types.base.Int64ValueAndAccuracy quantity_to_full_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 1];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.quantity_to_full_and_accuracy_, this_._impl_.quantity_to_full_and_accuracy_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.trafficmaneuver.Refueling)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Refueling::ByteSizeLong(const MessageLite& base) {
  const Refueling& this_ = static_cast<const Refueling&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Refueling::ByteSizeLong() const {
  const Refueling& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.trafficmaneuver.Refueling)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.envelope_);
    }
    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy quantity_to_full_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 1];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.quantity_to_full_and_accuracy_);
    }
    // .sensoris.protobuf.categories.trafficmaneuver.Refueling.Type type = 2;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Refueling::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Refueling*>(&to_msg);
  auto& from = static_cast<const Refueling&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.trafficmaneuver.Refueling)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.envelope_ != nullptr);
      if (_this->_impl_.envelope_ == nullptr) {
        _this->_impl_.envelope_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.envelope_);
      } else {
        _this->_impl_.envelope_->MergeFrom(*from._impl_.envelope_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.quantity_to_full_and_accuracy_ != nullptr);
      if (_this->_impl_.quantity_to_full_and_accuracy_ == nullptr) {
        _this->_impl_.quantity_to_full_and_accuracy_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.quantity_to_full_and_accuracy_);
      } else {
        _this->_impl_.quantity_to_full_and_accuracy_->MergeFrom(*from._impl_.quantity_to_full_and_accuracy_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_type() != 0) {
        _this->_impl_.type_ = from._impl_.type_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Refueling::CopyFrom(const Refueling& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.trafficmaneuver.Refueling)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Refueling::InternalSwap(Refueling* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Refueling, _impl_.type_)
      + sizeof(Refueling::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(Refueling, _impl_.envelope_)>(
          reinterpret_cast<char*>(&_impl_.envelope_),
          reinterpret_cast<char*>(&other->_impl_.envelope_));
}

::google::protobuf::Metadata Refueling::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TrafficManeuverCategory::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TrafficManeuverCategory>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TrafficManeuverCategory, _impl_._has_bits_);
};

void TrafficManeuverCategory::clear_envelope() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.envelope_ != nullptr) _impl_.envelope_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
TrafficManeuverCategory::TrafficManeuverCategory(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TrafficManeuverCategory_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.trafficmaneuver.TrafficManeuverCategory)
}
PROTOBUF_NDEBUG_INLINE TrafficManeuverCategory::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        maneuver_{visibility, arena, from.maneuver_},
        charging_{visibility, arena, from.charging_},
        refueling_{visibility, arena, from.refueling_} {}

TrafficManeuverCategory::TrafficManeuverCategory(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TrafficManeuverCategory& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TrafficManeuverCategory_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TrafficManeuverCategory* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.envelope_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.envelope_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.trafficmaneuver.TrafficManeuverCategory)
}
PROTOBUF_NDEBUG_INLINE TrafficManeuverCategory::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        maneuver_{visibility, arena},
        charging_{visibility, arena},
        refueling_{visibility, arena} {}

inline void TrafficManeuverCategory::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.envelope_ = {};
}
TrafficManeuverCategory::~TrafficManeuverCategory() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.trafficmaneuver.TrafficManeuverCategory)
  SharedDtor(*this);
}
inline void TrafficManeuverCategory::SharedDtor(MessageLite& self) {
  TrafficManeuverCategory& this_ = static_cast<TrafficManeuverCategory&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.envelope_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TrafficManeuverCategory::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TrafficManeuverCategory(arena);
}
constexpr auto TrafficManeuverCategory::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TrafficManeuverCategory, _impl_.maneuver_) +
          decltype(TrafficManeuverCategory::_impl_.maneuver_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TrafficManeuverCategory, _impl_.charging_) +
          decltype(TrafficManeuverCategory::_impl_.charging_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TrafficManeuverCategory, _impl_.refueling_) +
          decltype(TrafficManeuverCategory::_impl_.refueling_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(TrafficManeuverCategory), alignof(TrafficManeuverCategory), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TrafficManeuverCategory::PlacementNew_,
                                 sizeof(TrafficManeuverCategory),
                                 alignof(TrafficManeuverCategory));
  }
}
constexpr auto TrafficManeuverCategory::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TrafficManeuverCategory_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TrafficManeuverCategory::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TrafficManeuverCategory>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TrafficManeuverCategory::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TrafficManeuverCategory>(), &TrafficManeuverCategory::ByteSizeLong,
              &TrafficManeuverCategory::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TrafficManeuverCategory, _impl_._cached_size_),
          false,
      },
      &TrafficManeuverCategory::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2ftraffic_5fmaneuver_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TrafficManeuverCategory_class_data_ =
        TrafficManeuverCategory::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TrafficManeuverCategory::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TrafficManeuverCategory_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TrafficManeuverCategory_class_data_.tc_table);
  return TrafficManeuverCategory_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 4, 0, 2>
TrafficManeuverCategory::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TrafficManeuverCategory, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TrafficManeuverCategory_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::trafficmaneuver::TrafficManeuverCategory>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .sensoris.protobuf.categories.trafficmaneuver.Refueling refueling = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 3, PROTOBUF_FIELD_OFFSET(TrafficManeuverCategory, _impl_.refueling_)}},
    // .sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TrafficManeuverCategory, _impl_.envelope_)}},
    // repeated .sensoris.protobuf.categories.trafficmaneuver.Maneuver maneuver = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(TrafficManeuverCategory, _impl_.maneuver_)}},
    // repeated .sensoris.protobuf.categories.trafficmaneuver.Charging charging = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(TrafficManeuverCategory, _impl_.charging_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
    {PROTOBUF_FIELD_OFFSET(TrafficManeuverCategory, _impl_.envelope_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .sensoris.protobuf.categories.trafficmaneuver.Maneuver maneuver = 2;
    {PROTOBUF_FIELD_OFFSET(TrafficManeuverCategory, _impl_.maneuver_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .sensoris.protobuf.categories.trafficmaneuver.Charging charging = 3;
    {PROTOBUF_FIELD_OFFSET(TrafficManeuverCategory, _impl_.charging_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .sensoris.protobuf.categories.trafficmaneuver.Refueling refueling = 4;
    {PROTOBUF_FIELD_OFFSET(TrafficManeuverCategory, _impl_.refueling_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::CategoryEnvelope>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::trafficmaneuver::Maneuver>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::trafficmaneuver::Charging>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::trafficmaneuver::Refueling>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void TrafficManeuverCategory::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.trafficmaneuver.TrafficManeuverCategory)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.maneuver_.Clear();
  _impl_.charging_.Clear();
  _impl_.refueling_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.envelope_ != nullptr);
    _impl_.envelope_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TrafficManeuverCategory::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TrafficManeuverCategory& this_ = static_cast<const TrafficManeuverCategory&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TrafficManeuverCategory::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TrafficManeuverCategory& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.trafficmaneuver.TrafficManeuverCategory)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.envelope_, this_._impl_.envelope_->GetCachedSize(), target,
        stream);
  }

  // repeated .sensoris.protobuf.categories.trafficmaneuver.Maneuver maneuver = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_maneuver_size());
       i < n; i++) {
    const auto& repfield = this_._internal_maneuver().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .sensoris.protobuf.categories.trafficmaneuver.Charging charging = 3;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_charging_size());
       i < n; i++) {
    const auto& repfield = this_._internal_charging().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .sensoris.protobuf.categories.trafficmaneuver.Refueling refueling = 4;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_refueling_size());
       i < n; i++) {
    const auto& repfield = this_._internal_refueling().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.trafficmaneuver.TrafficManeuverCategory)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TrafficManeuverCategory::ByteSizeLong(const MessageLite& base) {
  const TrafficManeuverCategory& this_ = static_cast<const TrafficManeuverCategory&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TrafficManeuverCategory::ByteSizeLong() const {
  const TrafficManeuverCategory& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.trafficmaneuver.TrafficManeuverCategory)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .sensoris.protobuf.categories.trafficmaneuver.Maneuver maneuver = 2;
    {
      total_size += 1UL * this_._internal_maneuver_size();
      for (const auto& msg : this_._internal_maneuver()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .sensoris.protobuf.categories.trafficmaneuver.Charging charging = 3;
    {
      total_size += 1UL * this_._internal_charging_size();
      for (const auto& msg : this_._internal_charging()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .sensoris.protobuf.categories.trafficmaneuver.Refueling refueling = 4;
    {
      total_size += 1UL * this_._internal_refueling_size();
      for (const auto& msg : this_._internal_refueling()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // .sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.envelope_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TrafficManeuverCategory::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TrafficManeuverCategory*>(&to_msg);
  auto& from = static_cast<const TrafficManeuverCategory&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.trafficmaneuver.TrafficManeuverCategory)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_maneuver()->MergeFrom(
      from._internal_maneuver());
  _this->_internal_mutable_charging()->MergeFrom(
      from._internal_charging());
  _this->_internal_mutable_refueling()->MergeFrom(
      from._internal_refueling());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.envelope_ != nullptr);
    if (_this->_impl_.envelope_ == nullptr) {
      _this->_impl_.envelope_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.envelope_);
    } else {
      _this->_impl_.envelope_->MergeFrom(*from._impl_.envelope_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TrafficManeuverCategory::CopyFrom(const TrafficManeuverCategory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.trafficmaneuver.TrafficManeuverCategory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TrafficManeuverCategory::InternalSwap(TrafficManeuverCategory* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.maneuver_.InternalSwap(&other->_impl_.maneuver_);
  _impl_.charging_.InternalSwap(&other->_impl_.charging_);
  _impl_.refueling_.InternalSwap(&other->_impl_.refueling_);
  swap(_impl_.envelope_, other->_impl_.envelope_);
}

::google::protobuf::Metadata TrafficManeuverCategory::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace trafficmaneuver
}  // namespace categories
}  // namespace protobuf
}  // namespace sensoris
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_sensoris_2fprotobuf_2fcategories_2ftraffic_5fmaneuver_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
