// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: sensoris/protobuf/types/map.proto
// Protobuf C++ Version: 6.31.1

#include "sensoris/protobuf/types/map.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace sensoris {
namespace protobuf {
namespace types {
namespace map {

inline constexpr MapTilingScheme::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        urn_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR MapTilingScheme::MapTilingScheme(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MapTilingScheme_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MapTilingSchemeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MapTilingSchemeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MapTilingSchemeDefaultTypeInternal() {}
  union {
    MapTilingScheme _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MapTilingSchemeDefaultTypeInternal _MapTilingScheme_default_instance_;

inline constexpr MapAttribute::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        urn_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR MapAttribute::MapAttribute(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MapAttribute_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MapAttributeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MapAttributeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MapAttributeDefaultTypeInternal() {}
  union {
    MapAttribute _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MapAttributeDefaultTypeInternal _MapAttribute_default_instance_;

inline constexpr MapTiles::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tiling_scheme_{nullptr},
        tile_ids_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR MapTiles::MapTiles(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MapTiles_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MapTilesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MapTilesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MapTilesDefaultTypeInternal() {}
  union {
    MapTiles _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MapTilesDefaultTypeInternal _MapTiles_default_instance_;

inline constexpr MapAttributeAndValue::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        attribute_{nullptr},
        values_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR MapAttributeAndValue::MapAttributeAndValue(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MapAttributeAndValue_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MapAttributeAndValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MapAttributeAndValueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MapAttributeAndValueDefaultTypeInternal() {}
  union {
    MapAttributeAndValue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MapAttributeAndValueDefaultTypeInternal _MapAttributeAndValue_default_instance_;
}  // namespace map
}  // namespace types
}  // namespace protobuf
}  // namespace sensoris
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_sensoris_2fprotobuf_2ftypes_2fmap_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_sensoris_2fprotobuf_2ftypes_2fmap_2eproto = nullptr;
const ::uint32_t
    TableStruct_sensoris_2fprotobuf_2ftypes_2fmap_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::map::MapTilingScheme, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::map::MapTilingScheme, _impl_.urn_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::map::MapTiles, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::map::MapTiles, _impl_.tiling_scheme_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::map::MapTiles, _impl_.tile_ids_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::map::MapAttribute, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::map::MapAttribute, _impl_.urn_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::map::MapAttributeAndValue, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::map::MapAttributeAndValue, _impl_.attribute_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::map::MapAttributeAndValue, _impl_.values_),
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::sensoris::protobuf::types::map::MapTilingScheme)},
        {5, sizeof(::sensoris::protobuf::types::map::MapTiles)},
        {12, sizeof(::sensoris::protobuf::types::map::MapAttribute)},
        {17, sizeof(::sensoris::protobuf::types::map::MapAttributeAndValue)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::sensoris::protobuf::types::map::_MapTilingScheme_default_instance_._instance,
    &::sensoris::protobuf::types::map::_MapTiles_default_instance_._instance,
    &::sensoris::protobuf::types::map::_MapAttribute_default_instance_._instance,
    &::sensoris::protobuf::types::map::_MapAttributeAndValue_default_instance_._instance,
};
const char descriptor_table_protodef_sensoris_2fprotobuf_2ftypes_2fmap_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n!sensoris/protobuf/types/map.proto\022\033sen"
    "soris.protobuf.types.map\032\036google/protobu"
    "f/wrappers.proto\032\"sensoris/protobuf/type"
    "s/base.proto\"A\n\017MapTilingScheme\022.\n\003urn\030\001"
    " \001(\0132!.sensoris.protobuf.types.base.Urn\""
    "\177\n\010MapTiles\022C\n\rtiling_scheme\030\001 \001(\0132,.sen"
    "soris.protobuf.types.map.MapTilingScheme"
    "\022.\n\010tile_ids\030\002 \001(\0132\034.google.protobuf.Str"
    "ingValue\">\n\014MapAttribute\022.\n\003urn\030\001 \001(\0132!."
    "sensoris.protobuf.types.base.Urn\"\202\001\n\024Map"
    "AttributeAndValue\022<\n\tattribute\030\001 \001(\0132).s"
    "ensoris.protobuf.types.map.MapAttribute\022"
    ",\n\006values\030\002 \001(\0132\034.google.protobuf.String"
    "ValueBY\n\026org.sensoris.types.mapB\020Sensori"
    "sMapTypesP\001Z(sensoris.org/specification/"
    "types/mapping\370\001\001b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_sensoris_2fprotobuf_2ftypes_2fmap_2eproto_deps[2] = {
        &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
        &::descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
};
static ::absl::once_flag descriptor_table_sensoris_2fprotobuf_2ftypes_2fmap_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_sensoris_2fprotobuf_2ftypes_2fmap_2eproto = {
    false,
    false,
    624,
    descriptor_table_protodef_sensoris_2fprotobuf_2ftypes_2fmap_2eproto,
    "sensoris/protobuf/types/map.proto",
    &descriptor_table_sensoris_2fprotobuf_2ftypes_2fmap_2eproto_once,
    descriptor_table_sensoris_2fprotobuf_2ftypes_2fmap_2eproto_deps,
    2,
    4,
    schemas,
    file_default_instances,
    TableStruct_sensoris_2fprotobuf_2ftypes_2fmap_2eproto::offsets,
    file_level_enum_descriptors_sensoris_2fprotobuf_2ftypes_2fmap_2eproto,
    file_level_service_descriptors_sensoris_2fprotobuf_2ftypes_2fmap_2eproto,
};
namespace sensoris {
namespace protobuf {
namespace types {
namespace map {
// ===================================================================

class MapTilingScheme::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MapTilingScheme>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MapTilingScheme, _impl_._has_bits_);
};

void MapTilingScheme::clear_urn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.urn_ != nullptr) _impl_.urn_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MapTilingScheme::MapTilingScheme(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MapTilingScheme_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.map.MapTilingScheme)
}
PROTOBUF_NDEBUG_INLINE MapTilingScheme::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::map::MapTilingScheme& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

MapTilingScheme::MapTilingScheme(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const MapTilingScheme& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MapTilingScheme_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MapTilingScheme* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.urn_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.urn_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.map.MapTilingScheme)
}
PROTOBUF_NDEBUG_INLINE MapTilingScheme::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void MapTilingScheme::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.urn_ = {};
}
MapTilingScheme::~MapTilingScheme() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.map.MapTilingScheme)
  SharedDtor(*this);
}
inline void MapTilingScheme::SharedDtor(MessageLite& self) {
  MapTilingScheme& this_ = static_cast<MapTilingScheme&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.urn_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MapTilingScheme::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MapTilingScheme(arena);
}
constexpr auto MapTilingScheme::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MapTilingScheme),
                                            alignof(MapTilingScheme));
}
constexpr auto MapTilingScheme::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MapTilingScheme_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MapTilingScheme::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MapTilingScheme>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MapTilingScheme::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MapTilingScheme>(), &MapTilingScheme::ByteSizeLong,
              &MapTilingScheme::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MapTilingScheme, _impl_._cached_size_),
          false,
      },
      &MapTilingScheme::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fmap_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MapTilingScheme_class_data_ =
        MapTilingScheme::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MapTilingScheme::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MapTilingScheme_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MapTilingScheme_class_data_.tc_table);
  return MapTilingScheme_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
MapTilingScheme::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MapTilingScheme, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    MapTilingScheme_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::map::MapTilingScheme>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .sensoris.protobuf.types.base.Urn urn = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(MapTilingScheme, _impl_.urn_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.Urn urn = 1;
    {PROTOBUF_FIELD_OFFSET(MapTilingScheme, _impl_.urn_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Urn>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void MapTilingScheme::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.map.MapTilingScheme)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.urn_ != nullptr);
    _impl_.urn_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MapTilingScheme::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MapTilingScheme& this_ = static_cast<const MapTilingScheme&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MapTilingScheme::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MapTilingScheme& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.map.MapTilingScheme)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.Urn urn = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.urn_, this_._impl_.urn_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.map.MapTilingScheme)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MapTilingScheme::ByteSizeLong(const MessageLite& base) {
  const MapTilingScheme& this_ = static_cast<const MapTilingScheme&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MapTilingScheme::ByteSizeLong() const {
  const MapTilingScheme& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.map.MapTilingScheme)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .sensoris.protobuf.types.base.Urn urn = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.urn_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MapTilingScheme::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MapTilingScheme*>(&to_msg);
  auto& from = static_cast<const MapTilingScheme&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.map.MapTilingScheme)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.urn_ != nullptr);
    if (_this->_impl_.urn_ == nullptr) {
      _this->_impl_.urn_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.urn_);
    } else {
      _this->_impl_.urn_->MergeFrom(*from._impl_.urn_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MapTilingScheme::CopyFrom(const MapTilingScheme& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.map.MapTilingScheme)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MapTilingScheme::InternalSwap(MapTilingScheme* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.urn_, other->_impl_.urn_);
}

::google::protobuf::Metadata MapTilingScheme::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MapTiles::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MapTiles>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MapTiles, _impl_._has_bits_);
};

void MapTiles::clear_tile_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tile_ids_ != nullptr) _impl_.tile_ids_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
MapTiles::MapTiles(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MapTiles_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.map.MapTiles)
}
PROTOBUF_NDEBUG_INLINE MapTiles::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::map::MapTiles& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

MapTiles::MapTiles(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const MapTiles& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MapTiles_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MapTiles* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.tiling_scheme_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.tiling_scheme_)
                : nullptr;
  _impl_.tile_ids_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.tile_ids_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.map.MapTiles)
}
PROTOBUF_NDEBUG_INLINE MapTiles::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void MapTiles::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tiling_scheme_),
           0,
           offsetof(Impl_, tile_ids_) -
               offsetof(Impl_, tiling_scheme_) +
               sizeof(Impl_::tile_ids_));
}
MapTiles::~MapTiles() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.map.MapTiles)
  SharedDtor(*this);
}
inline void MapTiles::SharedDtor(MessageLite& self) {
  MapTiles& this_ = static_cast<MapTiles&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.tiling_scheme_;
  delete this_._impl_.tile_ids_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MapTiles::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MapTiles(arena);
}
constexpr auto MapTiles::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MapTiles),
                                            alignof(MapTiles));
}
constexpr auto MapTiles::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MapTiles_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MapTiles::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MapTiles>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MapTiles::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MapTiles>(), &MapTiles::ByteSizeLong,
              &MapTiles::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MapTiles, _impl_._cached_size_),
          false,
      },
      &MapTiles::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fmap_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MapTiles_class_data_ =
        MapTiles::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MapTiles::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MapTiles_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MapTiles_class_data_.tc_table);
  return MapTiles_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
MapTiles::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MapTiles, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    MapTiles_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::map::MapTiles>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.StringValue tile_ids = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(MapTiles, _impl_.tile_ids_)}},
    // .sensoris.protobuf.types.map.MapTilingScheme tiling_scheme = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(MapTiles, _impl_.tiling_scheme_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.map.MapTilingScheme tiling_scheme = 1;
    {PROTOBUF_FIELD_OFFSET(MapTiles, _impl_.tiling_scheme_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.StringValue tile_ids = 2;
    {PROTOBUF_FIELD_OFFSET(MapTiles, _impl_.tile_ids_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::map::MapTilingScheme>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::StringValue>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void MapTiles::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.map.MapTiles)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.tiling_scheme_ != nullptr);
      _impl_.tiling_scheme_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.tile_ids_ != nullptr);
      _impl_.tile_ids_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MapTiles::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MapTiles& this_ = static_cast<const MapTiles&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MapTiles::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MapTiles& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.map.MapTiles)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.map.MapTilingScheme tiling_scheme = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.tiling_scheme_, this_._impl_.tiling_scheme_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.StringValue tile_ids = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.tile_ids_, this_._impl_.tile_ids_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.map.MapTiles)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MapTiles::ByteSizeLong(const MessageLite& base) {
  const MapTiles& this_ = static_cast<const MapTiles&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MapTiles::ByteSizeLong() const {
  const MapTiles& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.map.MapTiles)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .sensoris.protobuf.types.map.MapTilingScheme tiling_scheme = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.tiling_scheme_);
    }
    // .google.protobuf.StringValue tile_ids = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.tile_ids_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MapTiles::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MapTiles*>(&to_msg);
  auto& from = static_cast<const MapTiles&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.map.MapTiles)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.tiling_scheme_ != nullptr);
      if (_this->_impl_.tiling_scheme_ == nullptr) {
        _this->_impl_.tiling_scheme_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.tiling_scheme_);
      } else {
        _this->_impl_.tiling_scheme_->MergeFrom(*from._impl_.tiling_scheme_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.tile_ids_ != nullptr);
      if (_this->_impl_.tile_ids_ == nullptr) {
        _this->_impl_.tile_ids_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.tile_ids_);
      } else {
        _this->_impl_.tile_ids_->MergeFrom(*from._impl_.tile_ids_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MapTiles::CopyFrom(const MapTiles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.map.MapTiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MapTiles::InternalSwap(MapTiles* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MapTiles, _impl_.tile_ids_)
      + sizeof(MapTiles::_impl_.tile_ids_)
      - PROTOBUF_FIELD_OFFSET(MapTiles, _impl_.tiling_scheme_)>(
          reinterpret_cast<char*>(&_impl_.tiling_scheme_),
          reinterpret_cast<char*>(&other->_impl_.tiling_scheme_));
}

::google::protobuf::Metadata MapTiles::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MapAttribute::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MapAttribute>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MapAttribute, _impl_._has_bits_);
};

void MapAttribute::clear_urn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.urn_ != nullptr) _impl_.urn_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MapAttribute::MapAttribute(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MapAttribute_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.map.MapAttribute)
}
PROTOBUF_NDEBUG_INLINE MapAttribute::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::map::MapAttribute& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

MapAttribute::MapAttribute(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const MapAttribute& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MapAttribute_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MapAttribute* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.urn_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.urn_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.map.MapAttribute)
}
PROTOBUF_NDEBUG_INLINE MapAttribute::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void MapAttribute::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.urn_ = {};
}
MapAttribute::~MapAttribute() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.map.MapAttribute)
  SharedDtor(*this);
}
inline void MapAttribute::SharedDtor(MessageLite& self) {
  MapAttribute& this_ = static_cast<MapAttribute&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.urn_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MapAttribute::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MapAttribute(arena);
}
constexpr auto MapAttribute::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MapAttribute),
                                            alignof(MapAttribute));
}
constexpr auto MapAttribute::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MapAttribute_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MapAttribute::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MapAttribute>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MapAttribute::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MapAttribute>(), &MapAttribute::ByteSizeLong,
              &MapAttribute::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MapAttribute, _impl_._cached_size_),
          false,
      },
      &MapAttribute::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fmap_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MapAttribute_class_data_ =
        MapAttribute::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MapAttribute::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MapAttribute_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MapAttribute_class_data_.tc_table);
  return MapAttribute_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
MapAttribute::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MapAttribute, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    MapAttribute_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::map::MapAttribute>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .sensoris.protobuf.types.base.Urn urn = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(MapAttribute, _impl_.urn_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.Urn urn = 1;
    {PROTOBUF_FIELD_OFFSET(MapAttribute, _impl_.urn_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Urn>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void MapAttribute::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.map.MapAttribute)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.urn_ != nullptr);
    _impl_.urn_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MapAttribute::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MapAttribute& this_ = static_cast<const MapAttribute&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MapAttribute::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MapAttribute& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.map.MapAttribute)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.Urn urn = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.urn_, this_._impl_.urn_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.map.MapAttribute)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MapAttribute::ByteSizeLong(const MessageLite& base) {
  const MapAttribute& this_ = static_cast<const MapAttribute&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MapAttribute::ByteSizeLong() const {
  const MapAttribute& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.map.MapAttribute)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .sensoris.protobuf.types.base.Urn urn = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.urn_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MapAttribute::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MapAttribute*>(&to_msg);
  auto& from = static_cast<const MapAttribute&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.map.MapAttribute)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.urn_ != nullptr);
    if (_this->_impl_.urn_ == nullptr) {
      _this->_impl_.urn_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.urn_);
    } else {
      _this->_impl_.urn_->MergeFrom(*from._impl_.urn_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MapAttribute::CopyFrom(const MapAttribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.map.MapAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MapAttribute::InternalSwap(MapAttribute* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.urn_, other->_impl_.urn_);
}

::google::protobuf::Metadata MapAttribute::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MapAttributeAndValue::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MapAttributeAndValue>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MapAttributeAndValue, _impl_._has_bits_);
};

void MapAttributeAndValue::clear_values() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.values_ != nullptr) _impl_.values_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
MapAttributeAndValue::MapAttributeAndValue(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MapAttributeAndValue_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.map.MapAttributeAndValue)
}
PROTOBUF_NDEBUG_INLINE MapAttributeAndValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::map::MapAttributeAndValue& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

MapAttributeAndValue::MapAttributeAndValue(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const MapAttributeAndValue& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MapAttributeAndValue_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MapAttributeAndValue* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.attribute_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.attribute_)
                : nullptr;
  _impl_.values_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.values_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.map.MapAttributeAndValue)
}
PROTOBUF_NDEBUG_INLINE MapAttributeAndValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void MapAttributeAndValue::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, attribute_),
           0,
           offsetof(Impl_, values_) -
               offsetof(Impl_, attribute_) +
               sizeof(Impl_::values_));
}
MapAttributeAndValue::~MapAttributeAndValue() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.map.MapAttributeAndValue)
  SharedDtor(*this);
}
inline void MapAttributeAndValue::SharedDtor(MessageLite& self) {
  MapAttributeAndValue& this_ = static_cast<MapAttributeAndValue&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.attribute_;
  delete this_._impl_.values_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MapAttributeAndValue::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MapAttributeAndValue(arena);
}
constexpr auto MapAttributeAndValue::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MapAttributeAndValue),
                                            alignof(MapAttributeAndValue));
}
constexpr auto MapAttributeAndValue::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MapAttributeAndValue_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MapAttributeAndValue::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MapAttributeAndValue>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MapAttributeAndValue::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MapAttributeAndValue>(), &MapAttributeAndValue::ByteSizeLong,
              &MapAttributeAndValue::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MapAttributeAndValue, _impl_._cached_size_),
          false,
      },
      &MapAttributeAndValue::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fmap_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MapAttributeAndValue_class_data_ =
        MapAttributeAndValue::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MapAttributeAndValue::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MapAttributeAndValue_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MapAttributeAndValue_class_data_.tc_table);
  return MapAttributeAndValue_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
MapAttributeAndValue::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MapAttributeAndValue, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    MapAttributeAndValue_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::map::MapAttributeAndValue>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.StringValue values = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(MapAttributeAndValue, _impl_.values_)}},
    // .sensoris.protobuf.types.map.MapAttribute attribute = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(MapAttributeAndValue, _impl_.attribute_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.map.MapAttribute attribute = 1;
    {PROTOBUF_FIELD_OFFSET(MapAttributeAndValue, _impl_.attribute_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.StringValue values = 2;
    {PROTOBUF_FIELD_OFFSET(MapAttributeAndValue, _impl_.values_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::map::MapAttribute>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::StringValue>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void MapAttributeAndValue::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.map.MapAttributeAndValue)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.attribute_ != nullptr);
      _impl_.attribute_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.values_ != nullptr);
      _impl_.values_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MapAttributeAndValue::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MapAttributeAndValue& this_ = static_cast<const MapAttributeAndValue&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MapAttributeAndValue::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MapAttributeAndValue& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.map.MapAttributeAndValue)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.map.MapAttribute attribute = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.attribute_, this_._impl_.attribute_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.StringValue values = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.values_, this_._impl_.values_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.map.MapAttributeAndValue)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MapAttributeAndValue::ByteSizeLong(const MessageLite& base) {
  const MapAttributeAndValue& this_ = static_cast<const MapAttributeAndValue&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MapAttributeAndValue::ByteSizeLong() const {
  const MapAttributeAndValue& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.map.MapAttributeAndValue)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .sensoris.protobuf.types.map.MapAttribute attribute = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.attribute_);
    }
    // .google.protobuf.StringValue values = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.values_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MapAttributeAndValue::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MapAttributeAndValue*>(&to_msg);
  auto& from = static_cast<const MapAttributeAndValue&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.map.MapAttributeAndValue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.attribute_ != nullptr);
      if (_this->_impl_.attribute_ == nullptr) {
        _this->_impl_.attribute_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.attribute_);
      } else {
        _this->_impl_.attribute_->MergeFrom(*from._impl_.attribute_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.values_ != nullptr);
      if (_this->_impl_.values_ == nullptr) {
        _this->_impl_.values_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.values_);
      } else {
        _this->_impl_.values_->MergeFrom(*from._impl_.values_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MapAttributeAndValue::CopyFrom(const MapAttributeAndValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.map.MapAttributeAndValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MapAttributeAndValue::InternalSwap(MapAttributeAndValue* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MapAttributeAndValue, _impl_.values_)
      + sizeof(MapAttributeAndValue::_impl_.values_)
      - PROTOBUF_FIELD_OFFSET(MapAttributeAndValue, _impl_.attribute_)>(
          reinterpret_cast<char*>(&_impl_.attribute_),
          reinterpret_cast<char*>(&other->_impl_.attribute_));
}

::google::protobuf::Metadata MapAttributeAndValue::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace map
}  // namespace types
}  // namespace protobuf
}  // namespace sensoris
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_sensoris_2fprotobuf_2ftypes_2fmap_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
