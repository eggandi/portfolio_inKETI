// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: sensoris/protobuf/categories/object_detection.proto
// Protobuf C++ Version: 6.31.1

#ifndef sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto_2epb_2eh
#define sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/any.pb.h"
#include "google/protobuf/wrappers.pb.h"
#include "sensoris/protobuf/types/base.pb.h"
#include "sensoris/protobuf/types/spatial.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto;
}  // extern "C"
namespace sensoris {
namespace protobuf {
namespace categories {
namespace objectdetection {
enum MovableObject_TypeAndConfidence_Type : int;
extern const uint32_t MovableObject_TypeAndConfidence_Type_internal_data_[];
enum StaticObject_SurfaceColorAndConfidence_Type : int;
extern const uint32_t StaticObject_SurfaceColorAndConfidence_Type_internal_data_[];
enum StaticObject_SurfaceMaterialAndConfidence_Type : int;
extern const uint32_t StaticObject_SurfaceMaterialAndConfidence_Type_internal_data_[];
enum StaticObject_SurfaceTypeAndConfidence_Type : int;
extern const uint32_t StaticObject_SurfaceTypeAndConfidence_Type_internal_data_[];
enum StaticObject_TypeAndConfidence_Type : int;
extern const uint32_t StaticObject_TypeAndConfidence_Type_internal_data_[];
class MovableObject;
struct MovableObjectDefaultTypeInternal;
extern MovableObjectDefaultTypeInternal _MovableObject_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MovableObject_class_data_;
class MovableObject_TypeAndConfidence;
struct MovableObject_TypeAndConfidenceDefaultTypeInternal;
extern MovableObject_TypeAndConfidenceDefaultTypeInternal _MovableObject_TypeAndConfidence_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MovableObject_TypeAndConfidence_class_data_;
class ObjectDetectionCategory;
struct ObjectDetectionCategoryDefaultTypeInternal;
extern ObjectDetectionCategoryDefaultTypeInternal _ObjectDetectionCategory_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ObjectDetectionCategory_class_data_;
class StaticObject;
struct StaticObjectDefaultTypeInternal;
extern StaticObjectDefaultTypeInternal _StaticObject_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull StaticObject_class_data_;
class StaticObject_ConeAndAccuracy;
struct StaticObject_ConeAndAccuracyDefaultTypeInternal;
extern StaticObject_ConeAndAccuracyDefaultTypeInternal _StaticObject_ConeAndAccuracy_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull StaticObject_ConeAndAccuracy_class_data_;
class StaticObject_SurfaceColorAndConfidence;
struct StaticObject_SurfaceColorAndConfidenceDefaultTypeInternal;
extern StaticObject_SurfaceColorAndConfidenceDefaultTypeInternal _StaticObject_SurfaceColorAndConfidence_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull StaticObject_SurfaceColorAndConfidence_class_data_;
class StaticObject_SurfaceMaterialAndConfidence;
struct StaticObject_SurfaceMaterialAndConfidenceDefaultTypeInternal;
extern StaticObject_SurfaceMaterialAndConfidenceDefaultTypeInternal _StaticObject_SurfaceMaterialAndConfidence_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull StaticObject_SurfaceMaterialAndConfidence_class_data_;
class StaticObject_SurfaceTypeAndConfidence;
struct StaticObject_SurfaceTypeAndConfidenceDefaultTypeInternal;
extern StaticObject_SurfaceTypeAndConfidenceDefaultTypeInternal _StaticObject_SurfaceTypeAndConfidence_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull StaticObject_SurfaceTypeAndConfidence_class_data_;
class StaticObject_TypeAndConfidence;
struct StaticObject_TypeAndConfidenceDefaultTypeInternal;
extern StaticObject_TypeAndConfidenceDefaultTypeInternal _StaticObject_TypeAndConfidence_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull StaticObject_TypeAndConfidence_class_data_;
}  // namespace objectdetection
}  // namespace categories
}  // namespace protobuf
}  // namespace sensoris
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence_Type_internal_data_>
    internal::EnumTraitsImpl::value<::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence_Type>;
template <>
internal::EnumTraitsT<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence_Type_internal_data_>
    internal::EnumTraitsImpl::value<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence_Type>;
template <>
internal::EnumTraitsT<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence_Type_internal_data_>
    internal::EnumTraitsImpl::value<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence_Type>;
template <>
internal::EnumTraitsT<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence_Type_internal_data_>
    internal::EnumTraitsImpl::value<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence_Type>;
template <>
internal::EnumTraitsT<::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence_Type_internal_data_>
    internal::EnumTraitsImpl::value<::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence_Type>;
}  // namespace protobuf
}  // namespace google

namespace sensoris {
namespace protobuf {
namespace categories {
namespace objectdetection {
enum MovableObject_TypeAndConfidence_Type : int {
  MovableObject_TypeAndConfidence_Type_UNKNOWN_TYPE = 0,
  MovableObject_TypeAndConfidence_Type_VEHICLE = 1,
  MovableObject_TypeAndConfidence_Type_VEHICLE_PASSENGER_CAR = 2,
  MovableObject_TypeAndConfidence_Type_VEHICLE_TRUCK = 3,
  MovableObject_TypeAndConfidence_Type_VEHICLE_BUS = 4,
  MovableObject_TypeAndConfidence_Type_VEHICLE_TRAM = 5,
  MovableObject_TypeAndConfidence_Type_VEHICLE_TRAILER = 6,
  MovableObject_TypeAndConfidence_Type_TWO_WHEELER = 7,
  MovableObject_TypeAndConfidence_Type_TWO_WHEELER_MOTORCYCLE = 8,
  MovableObject_TypeAndConfidence_Type_TWO_WHEELER_BICYCLE = 9,
  MovableObject_TypeAndConfidence_Type_PERSON = 10,
  MovableObject_TypeAndConfidence_Type_ANIMAL = 11,
  MovableObject_TypeAndConfidence_Type_MovableObject_TypeAndConfidence_Type_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  MovableObject_TypeAndConfidence_Type_MovableObject_TypeAndConfidence_Type_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t MovableObject_TypeAndConfidence_Type_internal_data_[];
inline constexpr MovableObject_TypeAndConfidence_Type MovableObject_TypeAndConfidence_Type_Type_MIN =
    static_cast<MovableObject_TypeAndConfidence_Type>(0);
inline constexpr MovableObject_TypeAndConfidence_Type MovableObject_TypeAndConfidence_Type_Type_MAX =
    static_cast<MovableObject_TypeAndConfidence_Type>(11);
inline bool MovableObject_TypeAndConfidence_Type_IsValid(int value) {
  return 0 <= value && value <= 11;
}
inline constexpr int MovableObject_TypeAndConfidence_Type_Type_ARRAYSIZE = 11 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL MovableObject_TypeAndConfidence_Type_descriptor();
template <typename T>
const ::std::string& MovableObject_TypeAndConfidence_Type_Name(T value) {
  static_assert(::std::is_same<T, MovableObject_TypeAndConfidence_Type>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to Type_Name().");
  return MovableObject_TypeAndConfidence_Type_Name(static_cast<MovableObject_TypeAndConfidence_Type>(value));
}
template <>
inline const ::std::string& MovableObject_TypeAndConfidence_Type_Name(MovableObject_TypeAndConfidence_Type value) {
  return ::google::protobuf::internal::NameOfDenseEnum<MovableObject_TypeAndConfidence_Type_descriptor, 0, 11>(
      static_cast<int>(value));
}
inline bool MovableObject_TypeAndConfidence_Type_Parse(
    ::absl::string_view name, MovableObject_TypeAndConfidence_Type* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<MovableObject_TypeAndConfidence_Type>(MovableObject_TypeAndConfidence_Type_descriptor(), name,
                                           value);
}
enum StaticObject_TypeAndConfidence_Type : int {
  StaticObject_TypeAndConfidence_Type_UNKNOWN_TYPE = 0,
  StaticObject_TypeAndConfidence_Type_BRIDGE = 1,
  StaticObject_TypeAndConfidence_Type_TUNNEL = 2,
  StaticObject_TypeAndConfidence_Type_POLE = 3,
  StaticObject_TypeAndConfidence_Type_POLE_LIGHT = 4,
  StaticObject_TypeAndConfidence_Type_POLE_REFLECTOR = 5,
  StaticObject_TypeAndConfidence_Type_POLE_DELINEATOR = 6,
  StaticObject_TypeAndConfidence_Type_POLE_GANTRY = 7,
  StaticObject_TypeAndConfidence_Type_POLE_SIGN = 8,
  StaticObject_TypeAndConfidence_Type_POLE_GUARD_RAIL = 9,
  StaticObject_TypeAndConfidence_Type_BAR = 10,
  StaticObject_TypeAndConfidence_Type_TREE = 11,
  StaticObject_TypeAndConfidence_Type_BOLLARD = 12,
  StaticObject_TypeAndConfidence_Type_CONE = 13,
  StaticObject_TypeAndConfidence_Type_BARREL = 14,
  StaticObject_TypeAndConfidence_Type_WALL = 15,
  StaticObject_TypeAndConfidence_Type_TRAFFIC_ISLAND = 16,
  StaticObject_TypeAndConfidence_Type_SPEED_BUMP = 17,
  StaticObject_TypeAndConfidence_Type_POT_HOLE = 18,
  StaticObject_TypeAndConfidence_Type_MANHOLE_COVER = 19,
  StaticObject_TypeAndConfidence_Type_MANHOLE_COVER_CLOSED = 20,
  StaticObject_TypeAndConfidence_Type_MANHOLE_COVER_OPEN = 21,
  StaticObject_TypeAndConfidence_Type_SIGN_BRIDGE = 22,
  StaticObject_TypeAndConfidence_Type_TRAFFIC_LIGHT_BODY = 23,
  StaticObject_TypeAndConfidence_Type_BARRIER_PARKING_LOT = 24,
  StaticObject_TypeAndConfidence_Type_SURFACE_RAISED = 25,
  StaticObject_TypeAndConfidence_Type_TRAFFIC_ENFORCEMENT_CAMERA = 26,
  StaticObject_TypeAndConfidence_Type_TRAFFIC_ENFORCEMENT_CAMERA_FIXED = 27,
  StaticObject_TypeAndConfidence_Type_TRAFFIC_ENFORCEMENT_CAMERA_MOBILE = 28,
  StaticObject_TypeAndConfidence_Type_StaticObject_TypeAndConfidence_Type_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  StaticObject_TypeAndConfidence_Type_StaticObject_TypeAndConfidence_Type_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t StaticObject_TypeAndConfidence_Type_internal_data_[];
inline constexpr StaticObject_TypeAndConfidence_Type StaticObject_TypeAndConfidence_Type_Type_MIN =
    static_cast<StaticObject_TypeAndConfidence_Type>(0);
inline constexpr StaticObject_TypeAndConfidence_Type StaticObject_TypeAndConfidence_Type_Type_MAX =
    static_cast<StaticObject_TypeAndConfidence_Type>(28);
inline bool StaticObject_TypeAndConfidence_Type_IsValid(int value) {
  return 0 <= value && value <= 28;
}
inline constexpr int StaticObject_TypeAndConfidence_Type_Type_ARRAYSIZE = 28 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL StaticObject_TypeAndConfidence_Type_descriptor();
template <typename T>
const ::std::string& StaticObject_TypeAndConfidence_Type_Name(T value) {
  static_assert(::std::is_same<T, StaticObject_TypeAndConfidence_Type>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to Type_Name().");
  return StaticObject_TypeAndConfidence_Type_Name(static_cast<StaticObject_TypeAndConfidence_Type>(value));
}
template <>
inline const ::std::string& StaticObject_TypeAndConfidence_Type_Name(StaticObject_TypeAndConfidence_Type value) {
  return ::google::protobuf::internal::NameOfDenseEnum<StaticObject_TypeAndConfidence_Type_descriptor, 0, 28>(
      static_cast<int>(value));
}
inline bool StaticObject_TypeAndConfidence_Type_Parse(
    ::absl::string_view name, StaticObject_TypeAndConfidence_Type* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<StaticObject_TypeAndConfidence_Type>(StaticObject_TypeAndConfidence_Type_descriptor(), name,
                                           value);
}
enum StaticObject_SurfaceTypeAndConfidence_Type : int {
  StaticObject_SurfaceTypeAndConfidence_Type_UNKNOWN_TYPE = 0,
  StaticObject_SurfaceTypeAndConfidence_Type_FLAT = 1,
  StaticObject_SurfaceTypeAndConfidence_Type_ROUGH = 2,
  StaticObject_SurfaceTypeAndConfidence_Type_StaticObject_SurfaceTypeAndConfidence_Type_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  StaticObject_SurfaceTypeAndConfidence_Type_StaticObject_SurfaceTypeAndConfidence_Type_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t StaticObject_SurfaceTypeAndConfidence_Type_internal_data_[];
inline constexpr StaticObject_SurfaceTypeAndConfidence_Type StaticObject_SurfaceTypeAndConfidence_Type_Type_MIN =
    static_cast<StaticObject_SurfaceTypeAndConfidence_Type>(0);
inline constexpr StaticObject_SurfaceTypeAndConfidence_Type StaticObject_SurfaceTypeAndConfidence_Type_Type_MAX =
    static_cast<StaticObject_SurfaceTypeAndConfidence_Type>(2);
inline bool StaticObject_SurfaceTypeAndConfidence_Type_IsValid(int value) {
  return 0 <= value && value <= 2;
}
inline constexpr int StaticObject_SurfaceTypeAndConfidence_Type_Type_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL StaticObject_SurfaceTypeAndConfidence_Type_descriptor();
template <typename T>
const ::std::string& StaticObject_SurfaceTypeAndConfidence_Type_Name(T value) {
  static_assert(::std::is_same<T, StaticObject_SurfaceTypeAndConfidence_Type>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to Type_Name().");
  return StaticObject_SurfaceTypeAndConfidence_Type_Name(static_cast<StaticObject_SurfaceTypeAndConfidence_Type>(value));
}
template <>
inline const ::std::string& StaticObject_SurfaceTypeAndConfidence_Type_Name(StaticObject_SurfaceTypeAndConfidence_Type value) {
  return ::google::protobuf::internal::NameOfDenseEnum<StaticObject_SurfaceTypeAndConfidence_Type_descriptor, 0, 2>(
      static_cast<int>(value));
}
inline bool StaticObject_SurfaceTypeAndConfidence_Type_Parse(
    ::absl::string_view name, StaticObject_SurfaceTypeAndConfidence_Type* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<StaticObject_SurfaceTypeAndConfidence_Type>(StaticObject_SurfaceTypeAndConfidence_Type_descriptor(), name,
                                           value);
}
enum StaticObject_SurfaceMaterialAndConfidence_Type : int {
  StaticObject_SurfaceMaterialAndConfidence_Type_UNKNOWN_TYPE = 0,
  StaticObject_SurfaceMaterialAndConfidence_Type_METAL = 1,
  StaticObject_SurfaceMaterialAndConfidence_Type_CONCRETE = 2,
  StaticObject_SurfaceMaterialAndConfidence_Type_STONE = 3,
  StaticObject_SurfaceMaterialAndConfidence_Type_WOOD = 4,
  StaticObject_SurfaceMaterialAndConfidence_Type_PLASTIC = 5,
  StaticObject_SurfaceMaterialAndConfidence_Type_ASPHALT = 6,
  StaticObject_SurfaceMaterialAndConfidence_Type_ORGANIC = 7,
  StaticObject_SurfaceMaterialAndConfidence_Type_StaticObject_SurfaceMaterialAndConfidence_Type_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  StaticObject_SurfaceMaterialAndConfidence_Type_StaticObject_SurfaceMaterialAndConfidence_Type_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t StaticObject_SurfaceMaterialAndConfidence_Type_internal_data_[];
inline constexpr StaticObject_SurfaceMaterialAndConfidence_Type StaticObject_SurfaceMaterialAndConfidence_Type_Type_MIN =
    static_cast<StaticObject_SurfaceMaterialAndConfidence_Type>(0);
inline constexpr StaticObject_SurfaceMaterialAndConfidence_Type StaticObject_SurfaceMaterialAndConfidence_Type_Type_MAX =
    static_cast<StaticObject_SurfaceMaterialAndConfidence_Type>(7);
inline bool StaticObject_SurfaceMaterialAndConfidence_Type_IsValid(int value) {
  return 0 <= value && value <= 7;
}
inline constexpr int StaticObject_SurfaceMaterialAndConfidence_Type_Type_ARRAYSIZE = 7 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL StaticObject_SurfaceMaterialAndConfidence_Type_descriptor();
template <typename T>
const ::std::string& StaticObject_SurfaceMaterialAndConfidence_Type_Name(T value) {
  static_assert(::std::is_same<T, StaticObject_SurfaceMaterialAndConfidence_Type>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to Type_Name().");
  return StaticObject_SurfaceMaterialAndConfidence_Type_Name(static_cast<StaticObject_SurfaceMaterialAndConfidence_Type>(value));
}
template <>
inline const ::std::string& StaticObject_SurfaceMaterialAndConfidence_Type_Name(StaticObject_SurfaceMaterialAndConfidence_Type value) {
  return ::google::protobuf::internal::NameOfDenseEnum<StaticObject_SurfaceMaterialAndConfidence_Type_descriptor, 0, 7>(
      static_cast<int>(value));
}
inline bool StaticObject_SurfaceMaterialAndConfidence_Type_Parse(
    ::absl::string_view name, StaticObject_SurfaceMaterialAndConfidence_Type* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<StaticObject_SurfaceMaterialAndConfidence_Type>(StaticObject_SurfaceMaterialAndConfidence_Type_descriptor(), name,
                                           value);
}
enum StaticObject_SurfaceColorAndConfidence_Type : int {
  StaticObject_SurfaceColorAndConfidence_Type_UNKOWN_TYPE = 0,
  StaticObject_SurfaceColorAndConfidence_Type_OTHER = 1,
  StaticObject_SurfaceColorAndConfidence_Type_WHITE = 2,
  StaticObject_SurfaceColorAndConfidence_Type_GRAY = 3,
  StaticObject_SurfaceColorAndConfidence_Type_GRAY_LIGHT = 4,
  StaticObject_SurfaceColorAndConfidence_Type_GRAY_DARK = 5,
  StaticObject_SurfaceColorAndConfidence_Type_BLACK = 6,
  StaticObject_SurfaceColorAndConfidence_Type_RED = 7,
  StaticObject_SurfaceColorAndConfidence_Type_GREEN = 8,
  StaticObject_SurfaceColorAndConfidence_Type_BLUE = 9,
  StaticObject_SurfaceColorAndConfidence_Type_YELLOW = 10,
  StaticObject_SurfaceColorAndConfidence_Type_ORANGE = 11,
  StaticObject_SurfaceColorAndConfidence_Type_StaticObject_SurfaceColorAndConfidence_Type_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  StaticObject_SurfaceColorAndConfidence_Type_StaticObject_SurfaceColorAndConfidence_Type_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t StaticObject_SurfaceColorAndConfidence_Type_internal_data_[];
inline constexpr StaticObject_SurfaceColorAndConfidence_Type StaticObject_SurfaceColorAndConfidence_Type_Type_MIN =
    static_cast<StaticObject_SurfaceColorAndConfidence_Type>(0);
inline constexpr StaticObject_SurfaceColorAndConfidence_Type StaticObject_SurfaceColorAndConfidence_Type_Type_MAX =
    static_cast<StaticObject_SurfaceColorAndConfidence_Type>(11);
inline bool StaticObject_SurfaceColorAndConfidence_Type_IsValid(int value) {
  return 0 <= value && value <= 11;
}
inline constexpr int StaticObject_SurfaceColorAndConfidence_Type_Type_ARRAYSIZE = 11 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL StaticObject_SurfaceColorAndConfidence_Type_descriptor();
template <typename T>
const ::std::string& StaticObject_SurfaceColorAndConfidence_Type_Name(T value) {
  static_assert(::std::is_same<T, StaticObject_SurfaceColorAndConfidence_Type>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to Type_Name().");
  return StaticObject_SurfaceColorAndConfidence_Type_Name(static_cast<StaticObject_SurfaceColorAndConfidence_Type>(value));
}
template <>
inline const ::std::string& StaticObject_SurfaceColorAndConfidence_Type_Name(StaticObject_SurfaceColorAndConfidence_Type value) {
  return ::google::protobuf::internal::NameOfDenseEnum<StaticObject_SurfaceColorAndConfidence_Type_descriptor, 0, 11>(
      static_cast<int>(value));
}
inline bool StaticObject_SurfaceColorAndConfidence_Type_Parse(
    ::absl::string_view name, StaticObject_SurfaceColorAndConfidence_Type* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<StaticObject_SurfaceColorAndConfidence_Type>(StaticObject_SurfaceColorAndConfidence_Type_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class StaticObject_TypeAndConfidence final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence) */ {
 public:
  inline StaticObject_TypeAndConfidence() : StaticObject_TypeAndConfidence(nullptr) {}
  ~StaticObject_TypeAndConfidence() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StaticObject_TypeAndConfidence* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StaticObject_TypeAndConfidence));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StaticObject_TypeAndConfidence(::google::protobuf::internal::ConstantInitialized);

  inline StaticObject_TypeAndConfidence(const StaticObject_TypeAndConfidence& from) : StaticObject_TypeAndConfidence(nullptr, from) {}
  inline StaticObject_TypeAndConfidence(StaticObject_TypeAndConfidence&& from) noexcept
      : StaticObject_TypeAndConfidence(nullptr, ::std::move(from)) {}
  inline StaticObject_TypeAndConfidence& operator=(const StaticObject_TypeAndConfidence& from) {
    CopyFrom(from);
    return *this;
  }
  inline StaticObject_TypeAndConfidence& operator=(StaticObject_TypeAndConfidence&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StaticObject_TypeAndConfidence& default_instance() {
    return *reinterpret_cast<const StaticObject_TypeAndConfidence*>(
        &_StaticObject_TypeAndConfidence_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(StaticObject_TypeAndConfidence& a, StaticObject_TypeAndConfidence& b) { a.Swap(&b); }
  inline void Swap(StaticObject_TypeAndConfidence* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StaticObject_TypeAndConfidence* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StaticObject_TypeAndConfidence* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StaticObject_TypeAndConfidence>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StaticObject_TypeAndConfidence& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StaticObject_TypeAndConfidence& from) { StaticObject_TypeAndConfidence::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StaticObject_TypeAndConfidence* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence"; }

 protected:
  explicit StaticObject_TypeAndConfidence(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  StaticObject_TypeAndConfidence(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const StaticObject_TypeAndConfidence& from);
  StaticObject_TypeAndConfidence(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, StaticObject_TypeAndConfidence&& from) noexcept
      : StaticObject_TypeAndConfidence(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Type = StaticObject_TypeAndConfidence_Type;
  static constexpr Type UNKNOWN_TYPE = StaticObject_TypeAndConfidence_Type_UNKNOWN_TYPE;
  static constexpr Type BRIDGE = StaticObject_TypeAndConfidence_Type_BRIDGE;
  static constexpr Type TUNNEL = StaticObject_TypeAndConfidence_Type_TUNNEL;
  static constexpr Type POLE = StaticObject_TypeAndConfidence_Type_POLE;
  static constexpr Type POLE_LIGHT = StaticObject_TypeAndConfidence_Type_POLE_LIGHT;
  static constexpr Type POLE_REFLECTOR = StaticObject_TypeAndConfidence_Type_POLE_REFLECTOR;
  static constexpr Type POLE_DELINEATOR = StaticObject_TypeAndConfidence_Type_POLE_DELINEATOR;
  static constexpr Type POLE_GANTRY = StaticObject_TypeAndConfidence_Type_POLE_GANTRY;
  static constexpr Type POLE_SIGN = StaticObject_TypeAndConfidence_Type_POLE_SIGN;
  static constexpr Type POLE_GUARD_RAIL = StaticObject_TypeAndConfidence_Type_POLE_GUARD_RAIL;
  static constexpr Type BAR = StaticObject_TypeAndConfidence_Type_BAR;
  static constexpr Type TREE = StaticObject_TypeAndConfidence_Type_TREE;
  static constexpr Type BOLLARD = StaticObject_TypeAndConfidence_Type_BOLLARD;
  static constexpr Type CONE = StaticObject_TypeAndConfidence_Type_CONE;
  static constexpr Type BARREL = StaticObject_TypeAndConfidence_Type_BARREL;
  static constexpr Type WALL = StaticObject_TypeAndConfidence_Type_WALL;
  static constexpr Type TRAFFIC_ISLAND = StaticObject_TypeAndConfidence_Type_TRAFFIC_ISLAND;
  static constexpr Type SPEED_BUMP = StaticObject_TypeAndConfidence_Type_SPEED_BUMP;
  static constexpr Type POT_HOLE = StaticObject_TypeAndConfidence_Type_POT_HOLE;
  static constexpr Type MANHOLE_COVER = StaticObject_TypeAndConfidence_Type_MANHOLE_COVER;
  static constexpr Type MANHOLE_COVER_CLOSED = StaticObject_TypeAndConfidence_Type_MANHOLE_COVER_CLOSED;
  static constexpr Type MANHOLE_COVER_OPEN = StaticObject_TypeAndConfidence_Type_MANHOLE_COVER_OPEN;
  static constexpr Type SIGN_BRIDGE = StaticObject_TypeAndConfidence_Type_SIGN_BRIDGE;
  static constexpr Type TRAFFIC_LIGHT_BODY = StaticObject_TypeAndConfidence_Type_TRAFFIC_LIGHT_BODY;
  static constexpr Type BARRIER_PARKING_LOT = StaticObject_TypeAndConfidence_Type_BARRIER_PARKING_LOT;
  static constexpr Type SURFACE_RAISED = StaticObject_TypeAndConfidence_Type_SURFACE_RAISED;
  static constexpr Type TRAFFIC_ENFORCEMENT_CAMERA = StaticObject_TypeAndConfidence_Type_TRAFFIC_ENFORCEMENT_CAMERA;
  static constexpr Type TRAFFIC_ENFORCEMENT_CAMERA_FIXED = StaticObject_TypeAndConfidence_Type_TRAFFIC_ENFORCEMENT_CAMERA_FIXED;
  static constexpr Type TRAFFIC_ENFORCEMENT_CAMERA_MOBILE = StaticObject_TypeAndConfidence_Type_TRAFFIC_ENFORCEMENT_CAMERA_MOBILE;
  static inline bool Type_IsValid(int value) {
    return StaticObject_TypeAndConfidence_Type_IsValid(value);
  }
  static constexpr Type Type_MIN = StaticObject_TypeAndConfidence_Type_Type_MIN;
  static constexpr Type Type_MAX = StaticObject_TypeAndConfidence_Type_Type_MAX;
  static constexpr int Type_ARRAYSIZE = StaticObject_TypeAndConfidence_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Type_descriptor() {
    return StaticObject_TypeAndConfidence_Type_descriptor();
  }
  template <typename T>
  static inline const ::std::string& Type_Name(T value) {
    return StaticObject_TypeAndConfidence_Type_Name(value);
  }
  static inline bool Type_Parse(
      ::absl::string_view name, Type* PROTOBUF_NONNULL value) {
    return StaticObject_TypeAndConfidence_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kConfidenceFieldNumber = 2,
    kTypeFieldNumber = 1,
  };
  // .sensoris.protobuf.types.base.Confidence confidence = 2;
  bool has_confidence() const;
  void clear_confidence() ;
  const ::sensoris::protobuf::types::base::Confidence& confidence() const;
  [[nodiscard]] ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE release_confidence();
  ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NONNULL mutable_confidence();
  void set_allocated_confidence(::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_confidence(::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE value);
  ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE unsafe_arena_release_confidence();

  private:
  const ::sensoris::protobuf::types::base::Confidence& _internal_confidence() const;
  ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NONNULL _internal_mutable_confidence();

  public:
  // .sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence.Type type = 1;
  void clear_type() ;
  ::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence_Type type() const;
  void set_type(::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence_Type value);

  private:
  ::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence_Type _internal_type() const;
  void _internal_set_type(::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence_Type value);

  public:
  // @@protoc_insertion_point(class_scope:sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const StaticObject_TypeAndConfidence& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE confidence_;
    int type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull StaticObject_TypeAndConfidence_class_data_;
// -------------------------------------------------------------------

class StaticObject_SurfaceTypeAndConfidence final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence) */ {
 public:
  inline StaticObject_SurfaceTypeAndConfidence() : StaticObject_SurfaceTypeAndConfidence(nullptr) {}
  ~StaticObject_SurfaceTypeAndConfidence() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StaticObject_SurfaceTypeAndConfidence* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StaticObject_SurfaceTypeAndConfidence));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StaticObject_SurfaceTypeAndConfidence(::google::protobuf::internal::ConstantInitialized);

  inline StaticObject_SurfaceTypeAndConfidence(const StaticObject_SurfaceTypeAndConfidence& from) : StaticObject_SurfaceTypeAndConfidence(nullptr, from) {}
  inline StaticObject_SurfaceTypeAndConfidence(StaticObject_SurfaceTypeAndConfidence&& from) noexcept
      : StaticObject_SurfaceTypeAndConfidence(nullptr, ::std::move(from)) {}
  inline StaticObject_SurfaceTypeAndConfidence& operator=(const StaticObject_SurfaceTypeAndConfidence& from) {
    CopyFrom(from);
    return *this;
  }
  inline StaticObject_SurfaceTypeAndConfidence& operator=(StaticObject_SurfaceTypeAndConfidence&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StaticObject_SurfaceTypeAndConfidence& default_instance() {
    return *reinterpret_cast<const StaticObject_SurfaceTypeAndConfidence*>(
        &_StaticObject_SurfaceTypeAndConfidence_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(StaticObject_SurfaceTypeAndConfidence& a, StaticObject_SurfaceTypeAndConfidence& b) { a.Swap(&b); }
  inline void Swap(StaticObject_SurfaceTypeAndConfidence* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StaticObject_SurfaceTypeAndConfidence* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StaticObject_SurfaceTypeAndConfidence* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StaticObject_SurfaceTypeAndConfidence>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StaticObject_SurfaceTypeAndConfidence& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StaticObject_SurfaceTypeAndConfidence& from) { StaticObject_SurfaceTypeAndConfidence::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StaticObject_SurfaceTypeAndConfidence* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence"; }

 protected:
  explicit StaticObject_SurfaceTypeAndConfidence(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  StaticObject_SurfaceTypeAndConfidence(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const StaticObject_SurfaceTypeAndConfidence& from);
  StaticObject_SurfaceTypeAndConfidence(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, StaticObject_SurfaceTypeAndConfidence&& from) noexcept
      : StaticObject_SurfaceTypeAndConfidence(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Type = StaticObject_SurfaceTypeAndConfidence_Type;
  static constexpr Type UNKNOWN_TYPE = StaticObject_SurfaceTypeAndConfidence_Type_UNKNOWN_TYPE;
  static constexpr Type FLAT = StaticObject_SurfaceTypeAndConfidence_Type_FLAT;
  static constexpr Type ROUGH = StaticObject_SurfaceTypeAndConfidence_Type_ROUGH;
  static inline bool Type_IsValid(int value) {
    return StaticObject_SurfaceTypeAndConfidence_Type_IsValid(value);
  }
  static constexpr Type Type_MIN = StaticObject_SurfaceTypeAndConfidence_Type_Type_MIN;
  static constexpr Type Type_MAX = StaticObject_SurfaceTypeAndConfidence_Type_Type_MAX;
  static constexpr int Type_ARRAYSIZE = StaticObject_SurfaceTypeAndConfidence_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Type_descriptor() {
    return StaticObject_SurfaceTypeAndConfidence_Type_descriptor();
  }
  template <typename T>
  static inline const ::std::string& Type_Name(T value) {
    return StaticObject_SurfaceTypeAndConfidence_Type_Name(value);
  }
  static inline bool Type_Parse(
      ::absl::string_view name, Type* PROTOBUF_NONNULL value) {
    return StaticObject_SurfaceTypeAndConfidence_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kConfidenceFieldNumber = 2,
    kTypeFieldNumber = 1,
  };
  // .sensoris.protobuf.types.base.Confidence confidence = 2;
  bool has_confidence() const;
  void clear_confidence() ;
  const ::sensoris::protobuf::types::base::Confidence& confidence() const;
  [[nodiscard]] ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE release_confidence();
  ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NONNULL mutable_confidence();
  void set_allocated_confidence(::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_confidence(::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE value);
  ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE unsafe_arena_release_confidence();

  private:
  const ::sensoris::protobuf::types::base::Confidence& _internal_confidence() const;
  ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NONNULL _internal_mutable_confidence();

  public:
  // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Type type = 1;
  void clear_type() ;
  ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence_Type type() const;
  void set_type(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence_Type value);

  private:
  ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence_Type _internal_type() const;
  void _internal_set_type(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence_Type value);

  public:
  // @@protoc_insertion_point(class_scope:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const StaticObject_SurfaceTypeAndConfidence& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE confidence_;
    int type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull StaticObject_SurfaceTypeAndConfidence_class_data_;
// -------------------------------------------------------------------

class StaticObject_SurfaceColorAndConfidence final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence) */ {
 public:
  inline StaticObject_SurfaceColorAndConfidence() : StaticObject_SurfaceColorAndConfidence(nullptr) {}
  ~StaticObject_SurfaceColorAndConfidence() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StaticObject_SurfaceColorAndConfidence* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StaticObject_SurfaceColorAndConfidence));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StaticObject_SurfaceColorAndConfidence(::google::protobuf::internal::ConstantInitialized);

  inline StaticObject_SurfaceColorAndConfidence(const StaticObject_SurfaceColorAndConfidence& from) : StaticObject_SurfaceColorAndConfidence(nullptr, from) {}
  inline StaticObject_SurfaceColorAndConfidence(StaticObject_SurfaceColorAndConfidence&& from) noexcept
      : StaticObject_SurfaceColorAndConfidence(nullptr, ::std::move(from)) {}
  inline StaticObject_SurfaceColorAndConfidence& operator=(const StaticObject_SurfaceColorAndConfidence& from) {
    CopyFrom(from);
    return *this;
  }
  inline StaticObject_SurfaceColorAndConfidence& operator=(StaticObject_SurfaceColorAndConfidence&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StaticObject_SurfaceColorAndConfidence& default_instance() {
    return *reinterpret_cast<const StaticObject_SurfaceColorAndConfidence*>(
        &_StaticObject_SurfaceColorAndConfidence_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(StaticObject_SurfaceColorAndConfidence& a, StaticObject_SurfaceColorAndConfidence& b) { a.Swap(&b); }
  inline void Swap(StaticObject_SurfaceColorAndConfidence* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StaticObject_SurfaceColorAndConfidence* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StaticObject_SurfaceColorAndConfidence* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StaticObject_SurfaceColorAndConfidence>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StaticObject_SurfaceColorAndConfidence& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StaticObject_SurfaceColorAndConfidence& from) { StaticObject_SurfaceColorAndConfidence::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StaticObject_SurfaceColorAndConfidence* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence"; }

 protected:
  explicit StaticObject_SurfaceColorAndConfidence(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  StaticObject_SurfaceColorAndConfidence(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const StaticObject_SurfaceColorAndConfidence& from);
  StaticObject_SurfaceColorAndConfidence(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, StaticObject_SurfaceColorAndConfidence&& from) noexcept
      : StaticObject_SurfaceColorAndConfidence(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Type = StaticObject_SurfaceColorAndConfidence_Type;
  static constexpr Type UNKOWN_TYPE = StaticObject_SurfaceColorAndConfidence_Type_UNKOWN_TYPE;
  static constexpr Type OTHER = StaticObject_SurfaceColorAndConfidence_Type_OTHER;
  static constexpr Type WHITE = StaticObject_SurfaceColorAndConfidence_Type_WHITE;
  static constexpr Type GRAY = StaticObject_SurfaceColorAndConfidence_Type_GRAY;
  static constexpr Type GRAY_LIGHT = StaticObject_SurfaceColorAndConfidence_Type_GRAY_LIGHT;
  static constexpr Type GRAY_DARK = StaticObject_SurfaceColorAndConfidence_Type_GRAY_DARK;
  static constexpr Type BLACK = StaticObject_SurfaceColorAndConfidence_Type_BLACK;
  static constexpr Type RED = StaticObject_SurfaceColorAndConfidence_Type_RED;
  static constexpr Type GREEN = StaticObject_SurfaceColorAndConfidence_Type_GREEN;
  static constexpr Type BLUE = StaticObject_SurfaceColorAndConfidence_Type_BLUE;
  static constexpr Type YELLOW = StaticObject_SurfaceColorAndConfidence_Type_YELLOW;
  static constexpr Type ORANGE = StaticObject_SurfaceColorAndConfidence_Type_ORANGE;
  static inline bool Type_IsValid(int value) {
    return StaticObject_SurfaceColorAndConfidence_Type_IsValid(value);
  }
  static constexpr Type Type_MIN = StaticObject_SurfaceColorAndConfidence_Type_Type_MIN;
  static constexpr Type Type_MAX = StaticObject_SurfaceColorAndConfidence_Type_Type_MAX;
  static constexpr int Type_ARRAYSIZE = StaticObject_SurfaceColorAndConfidence_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Type_descriptor() {
    return StaticObject_SurfaceColorAndConfidence_Type_descriptor();
  }
  template <typename T>
  static inline const ::std::string& Type_Name(T value) {
    return StaticObject_SurfaceColorAndConfidence_Type_Name(value);
  }
  static inline bool Type_Parse(
      ::absl::string_view name, Type* PROTOBUF_NONNULL value) {
    return StaticObject_SurfaceColorAndConfidence_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kConfidenceFieldNumber = 2,
    kTypeFieldNumber = 1,
  };
  // .sensoris.protobuf.types.base.Confidence confidence = 2;
  bool has_confidence() const;
  void clear_confidence() ;
  const ::sensoris::protobuf::types::base::Confidence& confidence() const;
  [[nodiscard]] ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE release_confidence();
  ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NONNULL mutable_confidence();
  void set_allocated_confidence(::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_confidence(::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE value);
  ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE unsafe_arena_release_confidence();

  private:
  const ::sensoris::protobuf::types::base::Confidence& _internal_confidence() const;
  ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NONNULL _internal_mutable_confidence();

  public:
  // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Type type = 1;
  void clear_type() ;
  ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence_Type type() const;
  void set_type(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence_Type value);

  private:
  ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence_Type _internal_type() const;
  void _internal_set_type(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence_Type value);

  public:
  // @@protoc_insertion_point(class_scope:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const StaticObject_SurfaceColorAndConfidence& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE confidence_;
    int type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull StaticObject_SurfaceColorAndConfidence_class_data_;
// -------------------------------------------------------------------

class MovableObject_TypeAndConfidence final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence) */ {
 public:
  inline MovableObject_TypeAndConfidence() : MovableObject_TypeAndConfidence(nullptr) {}
  ~MovableObject_TypeAndConfidence() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MovableObject_TypeAndConfidence* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MovableObject_TypeAndConfidence));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MovableObject_TypeAndConfidence(::google::protobuf::internal::ConstantInitialized);

  inline MovableObject_TypeAndConfidence(const MovableObject_TypeAndConfidence& from) : MovableObject_TypeAndConfidence(nullptr, from) {}
  inline MovableObject_TypeAndConfidence(MovableObject_TypeAndConfidence&& from) noexcept
      : MovableObject_TypeAndConfidence(nullptr, ::std::move(from)) {}
  inline MovableObject_TypeAndConfidence& operator=(const MovableObject_TypeAndConfidence& from) {
    CopyFrom(from);
    return *this;
  }
  inline MovableObject_TypeAndConfidence& operator=(MovableObject_TypeAndConfidence&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MovableObject_TypeAndConfidence& default_instance() {
    return *reinterpret_cast<const MovableObject_TypeAndConfidence*>(
        &_MovableObject_TypeAndConfidence_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(MovableObject_TypeAndConfidence& a, MovableObject_TypeAndConfidence& b) { a.Swap(&b); }
  inline void Swap(MovableObject_TypeAndConfidence* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MovableObject_TypeAndConfidence* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MovableObject_TypeAndConfidence* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MovableObject_TypeAndConfidence>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MovableObject_TypeAndConfidence& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MovableObject_TypeAndConfidence& from) { MovableObject_TypeAndConfidence::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MovableObject_TypeAndConfidence* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence"; }

 protected:
  explicit MovableObject_TypeAndConfidence(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MovableObject_TypeAndConfidence(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MovableObject_TypeAndConfidence& from);
  MovableObject_TypeAndConfidence(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MovableObject_TypeAndConfidence&& from) noexcept
      : MovableObject_TypeAndConfidence(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Type = MovableObject_TypeAndConfidence_Type;
  static constexpr Type UNKNOWN_TYPE = MovableObject_TypeAndConfidence_Type_UNKNOWN_TYPE;
  static constexpr Type VEHICLE = MovableObject_TypeAndConfidence_Type_VEHICLE;
  static constexpr Type VEHICLE_PASSENGER_CAR = MovableObject_TypeAndConfidence_Type_VEHICLE_PASSENGER_CAR;
  static constexpr Type VEHICLE_TRUCK = MovableObject_TypeAndConfidence_Type_VEHICLE_TRUCK;
  static constexpr Type VEHICLE_BUS = MovableObject_TypeAndConfidence_Type_VEHICLE_BUS;
  static constexpr Type VEHICLE_TRAM = MovableObject_TypeAndConfidence_Type_VEHICLE_TRAM;
  static constexpr Type VEHICLE_TRAILER = MovableObject_TypeAndConfidence_Type_VEHICLE_TRAILER;
  static constexpr Type TWO_WHEELER = MovableObject_TypeAndConfidence_Type_TWO_WHEELER;
  static constexpr Type TWO_WHEELER_MOTORCYCLE = MovableObject_TypeAndConfidence_Type_TWO_WHEELER_MOTORCYCLE;
  static constexpr Type TWO_WHEELER_BICYCLE = MovableObject_TypeAndConfidence_Type_TWO_WHEELER_BICYCLE;
  static constexpr Type PERSON = MovableObject_TypeAndConfidence_Type_PERSON;
  static constexpr Type ANIMAL = MovableObject_TypeAndConfidence_Type_ANIMAL;
  static inline bool Type_IsValid(int value) {
    return MovableObject_TypeAndConfidence_Type_IsValid(value);
  }
  static constexpr Type Type_MIN = MovableObject_TypeAndConfidence_Type_Type_MIN;
  static constexpr Type Type_MAX = MovableObject_TypeAndConfidence_Type_Type_MAX;
  static constexpr int Type_ARRAYSIZE = MovableObject_TypeAndConfidence_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Type_descriptor() {
    return MovableObject_TypeAndConfidence_Type_descriptor();
  }
  template <typename T>
  static inline const ::std::string& Type_Name(T value) {
    return MovableObject_TypeAndConfidence_Type_Name(value);
  }
  static inline bool Type_Parse(
      ::absl::string_view name, Type* PROTOBUF_NONNULL value) {
    return MovableObject_TypeAndConfidence_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kConfidenceFieldNumber = 2,
    kTypeFieldNumber = 1,
  };
  // .sensoris.protobuf.types.base.Confidence confidence = 2;
  bool has_confidence() const;
  void clear_confidence() ;
  const ::sensoris::protobuf::types::base::Confidence& confidence() const;
  [[nodiscard]] ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE release_confidence();
  ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NONNULL mutable_confidence();
  void set_allocated_confidence(::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_confidence(::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE value);
  ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE unsafe_arena_release_confidence();

  private:
  const ::sensoris::protobuf::types::base::Confidence& _internal_confidence() const;
  ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NONNULL _internal_mutable_confidence();

  public:
  // .sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence.Type type = 1;
  void clear_type() ;
  ::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence_Type type() const;
  void set_type(::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence_Type value);

  private:
  ::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence_Type _internal_type() const;
  void _internal_set_type(::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence_Type value);

  public:
  // @@protoc_insertion_point(class_scope:sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MovableObject_TypeAndConfidence& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE confidence_;
    int type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MovableObject_TypeAndConfidence_class_data_;
// -------------------------------------------------------------------

class StaticObject_SurfaceMaterialAndConfidence final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence) */ {
 public:
  inline StaticObject_SurfaceMaterialAndConfidence() : StaticObject_SurfaceMaterialAndConfidence(nullptr) {}
  ~StaticObject_SurfaceMaterialAndConfidence() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StaticObject_SurfaceMaterialAndConfidence* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StaticObject_SurfaceMaterialAndConfidence));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StaticObject_SurfaceMaterialAndConfidence(::google::protobuf::internal::ConstantInitialized);

  inline StaticObject_SurfaceMaterialAndConfidence(const StaticObject_SurfaceMaterialAndConfidence& from) : StaticObject_SurfaceMaterialAndConfidence(nullptr, from) {}
  inline StaticObject_SurfaceMaterialAndConfidence(StaticObject_SurfaceMaterialAndConfidence&& from) noexcept
      : StaticObject_SurfaceMaterialAndConfidence(nullptr, ::std::move(from)) {}
  inline StaticObject_SurfaceMaterialAndConfidence& operator=(const StaticObject_SurfaceMaterialAndConfidence& from) {
    CopyFrom(from);
    return *this;
  }
  inline StaticObject_SurfaceMaterialAndConfidence& operator=(StaticObject_SurfaceMaterialAndConfidence&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StaticObject_SurfaceMaterialAndConfidence& default_instance() {
    return *reinterpret_cast<const StaticObject_SurfaceMaterialAndConfidence*>(
        &_StaticObject_SurfaceMaterialAndConfidence_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(StaticObject_SurfaceMaterialAndConfidence& a, StaticObject_SurfaceMaterialAndConfidence& b) { a.Swap(&b); }
  inline void Swap(StaticObject_SurfaceMaterialAndConfidence* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StaticObject_SurfaceMaterialAndConfidence* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StaticObject_SurfaceMaterialAndConfidence* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StaticObject_SurfaceMaterialAndConfidence>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StaticObject_SurfaceMaterialAndConfidence& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StaticObject_SurfaceMaterialAndConfidence& from) { StaticObject_SurfaceMaterialAndConfidence::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StaticObject_SurfaceMaterialAndConfidence* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence"; }

 protected:
  explicit StaticObject_SurfaceMaterialAndConfidence(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  StaticObject_SurfaceMaterialAndConfidence(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const StaticObject_SurfaceMaterialAndConfidence& from);
  StaticObject_SurfaceMaterialAndConfidence(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, StaticObject_SurfaceMaterialAndConfidence&& from) noexcept
      : StaticObject_SurfaceMaterialAndConfidence(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Type = StaticObject_SurfaceMaterialAndConfidence_Type;
  static constexpr Type UNKNOWN_TYPE = StaticObject_SurfaceMaterialAndConfidence_Type_UNKNOWN_TYPE;
  static constexpr Type METAL = StaticObject_SurfaceMaterialAndConfidence_Type_METAL;
  static constexpr Type CONCRETE = StaticObject_SurfaceMaterialAndConfidence_Type_CONCRETE;
  static constexpr Type STONE = StaticObject_SurfaceMaterialAndConfidence_Type_STONE;
  static constexpr Type WOOD = StaticObject_SurfaceMaterialAndConfidence_Type_WOOD;
  static constexpr Type PLASTIC = StaticObject_SurfaceMaterialAndConfidence_Type_PLASTIC;
  static constexpr Type ASPHALT = StaticObject_SurfaceMaterialAndConfidence_Type_ASPHALT;
  static constexpr Type ORGANIC = StaticObject_SurfaceMaterialAndConfidence_Type_ORGANIC;
  static inline bool Type_IsValid(int value) {
    return StaticObject_SurfaceMaterialAndConfidence_Type_IsValid(value);
  }
  static constexpr Type Type_MIN = StaticObject_SurfaceMaterialAndConfidence_Type_Type_MIN;
  static constexpr Type Type_MAX = StaticObject_SurfaceMaterialAndConfidence_Type_Type_MAX;
  static constexpr int Type_ARRAYSIZE = StaticObject_SurfaceMaterialAndConfidence_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Type_descriptor() {
    return StaticObject_SurfaceMaterialAndConfidence_Type_descriptor();
  }
  template <typename T>
  static inline const ::std::string& Type_Name(T value) {
    return StaticObject_SurfaceMaterialAndConfidence_Type_Name(value);
  }
  static inline bool Type_Parse(
      ::absl::string_view name, Type* PROTOBUF_NONNULL value) {
    return StaticObject_SurfaceMaterialAndConfidence_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kConfidenceFieldNumber = 2,
    kReflectivityAndAccuracyFieldNumber = 3,
    kTypeFieldNumber = 1,
  };
  // .sensoris.protobuf.types.base.Confidence confidence = 2;
  bool has_confidence() const;
  void clear_confidence() ;
  const ::sensoris::protobuf::types::base::Confidence& confidence() const;
  [[nodiscard]] ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE release_confidence();
  ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NONNULL mutable_confidence();
  void set_allocated_confidence(::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_confidence(::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE value);
  ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE unsafe_arena_release_confidence();

  private:
  const ::sensoris::protobuf::types::base::Confidence& _internal_confidence() const;
  ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NONNULL _internal_mutable_confidence();

  public:
  // .sensoris.protobuf.types.base.Int64ValueAndAccuracy reflectivity_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];
  bool has_reflectivity_and_accuracy() const;
  void clear_reflectivity_and_accuracy() ;
  const ::sensoris::protobuf::types::base::Int64ValueAndAccuracy& reflectivity_and_accuracy() const;
  [[nodiscard]] ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NULLABLE release_reflectivity_and_accuracy();
  ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NONNULL mutable_reflectivity_and_accuracy();
  void set_allocated_reflectivity_and_accuracy(::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_reflectivity_and_accuracy(::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NULLABLE value);
  ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NULLABLE unsafe_arena_release_reflectivity_and_accuracy();

  private:
  const ::sensoris::protobuf::types::base::Int64ValueAndAccuracy& _internal_reflectivity_and_accuracy() const;
  ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NONNULL _internal_mutable_reflectivity_and_accuracy();

  public:
  // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Type type = 1;
  void clear_type() ;
  ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence_Type type() const;
  void set_type(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence_Type value);

  private:
  ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence_Type _internal_type() const;
  void _internal_set_type(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence_Type value);

  public:
  // @@protoc_insertion_point(class_scope:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const StaticObject_SurfaceMaterialAndConfidence& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE confidence_;
    ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NULLABLE reflectivity_and_accuracy_;
    int type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull StaticObject_SurfaceMaterialAndConfidence_class_data_;
// -------------------------------------------------------------------

class StaticObject_ConeAndAccuracy final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy) */ {
 public:
  inline StaticObject_ConeAndAccuracy() : StaticObject_ConeAndAccuracy(nullptr) {}
  ~StaticObject_ConeAndAccuracy() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StaticObject_ConeAndAccuracy* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StaticObject_ConeAndAccuracy));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StaticObject_ConeAndAccuracy(::google::protobuf::internal::ConstantInitialized);

  inline StaticObject_ConeAndAccuracy(const StaticObject_ConeAndAccuracy& from) : StaticObject_ConeAndAccuracy(nullptr, from) {}
  inline StaticObject_ConeAndAccuracy(StaticObject_ConeAndAccuracy&& from) noexcept
      : StaticObject_ConeAndAccuracy(nullptr, ::std::move(from)) {}
  inline StaticObject_ConeAndAccuracy& operator=(const StaticObject_ConeAndAccuracy& from) {
    CopyFrom(from);
    return *this;
  }
  inline StaticObject_ConeAndAccuracy& operator=(StaticObject_ConeAndAccuracy&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StaticObject_ConeAndAccuracy& default_instance() {
    return *reinterpret_cast<const StaticObject_ConeAndAccuracy*>(
        &_StaticObject_ConeAndAccuracy_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(StaticObject_ConeAndAccuracy& a, StaticObject_ConeAndAccuracy& b) { a.Swap(&b); }
  inline void Swap(StaticObject_ConeAndAccuracy* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StaticObject_ConeAndAccuracy* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StaticObject_ConeAndAccuracy* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StaticObject_ConeAndAccuracy>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StaticObject_ConeAndAccuracy& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StaticObject_ConeAndAccuracy& from) { StaticObject_ConeAndAccuracy::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StaticObject_ConeAndAccuracy* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy"; }

 protected:
  explicit StaticObject_ConeAndAccuracy(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  StaticObject_ConeAndAccuracy(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const StaticObject_ConeAndAccuracy& from);
  StaticObject_ConeAndAccuracy(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, StaticObject_ConeAndAccuracy&& from) noexcept
      : StaticObject_ConeAndAccuracy(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kExtensionFieldNumber = 15,
    kLowerPositionAndAccuracyFieldNumber = 1,
    kUpperPositionAndAccuracyFieldNumber = 2,
    kLowerDiameterAndAccuracyFieldNumber = 3,
    kUpperDiameterAndAccuracyFieldNumber = 4,
  };
  // repeated .google.protobuf.Any extension = 15;
  int extension_size() const;
  private:
  int _internal_extension_size() const;

  public:
  void clear_extension() ;
  ::google::protobuf::Any* PROTOBUF_NONNULL mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* PROTOBUF_NONNULL mutable_extension();

  private:
  const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& _internal_extension() const;
  ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* PROTOBUF_NONNULL _internal_mutable_extension();
  public:
  const ::google::protobuf::Any& extension(int index) const;
  ::google::protobuf::Any* PROTOBUF_NONNULL add_extension();
  const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& extension() const;
  // .sensoris.protobuf.types.spatial.PositionAndAccuracy lower_position_and_accuracy = 1;
  bool has_lower_position_and_accuracy() const;
  void clear_lower_position_and_accuracy() ;
  const ::sensoris::protobuf::types::spatial::PositionAndAccuracy& lower_position_and_accuracy() const;
  [[nodiscard]] ::sensoris::protobuf::types::spatial::PositionAndAccuracy* PROTOBUF_NULLABLE release_lower_position_and_accuracy();
  ::sensoris::protobuf::types::spatial::PositionAndAccuracy* PROTOBUF_NONNULL mutable_lower_position_and_accuracy();
  void set_allocated_lower_position_and_accuracy(::sensoris::protobuf::types::spatial::PositionAndAccuracy* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_lower_position_and_accuracy(::sensoris::protobuf::types::spatial::PositionAndAccuracy* PROTOBUF_NULLABLE value);
  ::sensoris::protobuf::types::spatial::PositionAndAccuracy* PROTOBUF_NULLABLE unsafe_arena_release_lower_position_and_accuracy();

  private:
  const ::sensoris::protobuf::types::spatial::PositionAndAccuracy& _internal_lower_position_and_accuracy() const;
  ::sensoris::protobuf::types::spatial::PositionAndAccuracy* PROTOBUF_NONNULL _internal_mutable_lower_position_and_accuracy();

  public:
  // .sensoris.protobuf.types.spatial.PositionAndAccuracy upper_position_and_accuracy = 2;
  bool has_upper_position_and_accuracy() const;
  void clear_upper_position_and_accuracy() ;
  const ::sensoris::protobuf::types::spatial::PositionAndAccuracy& upper_position_and_accuracy() const;
  [[nodiscard]] ::sensoris::protobuf::types::spatial::PositionAndAccuracy* PROTOBUF_NULLABLE release_upper_position_and_accuracy();
  ::sensoris::protobuf::types::spatial::PositionAndAccuracy* PROTOBUF_NONNULL mutable_upper_position_and_accuracy();
  void set_allocated_upper_position_and_accuracy(::sensoris::protobuf::types::spatial::PositionAndAccuracy* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_upper_position_and_accuracy(::sensoris::protobuf::types::spatial::PositionAndAccuracy* PROTOBUF_NULLABLE value);
  ::sensoris::protobuf::types::spatial::PositionAndAccuracy* PROTOBUF_NULLABLE unsafe_arena_release_upper_position_and_accuracy();

  private:
  const ::sensoris::protobuf::types::spatial::PositionAndAccuracy& _internal_upper_position_and_accuracy() const;
  ::sensoris::protobuf::types::spatial::PositionAndAccuracy* PROTOBUF_NONNULL _internal_mutable_upper_position_and_accuracy();

  public:
  // .sensoris.protobuf.types.base.Int64ValueAndAccuracy lower_diameter_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];
  bool has_lower_diameter_and_accuracy() const;
  void clear_lower_diameter_and_accuracy() ;
  const ::sensoris::protobuf::types::base::Int64ValueAndAccuracy& lower_diameter_and_accuracy() const;
  [[nodiscard]] ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NULLABLE release_lower_diameter_and_accuracy();
  ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NONNULL mutable_lower_diameter_and_accuracy();
  void set_allocated_lower_diameter_and_accuracy(::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_lower_diameter_and_accuracy(::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NULLABLE value);
  ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NULLABLE unsafe_arena_release_lower_diameter_and_accuracy();

  private:
  const ::sensoris::protobuf::types::base::Int64ValueAndAccuracy& _internal_lower_diameter_and_accuracy() const;
  ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NONNULL _internal_mutable_lower_diameter_and_accuracy();

  public:
  // .sensoris.protobuf.types.base.Int64ValueAndAccuracy upper_diameter_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 0];
  bool has_upper_diameter_and_accuracy() const;
  void clear_upper_diameter_and_accuracy() ;
  const ::sensoris::protobuf::types::base::Int64ValueAndAccuracy& upper_diameter_and_accuracy() const;
  [[nodiscard]] ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NULLABLE release_upper_diameter_and_accuracy();
  ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NONNULL mutable_upper_diameter_and_accuracy();
  void set_allocated_upper_diameter_and_accuracy(::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_upper_diameter_and_accuracy(::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NULLABLE value);
  ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NULLABLE unsafe_arena_release_upper_diameter_and_accuracy();

  private:
  const ::sensoris::protobuf::types::base::Int64ValueAndAccuracy& _internal_upper_diameter_and_accuracy() const;
  ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NONNULL _internal_mutable_upper_diameter_and_accuracy();

  public:
  // @@protoc_insertion_point(class_scope:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   5, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const StaticObject_ConeAndAccuracy& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any > extension_;
    ::sensoris::protobuf::types::spatial::PositionAndAccuracy* PROTOBUF_NULLABLE lower_position_and_accuracy_;
    ::sensoris::protobuf::types::spatial::PositionAndAccuracy* PROTOBUF_NULLABLE upper_position_and_accuracy_;
    ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NULLABLE lower_diameter_and_accuracy_;
    ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NULLABLE upper_diameter_and_accuracy_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull StaticObject_ConeAndAccuracy_class_data_;
// -------------------------------------------------------------------

class StaticObject final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:sensoris.protobuf.categories.objectdetection.StaticObject) */ {
 public:
  inline StaticObject() : StaticObject(nullptr) {}
  ~StaticObject() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StaticObject* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StaticObject));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StaticObject(::google::protobuf::internal::ConstantInitialized);

  inline StaticObject(const StaticObject& from) : StaticObject(nullptr, from) {}
  inline StaticObject(StaticObject&& from) noexcept
      : StaticObject(nullptr, ::std::move(from)) {}
  inline StaticObject& operator=(const StaticObject& from) {
    CopyFrom(from);
    return *this;
  }
  inline StaticObject& operator=(StaticObject&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StaticObject& default_instance() {
    return *reinterpret_cast<const StaticObject*>(
        &_StaticObject_default_instance_);
  }
  enum GeometryCase {
    kRectangularBoxAndAccuracy = 6,
    kConeAndAccuracy = 7,
    GEOMETRY_NOT_SET = 0,
  };
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(StaticObject& a, StaticObject& b) { a.Swap(&b); }
  inline void Swap(StaticObject* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StaticObject* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StaticObject* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StaticObject>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StaticObject& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StaticObject& from) { StaticObject::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StaticObject* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "sensoris.protobuf.categories.objectdetection.StaticObject"; }

 protected:
  explicit StaticObject(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  StaticObject(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const StaticObject& from);
  StaticObject(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, StaticObject&& from) noexcept
      : StaticObject(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using TypeAndConfidence = StaticObject_TypeAndConfidence;
  using ConeAndAccuracy = StaticObject_ConeAndAccuracy;
  using SurfaceTypeAndConfidence = StaticObject_SurfaceTypeAndConfidence;
  using SurfaceMaterialAndConfidence = StaticObject_SurfaceMaterialAndConfidence;
  using SurfaceColorAndConfidence = StaticObject_SurfaceColorAndConfidence;

  // accessors -------------------------------------------------------
  enum : int {
    kSurfaceColorAndConfidenceFieldNumber = 10,
    kEnvelopeFieldNumber = 1,
    kObjectIdFieldNumber = 2,
    kExistenceConfidenceFieldNumber = 3,
    kDetectionStatusFieldNumber = 4,
    kTypeAndConfidenceFieldNumber = 5,
    kSurfaceTypeAndConfidenceFieldNumber = 8,
    kSurfaceMaterialAndConfidenceFieldNumber = 9,
    kRectangularBoxAndAccuracyFieldNumber = 6,
    kConeAndAccuracyFieldNumber = 7,
  };
  // repeated .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence surface_color_and_confidence = 10;
  int surface_color_and_confidence_size() const;
  private:
  int _internal_surface_color_and_confidence_size() const;

  public:
  void clear_surface_color_and_confidence() ;
  ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence* PROTOBUF_NONNULL mutable_surface_color_and_confidence(int index);
  ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence>* PROTOBUF_NONNULL mutable_surface_color_and_confidence();

  private:
  const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence>& _internal_surface_color_and_confidence() const;
  ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence>* PROTOBUF_NONNULL _internal_mutable_surface_color_and_confidence();
  public:
  const ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence& surface_color_and_confidence(int index) const;
  ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence* PROTOBUF_NONNULL add_surface_color_and_confidence();
  const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence>& surface_color_and_confidence() const;
  // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
  bool has_envelope() const;
  void clear_envelope() ;
  const ::sensoris::protobuf::types::base::EventEnvelope& envelope() const;
  [[nodiscard]] ::sensoris::protobuf::types::base::EventEnvelope* PROTOBUF_NULLABLE release_envelope();
  ::sensoris::protobuf::types::base::EventEnvelope* PROTOBUF_NONNULL mutable_envelope();
  void set_allocated_envelope(::sensoris::protobuf::types::base::EventEnvelope* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_envelope(::sensoris::protobuf::types::base::EventEnvelope* PROTOBUF_NULLABLE value);
  ::sensoris::protobuf::types::base::EventEnvelope* PROTOBUF_NULLABLE unsafe_arena_release_envelope();

  private:
  const ::sensoris::protobuf::types::base::EventEnvelope& _internal_envelope() const;
  ::sensoris::protobuf::types::base::EventEnvelope* PROTOBUF_NONNULL _internal_mutable_envelope();

  public:
  // .google.protobuf.Int64Value object_id = 2;
  bool has_object_id() const;
  void clear_object_id() ;
  const ::google::protobuf::Int64Value& object_id() const;
  [[nodiscard]] ::google::protobuf::Int64Value* PROTOBUF_NULLABLE release_object_id();
  ::google::protobuf::Int64Value* PROTOBUF_NONNULL mutable_object_id();
  void set_allocated_object_id(::google::protobuf::Int64Value* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_object_id(::google::protobuf::Int64Value* PROTOBUF_NULLABLE value);
  ::google::protobuf::Int64Value* PROTOBUF_NULLABLE unsafe_arena_release_object_id();

  private:
  const ::google::protobuf::Int64Value& _internal_object_id() const;
  ::google::protobuf::Int64Value* PROTOBUF_NONNULL _internal_mutable_object_id();

  public:
  // .sensoris.protobuf.types.base.Confidence existence_confidence = 3;
  bool has_existence_confidence() const;
  void clear_existence_confidence() ;
  const ::sensoris::protobuf::types::base::Confidence& existence_confidence() const;
  [[nodiscard]] ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE release_existence_confidence();
  ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NONNULL mutable_existence_confidence();
  void set_allocated_existence_confidence(::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_existence_confidence(::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE value);
  ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE unsafe_arena_release_existence_confidence();

  private:
  const ::sensoris::protobuf::types::base::Confidence& _internal_existence_confidence() const;
  ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NONNULL _internal_mutable_existence_confidence();

  public:
  // .sensoris.protobuf.types.base.EventDetectionStatus detection_status = 4;
  bool has_detection_status() const;
  void clear_detection_status() ;
  const ::sensoris::protobuf::types::base::EventDetectionStatus& detection_status() const;
  [[nodiscard]] ::sensoris::protobuf::types::base::EventDetectionStatus* PROTOBUF_NULLABLE release_detection_status();
  ::sensoris::protobuf::types::base::EventDetectionStatus* PROTOBUF_NONNULL mutable_detection_status();
  void set_allocated_detection_status(::sensoris::protobuf::types::base::EventDetectionStatus* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_detection_status(::sensoris::protobuf::types::base::EventDetectionStatus* PROTOBUF_NULLABLE value);
  ::sensoris::protobuf::types::base::EventDetectionStatus* PROTOBUF_NULLABLE unsafe_arena_release_detection_status();

  private:
  const ::sensoris::protobuf::types::base::EventDetectionStatus& _internal_detection_status() const;
  ::sensoris::protobuf::types::base::EventDetectionStatus* PROTOBUF_NONNULL _internal_mutable_detection_status();

  public:
  // .sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence type_and_confidence = 5;
  bool has_type_and_confidence() const;
  void clear_type_and_confidence() ;
  const ::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence& type_and_confidence() const;
  [[nodiscard]] ::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence* PROTOBUF_NULLABLE release_type_and_confidence();
  ::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence* PROTOBUF_NONNULL mutable_type_and_confidence();
  void set_allocated_type_and_confidence(::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_type_and_confidence(::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence* PROTOBUF_NULLABLE value);
  ::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence* PROTOBUF_NULLABLE unsafe_arena_release_type_and_confidence();

  private:
  const ::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence& _internal_type_and_confidence() const;
  ::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence* PROTOBUF_NONNULL _internal_mutable_type_and_confidence();

  public:
  // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence surface_type_and_confidence = 8;
  bool has_surface_type_and_confidence() const;
  void clear_surface_type_and_confidence() ;
  const ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence& surface_type_and_confidence() const;
  [[nodiscard]] ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence* PROTOBUF_NULLABLE release_surface_type_and_confidence();
  ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence* PROTOBUF_NONNULL mutable_surface_type_and_confidence();
  void set_allocated_surface_type_and_confidence(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_surface_type_and_confidence(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence* PROTOBUF_NULLABLE value);
  ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence* PROTOBUF_NULLABLE unsafe_arena_release_surface_type_and_confidence();

  private:
  const ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence& _internal_surface_type_and_confidence() const;
  ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence* PROTOBUF_NONNULL _internal_mutable_surface_type_and_confidence();

  public:
  // .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence surface_material_and_confidence = 9;
  bool has_surface_material_and_confidence() const;
  void clear_surface_material_and_confidence() ;
  const ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence& surface_material_and_confidence() const;
  [[nodiscard]] ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence* PROTOBUF_NULLABLE release_surface_material_and_confidence();
  ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence* PROTOBUF_NONNULL mutable_surface_material_and_confidence();
  void set_allocated_surface_material_and_confidence(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_surface_material_and_confidence(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence* PROTOBUF_NULLABLE value);
  ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence* PROTOBUF_NULLABLE unsafe_arena_release_surface_material_and_confidence();

  private:
  const ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence& _internal_surface_material_and_confidence() const;
  ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence* PROTOBUF_NONNULL _internal_mutable_surface_material_and_confidence();

  public:
  // .sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 6;
  bool has_rectangular_box_and_accuracy() const;
  private:
  bool _internal_has_rectangular_box_and_accuracy() const;

  public:
  void clear_rectangular_box_and_accuracy() ;
  const ::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy& rectangular_box_and_accuracy() const;
  [[nodiscard]] ::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy* PROTOBUF_NULLABLE release_rectangular_box_and_accuracy();
  ::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy* PROTOBUF_NONNULL mutable_rectangular_box_and_accuracy();
  void set_allocated_rectangular_box_and_accuracy(::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_rectangular_box_and_accuracy(::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy* PROTOBUF_NULLABLE value);
  ::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy* PROTOBUF_NULLABLE unsafe_arena_release_rectangular_box_and_accuracy();

  private:
  const ::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy& _internal_rectangular_box_and_accuracy() const;
  ::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy* PROTOBUF_NONNULL _internal_mutable_rectangular_box_and_accuracy();

  public:
  // .sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy cone_and_accuracy = 7;
  bool has_cone_and_accuracy() const;
  private:
  bool _internal_has_cone_and_accuracy() const;

  public:
  void clear_cone_and_accuracy() ;
  const ::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy& cone_and_accuracy() const;
  [[nodiscard]] ::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy* PROTOBUF_NULLABLE release_cone_and_accuracy();
  ::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy* PROTOBUF_NONNULL mutable_cone_and_accuracy();
  void set_allocated_cone_and_accuracy(::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_cone_and_accuracy(::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy* PROTOBUF_NULLABLE value);
  ::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy* PROTOBUF_NULLABLE unsafe_arena_release_cone_and_accuracy();

  private:
  const ::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy& _internal_cone_and_accuracy() const;
  ::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy* PROTOBUF_NONNULL _internal_mutable_cone_and_accuracy();

  public:
  void clear_geometry();
  GeometryCase geometry_case() const;
  // @@protoc_insertion_point(class_scope:sensoris.protobuf.categories.objectdetection.StaticObject)
 private:
  class _Internal;
  void set_has_rectangular_box_and_accuracy();
  void set_has_cone_and_accuracy();
  inline bool has_geometry() const;
  inline void clear_has_geometry();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 10,
                                   10, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const StaticObject& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence > surface_color_and_confidence_;
    ::sensoris::protobuf::types::base::EventEnvelope* PROTOBUF_NULLABLE envelope_;
    ::google::protobuf::Int64Value* PROTOBUF_NULLABLE object_id_;
    ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE existence_confidence_;
    ::sensoris::protobuf::types::base::EventDetectionStatus* PROTOBUF_NULLABLE detection_status_;
    ::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence* PROTOBUF_NULLABLE type_and_confidence_;
    ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence* PROTOBUF_NULLABLE surface_type_and_confidence_;
    ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence* PROTOBUF_NULLABLE surface_material_and_confidence_;
    union GeometryUnion {
      constexpr GeometryUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy* PROTOBUF_NULLABLE rectangular_box_and_accuracy_;
      ::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy* PROTOBUF_NULLABLE cone_and_accuracy_;
    } geometry_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull StaticObject_class_data_;
// -------------------------------------------------------------------

class MovableObject final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:sensoris.protobuf.categories.objectdetection.MovableObject) */ {
 public:
  inline MovableObject() : MovableObject(nullptr) {}
  ~MovableObject() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MovableObject* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MovableObject));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MovableObject(::google::protobuf::internal::ConstantInitialized);

  inline MovableObject(const MovableObject& from) : MovableObject(nullptr, from) {}
  inline MovableObject(MovableObject&& from) noexcept
      : MovableObject(nullptr, ::std::move(from)) {}
  inline MovableObject& operator=(const MovableObject& from) {
    CopyFrom(from);
    return *this;
  }
  inline MovableObject& operator=(MovableObject&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MovableObject& default_instance() {
    return *reinterpret_cast<const MovableObject*>(
        &_MovableObject_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(MovableObject& a, MovableObject& b) { a.Swap(&b); }
  inline void Swap(MovableObject* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MovableObject* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MovableObject* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MovableObject>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MovableObject& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MovableObject& from) { MovableObject::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MovableObject* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "sensoris.protobuf.categories.objectdetection.MovableObject"; }

 protected:
  explicit MovableObject(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MovableObject(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MovableObject& from);
  MovableObject(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MovableObject&& from) noexcept
      : MovableObject(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using TypeAndConfidence = MovableObject_TypeAndConfidence;

  // accessors -------------------------------------------------------
  enum : int {
    kEnvelopeFieldNumber = 1,
    kObjectIdFieldNumber = 2,
    kExistenceConfidenceFieldNumber = 3,
    kDetectionStatusFieldNumber = 4,
    kTypeAndConfidenceFieldNumber = 5,
    kRectangularBoxAndAccuracyFieldNumber = 6,
    kSpeedAndAccuracyFieldNumber = 7,
    kAccelerationAndAccuracyFieldNumber = 8,
  };
  // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
  bool has_envelope() const;
  void clear_envelope() ;
  const ::sensoris::protobuf::types::base::EventEnvelope& envelope() const;
  [[nodiscard]] ::sensoris::protobuf::types::base::EventEnvelope* PROTOBUF_NULLABLE release_envelope();
  ::sensoris::protobuf::types::base::EventEnvelope* PROTOBUF_NONNULL mutable_envelope();
  void set_allocated_envelope(::sensoris::protobuf::types::base::EventEnvelope* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_envelope(::sensoris::protobuf::types::base::EventEnvelope* PROTOBUF_NULLABLE value);
  ::sensoris::protobuf::types::base::EventEnvelope* PROTOBUF_NULLABLE unsafe_arena_release_envelope();

  private:
  const ::sensoris::protobuf::types::base::EventEnvelope& _internal_envelope() const;
  ::sensoris::protobuf::types::base::EventEnvelope* PROTOBUF_NONNULL _internal_mutable_envelope();

  public:
  // .google.protobuf.Int64Value object_id = 2;
  bool has_object_id() const;
  void clear_object_id() ;
  const ::google::protobuf::Int64Value& object_id() const;
  [[nodiscard]] ::google::protobuf::Int64Value* PROTOBUF_NULLABLE release_object_id();
  ::google::protobuf::Int64Value* PROTOBUF_NONNULL mutable_object_id();
  void set_allocated_object_id(::google::protobuf::Int64Value* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_object_id(::google::protobuf::Int64Value* PROTOBUF_NULLABLE value);
  ::google::protobuf::Int64Value* PROTOBUF_NULLABLE unsafe_arena_release_object_id();

  private:
  const ::google::protobuf::Int64Value& _internal_object_id() const;
  ::google::protobuf::Int64Value* PROTOBUF_NONNULL _internal_mutable_object_id();

  public:
  // .sensoris.protobuf.types.base.Confidence existence_confidence = 3;
  bool has_existence_confidence() const;
  void clear_existence_confidence() ;
  const ::sensoris::protobuf::types::base::Confidence& existence_confidence() const;
  [[nodiscard]] ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE release_existence_confidence();
  ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NONNULL mutable_existence_confidence();
  void set_allocated_existence_confidence(::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_existence_confidence(::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE value);
  ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE unsafe_arena_release_existence_confidence();

  private:
  const ::sensoris::protobuf::types::base::Confidence& _internal_existence_confidence() const;
  ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NONNULL _internal_mutable_existence_confidence();

  public:
  // .sensoris.protobuf.types.base.EventDetectionStatus detection_status = 4;
  bool has_detection_status() const;
  void clear_detection_status() ;
  const ::sensoris::protobuf::types::base::EventDetectionStatus& detection_status() const;
  [[nodiscard]] ::sensoris::protobuf::types::base::EventDetectionStatus* PROTOBUF_NULLABLE release_detection_status();
  ::sensoris::protobuf::types::base::EventDetectionStatus* PROTOBUF_NONNULL mutable_detection_status();
  void set_allocated_detection_status(::sensoris::protobuf::types::base::EventDetectionStatus* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_detection_status(::sensoris::protobuf::types::base::EventDetectionStatus* PROTOBUF_NULLABLE value);
  ::sensoris::protobuf::types::base::EventDetectionStatus* PROTOBUF_NULLABLE unsafe_arena_release_detection_status();

  private:
  const ::sensoris::protobuf::types::base::EventDetectionStatus& _internal_detection_status() const;
  ::sensoris::protobuf::types::base::EventDetectionStatus* PROTOBUF_NONNULL _internal_mutable_detection_status();

  public:
  // .sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence type_and_confidence = 5;
  bool has_type_and_confidence() const;
  void clear_type_and_confidence() ;
  const ::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence& type_and_confidence() const;
  [[nodiscard]] ::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence* PROTOBUF_NULLABLE release_type_and_confidence();
  ::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence* PROTOBUF_NONNULL mutable_type_and_confidence();
  void set_allocated_type_and_confidence(::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_type_and_confidence(::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence* PROTOBUF_NULLABLE value);
  ::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence* PROTOBUF_NULLABLE unsafe_arena_release_type_and_confidence();

  private:
  const ::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence& _internal_type_and_confidence() const;
  ::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence* PROTOBUF_NONNULL _internal_mutable_type_and_confidence();

  public:
  // .sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 6;
  bool has_rectangular_box_and_accuracy() const;
  void clear_rectangular_box_and_accuracy() ;
  const ::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy& rectangular_box_and_accuracy() const;
  [[nodiscard]] ::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy* PROTOBUF_NULLABLE release_rectangular_box_and_accuracy();
  ::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy* PROTOBUF_NONNULL mutable_rectangular_box_and_accuracy();
  void set_allocated_rectangular_box_and_accuracy(::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_rectangular_box_and_accuracy(::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy* PROTOBUF_NULLABLE value);
  ::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy* PROTOBUF_NULLABLE unsafe_arena_release_rectangular_box_and_accuracy();

  private:
  const ::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy& _internal_rectangular_box_and_accuracy() const;
  ::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy* PROTOBUF_NONNULL _internal_mutable_rectangular_box_and_accuracy();

  public:
  // .sensoris.protobuf.types.spatial.XyzVectorAndAccuracy speed_and_accuracy = 7 [(.sensoris.protobuf.types.base.exponent) = 1];
  bool has_speed_and_accuracy() const;
  void clear_speed_and_accuracy() ;
  const ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy& speed_and_accuracy() const;
  [[nodiscard]] ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy* PROTOBUF_NULLABLE release_speed_and_accuracy();
  ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy* PROTOBUF_NONNULL mutable_speed_and_accuracy();
  void set_allocated_speed_and_accuracy(::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_speed_and_accuracy(::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy* PROTOBUF_NULLABLE value);
  ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy* PROTOBUF_NULLABLE unsafe_arena_release_speed_and_accuracy();

  private:
  const ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy& _internal_speed_and_accuracy() const;
  ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy* PROTOBUF_NONNULL _internal_mutable_speed_and_accuracy();

  public:
  // .sensoris.protobuf.types.spatial.XyzVectorAndAccuracy acceleration_and_accuracy = 8 [(.sensoris.protobuf.types.base.exponent) = 1];
  bool has_acceleration_and_accuracy() const;
  void clear_acceleration_and_accuracy() ;
  const ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy& acceleration_and_accuracy() const;
  [[nodiscard]] ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy* PROTOBUF_NULLABLE release_acceleration_and_accuracy();
  ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy* PROTOBUF_NONNULL mutable_acceleration_and_accuracy();
  void set_allocated_acceleration_and_accuracy(::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_acceleration_and_accuracy(::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy* PROTOBUF_NULLABLE value);
  ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy* PROTOBUF_NULLABLE unsafe_arena_release_acceleration_and_accuracy();

  private:
  const ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy& _internal_acceleration_and_accuracy() const;
  ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy* PROTOBUF_NONNULL _internal_mutable_acceleration_and_accuracy();

  public:
  // @@protoc_insertion_point(class_scope:sensoris.protobuf.categories.objectdetection.MovableObject)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 8,
                                   8, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MovableObject& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::sensoris::protobuf::types::base::EventEnvelope* PROTOBUF_NULLABLE envelope_;
    ::google::protobuf::Int64Value* PROTOBUF_NULLABLE object_id_;
    ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE existence_confidence_;
    ::sensoris::protobuf::types::base::EventDetectionStatus* PROTOBUF_NULLABLE detection_status_;
    ::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence* PROTOBUF_NULLABLE type_and_confidence_;
    ::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy* PROTOBUF_NULLABLE rectangular_box_and_accuracy_;
    ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy* PROTOBUF_NULLABLE speed_and_accuracy_;
    ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy* PROTOBUF_NULLABLE acceleration_and_accuracy_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MovableObject_class_data_;
// -------------------------------------------------------------------

class ObjectDetectionCategory final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory) */ {
 public:
  inline ObjectDetectionCategory() : ObjectDetectionCategory(nullptr) {}
  ~ObjectDetectionCategory() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ObjectDetectionCategory* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ObjectDetectionCategory));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ObjectDetectionCategory(::google::protobuf::internal::ConstantInitialized);

  inline ObjectDetectionCategory(const ObjectDetectionCategory& from) : ObjectDetectionCategory(nullptr, from) {}
  inline ObjectDetectionCategory(ObjectDetectionCategory&& from) noexcept
      : ObjectDetectionCategory(nullptr, ::std::move(from)) {}
  inline ObjectDetectionCategory& operator=(const ObjectDetectionCategory& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObjectDetectionCategory& operator=(ObjectDetectionCategory&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ObjectDetectionCategory& default_instance() {
    return *reinterpret_cast<const ObjectDetectionCategory*>(
        &_ObjectDetectionCategory_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(ObjectDetectionCategory& a, ObjectDetectionCategory& b) { a.Swap(&b); }
  inline void Swap(ObjectDetectionCategory* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ObjectDetectionCategory* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ObjectDetectionCategory* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ObjectDetectionCategory>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ObjectDetectionCategory& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ObjectDetectionCategory& from) { ObjectDetectionCategory::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ObjectDetectionCategory* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory"; }

 protected:
  explicit ObjectDetectionCategory(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ObjectDetectionCategory(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ObjectDetectionCategory& from);
  ObjectDetectionCategory(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ObjectDetectionCategory&& from) noexcept
      : ObjectDetectionCategory(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMovableObjectFieldNumber = 2,
    kStaticObjectFieldNumber = 3,
    kEnvelopeFieldNumber = 1,
  };
  // repeated .sensoris.protobuf.categories.objectdetection.MovableObject movable_object = 2;
  int movable_object_size() const;
  private:
  int _internal_movable_object_size() const;

  public:
  void clear_movable_object() ;
  ::sensoris::protobuf::categories::objectdetection::MovableObject* PROTOBUF_NONNULL mutable_movable_object(int index);
  ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::categories::objectdetection::MovableObject>* PROTOBUF_NONNULL mutable_movable_object();

  private:
  const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::categories::objectdetection::MovableObject>& _internal_movable_object() const;
  ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::categories::objectdetection::MovableObject>* PROTOBUF_NONNULL _internal_mutable_movable_object();
  public:
  const ::sensoris::protobuf::categories::objectdetection::MovableObject& movable_object(int index) const;
  ::sensoris::protobuf::categories::objectdetection::MovableObject* PROTOBUF_NONNULL add_movable_object();
  const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::categories::objectdetection::MovableObject>& movable_object() const;
  // repeated .sensoris.protobuf.categories.objectdetection.StaticObject static_object = 3;
  int static_object_size() const;
  private:
  int _internal_static_object_size() const;

  public:
  void clear_static_object() ;
  ::sensoris::protobuf::categories::objectdetection::StaticObject* PROTOBUF_NONNULL mutable_static_object(int index);
  ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::categories::objectdetection::StaticObject>* PROTOBUF_NONNULL mutable_static_object();

  private:
  const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::categories::objectdetection::StaticObject>& _internal_static_object() const;
  ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::categories::objectdetection::StaticObject>* PROTOBUF_NONNULL _internal_mutable_static_object();
  public:
  const ::sensoris::protobuf::categories::objectdetection::StaticObject& static_object(int index) const;
  ::sensoris::protobuf::categories::objectdetection::StaticObject* PROTOBUF_NONNULL add_static_object();
  const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::categories::objectdetection::StaticObject>& static_object() const;
  // .sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
  bool has_envelope() const;
  void clear_envelope() ;
  const ::sensoris::protobuf::types::base::CategoryEnvelope& envelope() const;
  [[nodiscard]] ::sensoris::protobuf::types::base::CategoryEnvelope* PROTOBUF_NULLABLE release_envelope();
  ::sensoris::protobuf::types::base::CategoryEnvelope* PROTOBUF_NONNULL mutable_envelope();
  void set_allocated_envelope(::sensoris::protobuf::types::base::CategoryEnvelope* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_envelope(::sensoris::protobuf::types::base::CategoryEnvelope* PROTOBUF_NULLABLE value);
  ::sensoris::protobuf::types::base::CategoryEnvelope* PROTOBUF_NULLABLE unsafe_arena_release_envelope();

  private:
  const ::sensoris::protobuf::types::base::CategoryEnvelope& _internal_envelope() const;
  ::sensoris::protobuf::types::base::CategoryEnvelope* PROTOBUF_NONNULL _internal_mutable_envelope();

  public:
  // @@protoc_insertion_point(class_scope:sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ObjectDetectionCategory& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::categories::objectdetection::MovableObject > movable_object_;
    ::google::protobuf::RepeatedPtrField< ::sensoris::protobuf::categories::objectdetection::StaticObject > static_object_;
    ::sensoris::protobuf::types::base::CategoryEnvelope* PROTOBUF_NULLABLE envelope_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ObjectDetectionCategory_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MovableObject_TypeAndConfidence

// .sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence.Type type = 1;
inline void MovableObject_TypeAndConfidence::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence_Type MovableObject_TypeAndConfidence::type() const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence.type)
  return _internal_type();
}
inline void MovableObject_TypeAndConfidence::set_type(::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence_Type value) {
  _internal_set_type(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence.type)
}
inline ::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence_Type MovableObject_TypeAndConfidence::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence_Type>(_impl_.type_);
}
inline void MovableObject_TypeAndConfidence::_internal_set_type(::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence_Type value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// .sensoris.protobuf.types.base.Confidence confidence = 2;
inline bool MovableObject_TypeAndConfidence::has_confidence() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.confidence_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::types::base::Confidence& MovableObject_TypeAndConfidence::_internal_confidence() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::sensoris::protobuf::types::base::Confidence* p = _impl_.confidence_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::types::base::Confidence&>(::sensoris::protobuf::types::base::_Confidence_default_instance_);
}
inline const ::sensoris::protobuf::types::base::Confidence& MovableObject_TypeAndConfidence::confidence() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence.confidence)
  return _internal_confidence();
}
inline void MovableObject_TypeAndConfidence::unsafe_arena_set_allocated_confidence(
    ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.confidence_);
  }
  _impl_.confidence_ = reinterpret_cast<::sensoris::protobuf::types::base::Confidence*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence.confidence)
}
inline ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE MovableObject_TypeAndConfidence::release_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::types::base::Confidence* released = _impl_.confidence_;
  _impl_.confidence_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE MovableObject_TypeAndConfidence::unsafe_arena_release_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence.confidence)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::types::base::Confidence* temp = _impl_.confidence_;
  _impl_.confidence_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NONNULL MovableObject_TypeAndConfidence::_internal_mutable_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.confidence_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::sensoris::protobuf::types::base::Confidence>(GetArena());
    _impl_.confidence_ = reinterpret_cast<::sensoris::protobuf::types::base::Confidence*>(p);
  }
  return _impl_.confidence_;
}
inline ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NONNULL MovableObject_TypeAndConfidence::mutable_confidence()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::sensoris::protobuf::types::base::Confidence* _msg = _internal_mutable_confidence();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence.confidence)
  return _msg;
}
inline void MovableObject_TypeAndConfidence::set_allocated_confidence(::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.confidence_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.confidence_ = reinterpret_cast<::sensoris::protobuf::types::base::Confidence*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence.confidence)
}

// -------------------------------------------------------------------

// MovableObject

// .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
inline bool MovableObject::has_envelope() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.envelope_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::types::base::EventEnvelope& MovableObject::_internal_envelope() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::sensoris::protobuf::types::base::EventEnvelope* p = _impl_.envelope_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::types::base::EventEnvelope&>(::sensoris::protobuf::types::base::_EventEnvelope_default_instance_);
}
inline const ::sensoris::protobuf::types::base::EventEnvelope& MovableObject::envelope() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.categories.objectdetection.MovableObject.envelope)
  return _internal_envelope();
}
inline void MovableObject::unsafe_arena_set_allocated_envelope(
    ::sensoris::protobuf::types::base::EventEnvelope* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.envelope_);
  }
  _impl_.envelope_ = reinterpret_cast<::sensoris::protobuf::types::base::EventEnvelope*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.categories.objectdetection.MovableObject.envelope)
}
inline ::sensoris::protobuf::types::base::EventEnvelope* PROTOBUF_NULLABLE MovableObject::release_envelope() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::types::base::EventEnvelope* released = _impl_.envelope_;
  _impl_.envelope_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::sensoris::protobuf::types::base::EventEnvelope* PROTOBUF_NULLABLE MovableObject::unsafe_arena_release_envelope() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.categories.objectdetection.MovableObject.envelope)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::types::base::EventEnvelope* temp = _impl_.envelope_;
  _impl_.envelope_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::types::base::EventEnvelope* PROTOBUF_NONNULL MovableObject::_internal_mutable_envelope() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.envelope_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::sensoris::protobuf::types::base::EventEnvelope>(GetArena());
    _impl_.envelope_ = reinterpret_cast<::sensoris::protobuf::types::base::EventEnvelope*>(p);
  }
  return _impl_.envelope_;
}
inline ::sensoris::protobuf::types::base::EventEnvelope* PROTOBUF_NONNULL MovableObject::mutable_envelope()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::sensoris::protobuf::types::base::EventEnvelope* _msg = _internal_mutable_envelope();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.categories.objectdetection.MovableObject.envelope)
  return _msg;
}
inline void MovableObject::set_allocated_envelope(::sensoris::protobuf::types::base::EventEnvelope* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.envelope_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.envelope_ = reinterpret_cast<::sensoris::protobuf::types::base::EventEnvelope*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.categories.objectdetection.MovableObject.envelope)
}

// .google.protobuf.Int64Value object_id = 2;
inline bool MovableObject::has_object_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.object_id_ != nullptr);
  return value;
}
inline const ::google::protobuf::Int64Value& MovableObject::_internal_object_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Int64Value* p = _impl_.object_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Int64Value&>(::google::protobuf::_Int64Value_default_instance_);
}
inline const ::google::protobuf::Int64Value& MovableObject::object_id() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.categories.objectdetection.MovableObject.object_id)
  return _internal_object_id();
}
inline void MovableObject::unsafe_arena_set_allocated_object_id(
    ::google::protobuf::Int64Value* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.object_id_);
  }
  _impl_.object_id_ = reinterpret_cast<::google::protobuf::Int64Value*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.categories.objectdetection.MovableObject.object_id)
}
inline ::google::protobuf::Int64Value* PROTOBUF_NULLABLE MovableObject::release_object_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Int64Value* released = _impl_.object_id_;
  _impl_.object_id_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Int64Value* PROTOBUF_NULLABLE MovableObject::unsafe_arena_release_object_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.categories.objectdetection.MovableObject.object_id)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Int64Value* temp = _impl_.object_id_;
  _impl_.object_id_ = nullptr;
  return temp;
}
inline ::google::protobuf::Int64Value* PROTOBUF_NONNULL MovableObject::_internal_mutable_object_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.object_id_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Int64Value>(GetArena());
    _impl_.object_id_ = reinterpret_cast<::google::protobuf::Int64Value*>(p);
  }
  return _impl_.object_id_;
}
inline ::google::protobuf::Int64Value* PROTOBUF_NONNULL MovableObject::mutable_object_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Int64Value* _msg = _internal_mutable_object_id();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.categories.objectdetection.MovableObject.object_id)
  return _msg;
}
inline void MovableObject::set_allocated_object_id(::google::protobuf::Int64Value* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.object_id_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.object_id_ = reinterpret_cast<::google::protobuf::Int64Value*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.categories.objectdetection.MovableObject.object_id)
}

// .sensoris.protobuf.types.base.Confidence existence_confidence = 3;
inline bool MovableObject::has_existence_confidence() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.existence_confidence_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::types::base::Confidence& MovableObject::_internal_existence_confidence() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::sensoris::protobuf::types::base::Confidence* p = _impl_.existence_confidence_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::types::base::Confidence&>(::sensoris::protobuf::types::base::_Confidence_default_instance_);
}
inline const ::sensoris::protobuf::types::base::Confidence& MovableObject::existence_confidence() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.categories.objectdetection.MovableObject.existence_confidence)
  return _internal_existence_confidence();
}
inline void MovableObject::unsafe_arena_set_allocated_existence_confidence(
    ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.existence_confidence_);
  }
  _impl_.existence_confidence_ = reinterpret_cast<::sensoris::protobuf::types::base::Confidence*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.categories.objectdetection.MovableObject.existence_confidence)
}
inline ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE MovableObject::release_existence_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::sensoris::protobuf::types::base::Confidence* released = _impl_.existence_confidence_;
  _impl_.existence_confidence_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE MovableObject::unsafe_arena_release_existence_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.categories.objectdetection.MovableObject.existence_confidence)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::sensoris::protobuf::types::base::Confidence* temp = _impl_.existence_confidence_;
  _impl_.existence_confidence_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NONNULL MovableObject::_internal_mutable_existence_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.existence_confidence_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::sensoris::protobuf::types::base::Confidence>(GetArena());
    _impl_.existence_confidence_ = reinterpret_cast<::sensoris::protobuf::types::base::Confidence*>(p);
  }
  return _impl_.existence_confidence_;
}
inline ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NONNULL MovableObject::mutable_existence_confidence()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::sensoris::protobuf::types::base::Confidence* _msg = _internal_mutable_existence_confidence();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.categories.objectdetection.MovableObject.existence_confidence)
  return _msg;
}
inline void MovableObject::set_allocated_existence_confidence(::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.existence_confidence_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.existence_confidence_ = reinterpret_cast<::sensoris::protobuf::types::base::Confidence*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.categories.objectdetection.MovableObject.existence_confidence)
}

// .sensoris.protobuf.types.base.EventDetectionStatus detection_status = 4;
inline bool MovableObject::has_detection_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.detection_status_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::types::base::EventDetectionStatus& MovableObject::_internal_detection_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::sensoris::protobuf::types::base::EventDetectionStatus* p = _impl_.detection_status_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::types::base::EventDetectionStatus&>(::sensoris::protobuf::types::base::_EventDetectionStatus_default_instance_);
}
inline const ::sensoris::protobuf::types::base::EventDetectionStatus& MovableObject::detection_status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.categories.objectdetection.MovableObject.detection_status)
  return _internal_detection_status();
}
inline void MovableObject::unsafe_arena_set_allocated_detection_status(
    ::sensoris::protobuf::types::base::EventDetectionStatus* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.detection_status_);
  }
  _impl_.detection_status_ = reinterpret_cast<::sensoris::protobuf::types::base::EventDetectionStatus*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.categories.objectdetection.MovableObject.detection_status)
}
inline ::sensoris::protobuf::types::base::EventDetectionStatus* PROTOBUF_NULLABLE MovableObject::release_detection_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::sensoris::protobuf::types::base::EventDetectionStatus* released = _impl_.detection_status_;
  _impl_.detection_status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::sensoris::protobuf::types::base::EventDetectionStatus* PROTOBUF_NULLABLE MovableObject::unsafe_arena_release_detection_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.categories.objectdetection.MovableObject.detection_status)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::sensoris::protobuf::types::base::EventDetectionStatus* temp = _impl_.detection_status_;
  _impl_.detection_status_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::types::base::EventDetectionStatus* PROTOBUF_NONNULL MovableObject::_internal_mutable_detection_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.detection_status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::sensoris::protobuf::types::base::EventDetectionStatus>(GetArena());
    _impl_.detection_status_ = reinterpret_cast<::sensoris::protobuf::types::base::EventDetectionStatus*>(p);
  }
  return _impl_.detection_status_;
}
inline ::sensoris::protobuf::types::base::EventDetectionStatus* PROTOBUF_NONNULL MovableObject::mutable_detection_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::sensoris::protobuf::types::base::EventDetectionStatus* _msg = _internal_mutable_detection_status();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.categories.objectdetection.MovableObject.detection_status)
  return _msg;
}
inline void MovableObject::set_allocated_detection_status(::sensoris::protobuf::types::base::EventDetectionStatus* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.detection_status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.detection_status_ = reinterpret_cast<::sensoris::protobuf::types::base::EventDetectionStatus*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.categories.objectdetection.MovableObject.detection_status)
}

// .sensoris.protobuf.categories.objectdetection.MovableObject.TypeAndConfidence type_and_confidence = 5;
inline bool MovableObject::has_type_and_confidence() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.type_and_confidence_ != nullptr);
  return value;
}
inline void MovableObject::clear_type_and_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.type_and_confidence_ != nullptr) _impl_.type_and_confidence_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence& MovableObject::_internal_type_and_confidence() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence* p = _impl_.type_and_confidence_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence&>(::sensoris::protobuf::categories::objectdetection::_MovableObject_TypeAndConfidence_default_instance_);
}
inline const ::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence& MovableObject::type_and_confidence() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.categories.objectdetection.MovableObject.type_and_confidence)
  return _internal_type_and_confidence();
}
inline void MovableObject::unsafe_arena_set_allocated_type_and_confidence(
    ::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.type_and_confidence_);
  }
  _impl_.type_and_confidence_ = reinterpret_cast<::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.categories.objectdetection.MovableObject.type_and_confidence)
}
inline ::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence* PROTOBUF_NULLABLE MovableObject::release_type_and_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence* released = _impl_.type_and_confidence_;
  _impl_.type_and_confidence_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence* PROTOBUF_NULLABLE MovableObject::unsafe_arena_release_type_and_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.categories.objectdetection.MovableObject.type_and_confidence)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence* temp = _impl_.type_and_confidence_;
  _impl_.type_and_confidence_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence* PROTOBUF_NONNULL MovableObject::_internal_mutable_type_and_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.type_and_confidence_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence>(GetArena());
    _impl_.type_and_confidence_ = reinterpret_cast<::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence*>(p);
  }
  return _impl_.type_and_confidence_;
}
inline ::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence* PROTOBUF_NONNULL MovableObject::mutable_type_and_confidence()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence* _msg = _internal_mutable_type_and_confidence();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.categories.objectdetection.MovableObject.type_and_confidence)
  return _msg;
}
inline void MovableObject::set_allocated_type_and_confidence(::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.type_and_confidence_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.type_and_confidence_ = reinterpret_cast<::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.categories.objectdetection.MovableObject.type_and_confidence)
}

// .sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 6;
inline bool MovableObject::has_rectangular_box_and_accuracy() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rectangular_box_and_accuracy_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy& MovableObject::_internal_rectangular_box_and_accuracy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy* p = _impl_.rectangular_box_and_accuracy_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy&>(::sensoris::protobuf::types::spatial::_RectangularBoxAndAccuracy_default_instance_);
}
inline const ::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy& MovableObject::rectangular_box_and_accuracy() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.categories.objectdetection.MovableObject.rectangular_box_and_accuracy)
  return _internal_rectangular_box_and_accuracy();
}
inline void MovableObject::unsafe_arena_set_allocated_rectangular_box_and_accuracy(
    ::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rectangular_box_and_accuracy_);
  }
  _impl_.rectangular_box_and_accuracy_ = reinterpret_cast<::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.categories.objectdetection.MovableObject.rectangular_box_and_accuracy)
}
inline ::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy* PROTOBUF_NULLABLE MovableObject::release_rectangular_box_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy* released = _impl_.rectangular_box_and_accuracy_;
  _impl_.rectangular_box_and_accuracy_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy* PROTOBUF_NULLABLE MovableObject::unsafe_arena_release_rectangular_box_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.categories.objectdetection.MovableObject.rectangular_box_and_accuracy)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy* temp = _impl_.rectangular_box_and_accuracy_;
  _impl_.rectangular_box_and_accuracy_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy* PROTOBUF_NONNULL MovableObject::_internal_mutable_rectangular_box_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rectangular_box_and_accuracy_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy>(GetArena());
    _impl_.rectangular_box_and_accuracy_ = reinterpret_cast<::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy*>(p);
  }
  return _impl_.rectangular_box_and_accuracy_;
}
inline ::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy* PROTOBUF_NONNULL MovableObject::mutable_rectangular_box_and_accuracy()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy* _msg = _internal_mutable_rectangular_box_and_accuracy();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.categories.objectdetection.MovableObject.rectangular_box_and_accuracy)
  return _msg;
}
inline void MovableObject::set_allocated_rectangular_box_and_accuracy(::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rectangular_box_and_accuracy_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.rectangular_box_and_accuracy_ = reinterpret_cast<::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.categories.objectdetection.MovableObject.rectangular_box_and_accuracy)
}

// .sensoris.protobuf.types.spatial.XyzVectorAndAccuracy speed_and_accuracy = 7 [(.sensoris.protobuf.types.base.exponent) = 1];
inline bool MovableObject::has_speed_and_accuracy() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.speed_and_accuracy_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy& MovableObject::_internal_speed_and_accuracy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy* p = _impl_.speed_and_accuracy_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy&>(::sensoris::protobuf::types::spatial::_XyzVectorAndAccuracy_default_instance_);
}
inline const ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy& MovableObject::speed_and_accuracy() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.categories.objectdetection.MovableObject.speed_and_accuracy)
  return _internal_speed_and_accuracy();
}
inline void MovableObject::unsafe_arena_set_allocated_speed_and_accuracy(
    ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.speed_and_accuracy_);
  }
  _impl_.speed_and_accuracy_ = reinterpret_cast<::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.categories.objectdetection.MovableObject.speed_and_accuracy)
}
inline ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy* PROTOBUF_NULLABLE MovableObject::release_speed_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy* released = _impl_.speed_and_accuracy_;
  _impl_.speed_and_accuracy_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy* PROTOBUF_NULLABLE MovableObject::unsafe_arena_release_speed_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.categories.objectdetection.MovableObject.speed_and_accuracy)

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy* temp = _impl_.speed_and_accuracy_;
  _impl_.speed_and_accuracy_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy* PROTOBUF_NONNULL MovableObject::_internal_mutable_speed_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.speed_and_accuracy_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy>(GetArena());
    _impl_.speed_and_accuracy_ = reinterpret_cast<::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy*>(p);
  }
  return _impl_.speed_and_accuracy_;
}
inline ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy* PROTOBUF_NONNULL MovableObject::mutable_speed_and_accuracy()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000040u;
  ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy* _msg = _internal_mutable_speed_and_accuracy();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.categories.objectdetection.MovableObject.speed_and_accuracy)
  return _msg;
}
inline void MovableObject::set_allocated_speed_and_accuracy(::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.speed_and_accuracy_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }

  _impl_.speed_and_accuracy_ = reinterpret_cast<::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.categories.objectdetection.MovableObject.speed_and_accuracy)
}

// .sensoris.protobuf.types.spatial.XyzVectorAndAccuracy acceleration_and_accuracy = 8 [(.sensoris.protobuf.types.base.exponent) = 1];
inline bool MovableObject::has_acceleration_and_accuracy() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.acceleration_and_accuracy_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy& MovableObject::_internal_acceleration_and_accuracy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy* p = _impl_.acceleration_and_accuracy_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy&>(::sensoris::protobuf::types::spatial::_XyzVectorAndAccuracy_default_instance_);
}
inline const ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy& MovableObject::acceleration_and_accuracy() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.categories.objectdetection.MovableObject.acceleration_and_accuracy)
  return _internal_acceleration_and_accuracy();
}
inline void MovableObject::unsafe_arena_set_allocated_acceleration_and_accuracy(
    ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.acceleration_and_accuracy_);
  }
  _impl_.acceleration_and_accuracy_ = reinterpret_cast<::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.categories.objectdetection.MovableObject.acceleration_and_accuracy)
}
inline ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy* PROTOBUF_NULLABLE MovableObject::release_acceleration_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy* released = _impl_.acceleration_and_accuracy_;
  _impl_.acceleration_and_accuracy_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy* PROTOBUF_NULLABLE MovableObject::unsafe_arena_release_acceleration_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.categories.objectdetection.MovableObject.acceleration_and_accuracy)

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy* temp = _impl_.acceleration_and_accuracy_;
  _impl_.acceleration_and_accuracy_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy* PROTOBUF_NONNULL MovableObject::_internal_mutable_acceleration_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.acceleration_and_accuracy_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy>(GetArena());
    _impl_.acceleration_and_accuracy_ = reinterpret_cast<::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy*>(p);
  }
  return _impl_.acceleration_and_accuracy_;
}
inline ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy* PROTOBUF_NONNULL MovableObject::mutable_acceleration_and_accuracy()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000080u;
  ::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy* _msg = _internal_mutable_acceleration_and_accuracy();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.categories.objectdetection.MovableObject.acceleration_and_accuracy)
  return _msg;
}
inline void MovableObject::set_allocated_acceleration_and_accuracy(::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.acceleration_and_accuracy_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }

  _impl_.acceleration_and_accuracy_ = reinterpret_cast<::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.categories.objectdetection.MovableObject.acceleration_and_accuracy)
}

// -------------------------------------------------------------------

// StaticObject_TypeAndConfidence

// .sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence.Type type = 1;
inline void StaticObject_TypeAndConfidence::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence_Type StaticObject_TypeAndConfidence::type() const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence.type)
  return _internal_type();
}
inline void StaticObject_TypeAndConfidence::set_type(::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence_Type value) {
  _internal_set_type(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence.type)
}
inline ::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence_Type StaticObject_TypeAndConfidence::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence_Type>(_impl_.type_);
}
inline void StaticObject_TypeAndConfidence::_internal_set_type(::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence_Type value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// .sensoris.protobuf.types.base.Confidence confidence = 2;
inline bool StaticObject_TypeAndConfidence::has_confidence() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.confidence_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::types::base::Confidence& StaticObject_TypeAndConfidence::_internal_confidence() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::sensoris::protobuf::types::base::Confidence* p = _impl_.confidence_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::types::base::Confidence&>(::sensoris::protobuf::types::base::_Confidence_default_instance_);
}
inline const ::sensoris::protobuf::types::base::Confidence& StaticObject_TypeAndConfidence::confidence() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence.confidence)
  return _internal_confidence();
}
inline void StaticObject_TypeAndConfidence::unsafe_arena_set_allocated_confidence(
    ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.confidence_);
  }
  _impl_.confidence_ = reinterpret_cast<::sensoris::protobuf::types::base::Confidence*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence.confidence)
}
inline ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE StaticObject_TypeAndConfidence::release_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::types::base::Confidence* released = _impl_.confidence_;
  _impl_.confidence_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE StaticObject_TypeAndConfidence::unsafe_arena_release_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence.confidence)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::types::base::Confidence* temp = _impl_.confidence_;
  _impl_.confidence_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NONNULL StaticObject_TypeAndConfidence::_internal_mutable_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.confidence_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::sensoris::protobuf::types::base::Confidence>(GetArena());
    _impl_.confidence_ = reinterpret_cast<::sensoris::protobuf::types::base::Confidence*>(p);
  }
  return _impl_.confidence_;
}
inline ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NONNULL StaticObject_TypeAndConfidence::mutable_confidence()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::sensoris::protobuf::types::base::Confidence* _msg = _internal_mutable_confidence();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence.confidence)
  return _msg;
}
inline void StaticObject_TypeAndConfidence::set_allocated_confidence(::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.confidence_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.confidence_ = reinterpret_cast<::sensoris::protobuf::types::base::Confidence*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence.confidence)
}

// -------------------------------------------------------------------

// StaticObject_ConeAndAccuracy

// .sensoris.protobuf.types.spatial.PositionAndAccuracy lower_position_and_accuracy = 1;
inline bool StaticObject_ConeAndAccuracy::has_lower_position_and_accuracy() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.lower_position_and_accuracy_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::types::spatial::PositionAndAccuracy& StaticObject_ConeAndAccuracy::_internal_lower_position_and_accuracy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::sensoris::protobuf::types::spatial::PositionAndAccuracy* p = _impl_.lower_position_and_accuracy_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::types::spatial::PositionAndAccuracy&>(::sensoris::protobuf::types::spatial::_PositionAndAccuracy_default_instance_);
}
inline const ::sensoris::protobuf::types::spatial::PositionAndAccuracy& StaticObject_ConeAndAccuracy::lower_position_and_accuracy() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy.lower_position_and_accuracy)
  return _internal_lower_position_and_accuracy();
}
inline void StaticObject_ConeAndAccuracy::unsafe_arena_set_allocated_lower_position_and_accuracy(
    ::sensoris::protobuf::types::spatial::PositionAndAccuracy* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.lower_position_and_accuracy_);
  }
  _impl_.lower_position_and_accuracy_ = reinterpret_cast<::sensoris::protobuf::types::spatial::PositionAndAccuracy*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy.lower_position_and_accuracy)
}
inline ::sensoris::protobuf::types::spatial::PositionAndAccuracy* PROTOBUF_NULLABLE StaticObject_ConeAndAccuracy::release_lower_position_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::types::spatial::PositionAndAccuracy* released = _impl_.lower_position_and_accuracy_;
  _impl_.lower_position_and_accuracy_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::sensoris::protobuf::types::spatial::PositionAndAccuracy* PROTOBUF_NULLABLE StaticObject_ConeAndAccuracy::unsafe_arena_release_lower_position_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy.lower_position_and_accuracy)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::types::spatial::PositionAndAccuracy* temp = _impl_.lower_position_and_accuracy_;
  _impl_.lower_position_and_accuracy_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::types::spatial::PositionAndAccuracy* PROTOBUF_NONNULL StaticObject_ConeAndAccuracy::_internal_mutable_lower_position_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.lower_position_and_accuracy_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::sensoris::protobuf::types::spatial::PositionAndAccuracy>(GetArena());
    _impl_.lower_position_and_accuracy_ = reinterpret_cast<::sensoris::protobuf::types::spatial::PositionAndAccuracy*>(p);
  }
  return _impl_.lower_position_and_accuracy_;
}
inline ::sensoris::protobuf::types::spatial::PositionAndAccuracy* PROTOBUF_NONNULL StaticObject_ConeAndAccuracy::mutable_lower_position_and_accuracy()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::sensoris::protobuf::types::spatial::PositionAndAccuracy* _msg = _internal_mutable_lower_position_and_accuracy();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy.lower_position_and_accuracy)
  return _msg;
}
inline void StaticObject_ConeAndAccuracy::set_allocated_lower_position_and_accuracy(::sensoris::protobuf::types::spatial::PositionAndAccuracy* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.lower_position_and_accuracy_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.lower_position_and_accuracy_ = reinterpret_cast<::sensoris::protobuf::types::spatial::PositionAndAccuracy*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy.lower_position_and_accuracy)
}

// .sensoris.protobuf.types.spatial.PositionAndAccuracy upper_position_and_accuracy = 2;
inline bool StaticObject_ConeAndAccuracy::has_upper_position_and_accuracy() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.upper_position_and_accuracy_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::types::spatial::PositionAndAccuracy& StaticObject_ConeAndAccuracy::_internal_upper_position_and_accuracy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::sensoris::protobuf::types::spatial::PositionAndAccuracy* p = _impl_.upper_position_and_accuracy_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::types::spatial::PositionAndAccuracy&>(::sensoris::protobuf::types::spatial::_PositionAndAccuracy_default_instance_);
}
inline const ::sensoris::protobuf::types::spatial::PositionAndAccuracy& StaticObject_ConeAndAccuracy::upper_position_and_accuracy() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy.upper_position_and_accuracy)
  return _internal_upper_position_and_accuracy();
}
inline void StaticObject_ConeAndAccuracy::unsafe_arena_set_allocated_upper_position_and_accuracy(
    ::sensoris::protobuf::types::spatial::PositionAndAccuracy* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.upper_position_and_accuracy_);
  }
  _impl_.upper_position_and_accuracy_ = reinterpret_cast<::sensoris::protobuf::types::spatial::PositionAndAccuracy*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy.upper_position_and_accuracy)
}
inline ::sensoris::protobuf::types::spatial::PositionAndAccuracy* PROTOBUF_NULLABLE StaticObject_ConeAndAccuracy::release_upper_position_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::sensoris::protobuf::types::spatial::PositionAndAccuracy* released = _impl_.upper_position_and_accuracy_;
  _impl_.upper_position_and_accuracy_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::sensoris::protobuf::types::spatial::PositionAndAccuracy* PROTOBUF_NULLABLE StaticObject_ConeAndAccuracy::unsafe_arena_release_upper_position_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy.upper_position_and_accuracy)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::sensoris::protobuf::types::spatial::PositionAndAccuracy* temp = _impl_.upper_position_and_accuracy_;
  _impl_.upper_position_and_accuracy_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::types::spatial::PositionAndAccuracy* PROTOBUF_NONNULL StaticObject_ConeAndAccuracy::_internal_mutable_upper_position_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.upper_position_and_accuracy_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::sensoris::protobuf::types::spatial::PositionAndAccuracy>(GetArena());
    _impl_.upper_position_and_accuracy_ = reinterpret_cast<::sensoris::protobuf::types::spatial::PositionAndAccuracy*>(p);
  }
  return _impl_.upper_position_and_accuracy_;
}
inline ::sensoris::protobuf::types::spatial::PositionAndAccuracy* PROTOBUF_NONNULL StaticObject_ConeAndAccuracy::mutable_upper_position_and_accuracy()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::sensoris::protobuf::types::spatial::PositionAndAccuracy* _msg = _internal_mutable_upper_position_and_accuracy();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy.upper_position_and_accuracy)
  return _msg;
}
inline void StaticObject_ConeAndAccuracy::set_allocated_upper_position_and_accuracy(::sensoris::protobuf::types::spatial::PositionAndAccuracy* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.upper_position_and_accuracy_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.upper_position_and_accuracy_ = reinterpret_cast<::sensoris::protobuf::types::spatial::PositionAndAccuracy*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy.upper_position_and_accuracy)
}

// .sensoris.protobuf.types.base.Int64ValueAndAccuracy lower_diameter_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];
inline bool StaticObject_ConeAndAccuracy::has_lower_diameter_and_accuracy() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.lower_diameter_and_accuracy_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::types::base::Int64ValueAndAccuracy& StaticObject_ConeAndAccuracy::_internal_lower_diameter_and_accuracy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* p = _impl_.lower_diameter_and_accuracy_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::types::base::Int64ValueAndAccuracy&>(::sensoris::protobuf::types::base::_Int64ValueAndAccuracy_default_instance_);
}
inline const ::sensoris::protobuf::types::base::Int64ValueAndAccuracy& StaticObject_ConeAndAccuracy::lower_diameter_and_accuracy() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy.lower_diameter_and_accuracy)
  return _internal_lower_diameter_and_accuracy();
}
inline void StaticObject_ConeAndAccuracy::unsafe_arena_set_allocated_lower_diameter_and_accuracy(
    ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.lower_diameter_and_accuracy_);
  }
  _impl_.lower_diameter_and_accuracy_ = reinterpret_cast<::sensoris::protobuf::types::base::Int64ValueAndAccuracy*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy.lower_diameter_and_accuracy)
}
inline ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NULLABLE StaticObject_ConeAndAccuracy::release_lower_diameter_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* released = _impl_.lower_diameter_and_accuracy_;
  _impl_.lower_diameter_and_accuracy_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NULLABLE StaticObject_ConeAndAccuracy::unsafe_arena_release_lower_diameter_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy.lower_diameter_and_accuracy)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* temp = _impl_.lower_diameter_and_accuracy_;
  _impl_.lower_diameter_and_accuracy_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NONNULL StaticObject_ConeAndAccuracy::_internal_mutable_lower_diameter_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.lower_diameter_and_accuracy_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::sensoris::protobuf::types::base::Int64ValueAndAccuracy>(GetArena());
    _impl_.lower_diameter_and_accuracy_ = reinterpret_cast<::sensoris::protobuf::types::base::Int64ValueAndAccuracy*>(p);
  }
  return _impl_.lower_diameter_and_accuracy_;
}
inline ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NONNULL StaticObject_ConeAndAccuracy::mutable_lower_diameter_and_accuracy()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* _msg = _internal_mutable_lower_diameter_and_accuracy();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy.lower_diameter_and_accuracy)
  return _msg;
}
inline void StaticObject_ConeAndAccuracy::set_allocated_lower_diameter_and_accuracy(::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.lower_diameter_and_accuracy_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.lower_diameter_and_accuracy_ = reinterpret_cast<::sensoris::protobuf::types::base::Int64ValueAndAccuracy*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy.lower_diameter_and_accuracy)
}

// .sensoris.protobuf.types.base.Int64ValueAndAccuracy upper_diameter_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 0];
inline bool StaticObject_ConeAndAccuracy::has_upper_diameter_and_accuracy() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.upper_diameter_and_accuracy_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::types::base::Int64ValueAndAccuracy& StaticObject_ConeAndAccuracy::_internal_upper_diameter_and_accuracy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* p = _impl_.upper_diameter_and_accuracy_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::types::base::Int64ValueAndAccuracy&>(::sensoris::protobuf::types::base::_Int64ValueAndAccuracy_default_instance_);
}
inline const ::sensoris::protobuf::types::base::Int64ValueAndAccuracy& StaticObject_ConeAndAccuracy::upper_diameter_and_accuracy() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy.upper_diameter_and_accuracy)
  return _internal_upper_diameter_and_accuracy();
}
inline void StaticObject_ConeAndAccuracy::unsafe_arena_set_allocated_upper_diameter_and_accuracy(
    ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.upper_diameter_and_accuracy_);
  }
  _impl_.upper_diameter_and_accuracy_ = reinterpret_cast<::sensoris::protobuf::types::base::Int64ValueAndAccuracy*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy.upper_diameter_and_accuracy)
}
inline ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NULLABLE StaticObject_ConeAndAccuracy::release_upper_diameter_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* released = _impl_.upper_diameter_and_accuracy_;
  _impl_.upper_diameter_and_accuracy_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NULLABLE StaticObject_ConeAndAccuracy::unsafe_arena_release_upper_diameter_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy.upper_diameter_and_accuracy)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* temp = _impl_.upper_diameter_and_accuracy_;
  _impl_.upper_diameter_and_accuracy_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NONNULL StaticObject_ConeAndAccuracy::_internal_mutable_upper_diameter_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.upper_diameter_and_accuracy_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::sensoris::protobuf::types::base::Int64ValueAndAccuracy>(GetArena());
    _impl_.upper_diameter_and_accuracy_ = reinterpret_cast<::sensoris::protobuf::types::base::Int64ValueAndAccuracy*>(p);
  }
  return _impl_.upper_diameter_and_accuracy_;
}
inline ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NONNULL StaticObject_ConeAndAccuracy::mutable_upper_diameter_and_accuracy()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* _msg = _internal_mutable_upper_diameter_and_accuracy();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy.upper_diameter_and_accuracy)
  return _msg;
}
inline void StaticObject_ConeAndAccuracy::set_allocated_upper_diameter_and_accuracy(::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.upper_diameter_and_accuracy_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.upper_diameter_and_accuracy_ = reinterpret_cast<::sensoris::protobuf::types::base::Int64ValueAndAccuracy*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy.upper_diameter_and_accuracy)
}

// repeated .google.protobuf.Any extension = 15;
inline int StaticObject_ConeAndAccuracy::_internal_extension_size() const {
  return _internal_extension().size();
}
inline int StaticObject_ConeAndAccuracy::extension_size() const {
  return _internal_extension_size();
}
inline ::google::protobuf::Any* PROTOBUF_NONNULL StaticObject_ConeAndAccuracy::mutable_extension(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy.extension)
  return _internal_mutable_extension()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* PROTOBUF_NONNULL StaticObject_ConeAndAccuracy::mutable_extension()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy.extension)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_extension();
}
inline const ::google::protobuf::Any& StaticObject_ConeAndAccuracy::extension(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy.extension)
  return _internal_extension().Get(index);
}
inline ::google::protobuf::Any* PROTOBUF_NONNULL StaticObject_ConeAndAccuracy::add_extension()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::Any* _add = _internal_mutable_extension()->Add();
  // @@protoc_insertion_point(field_add:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy.extension)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& StaticObject_ConeAndAccuracy::extension() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy.extension)
  return _internal_extension();
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>&
StaticObject_ConeAndAccuracy::_internal_extension() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.extension_;
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* PROTOBUF_NONNULL
StaticObject_ConeAndAccuracy::_internal_mutable_extension() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.extension_;
}

// -------------------------------------------------------------------

// StaticObject_SurfaceTypeAndConfidence

// .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.Type type = 1;
inline void StaticObject_SurfaceTypeAndConfidence::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence_Type StaticObject_SurfaceTypeAndConfidence::type() const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.type)
  return _internal_type();
}
inline void StaticObject_SurfaceTypeAndConfidence::set_type(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence_Type value) {
  _internal_set_type(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.type)
}
inline ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence_Type StaticObject_SurfaceTypeAndConfidence::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence_Type>(_impl_.type_);
}
inline void StaticObject_SurfaceTypeAndConfidence::_internal_set_type(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence_Type value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// .sensoris.protobuf.types.base.Confidence confidence = 2;
inline bool StaticObject_SurfaceTypeAndConfidence::has_confidence() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.confidence_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::types::base::Confidence& StaticObject_SurfaceTypeAndConfidence::_internal_confidence() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::sensoris::protobuf::types::base::Confidence* p = _impl_.confidence_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::types::base::Confidence&>(::sensoris::protobuf::types::base::_Confidence_default_instance_);
}
inline const ::sensoris::protobuf::types::base::Confidence& StaticObject_SurfaceTypeAndConfidence::confidence() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.confidence)
  return _internal_confidence();
}
inline void StaticObject_SurfaceTypeAndConfidence::unsafe_arena_set_allocated_confidence(
    ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.confidence_);
  }
  _impl_.confidence_ = reinterpret_cast<::sensoris::protobuf::types::base::Confidence*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.confidence)
}
inline ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE StaticObject_SurfaceTypeAndConfidence::release_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::types::base::Confidence* released = _impl_.confidence_;
  _impl_.confidence_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE StaticObject_SurfaceTypeAndConfidence::unsafe_arena_release_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.confidence)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::types::base::Confidence* temp = _impl_.confidence_;
  _impl_.confidence_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NONNULL StaticObject_SurfaceTypeAndConfidence::_internal_mutable_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.confidence_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::sensoris::protobuf::types::base::Confidence>(GetArena());
    _impl_.confidence_ = reinterpret_cast<::sensoris::protobuf::types::base::Confidence*>(p);
  }
  return _impl_.confidence_;
}
inline ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NONNULL StaticObject_SurfaceTypeAndConfidence::mutable_confidence()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::sensoris::protobuf::types::base::Confidence* _msg = _internal_mutable_confidence();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.confidence)
  return _msg;
}
inline void StaticObject_SurfaceTypeAndConfidence::set_allocated_confidence(::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.confidence_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.confidence_ = reinterpret_cast<::sensoris::protobuf::types::base::Confidence*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence.confidence)
}

// -------------------------------------------------------------------

// StaticObject_SurfaceMaterialAndConfidence

// .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.Type type = 1;
inline void StaticObject_SurfaceMaterialAndConfidence::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence_Type StaticObject_SurfaceMaterialAndConfidence::type() const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.type)
  return _internal_type();
}
inline void StaticObject_SurfaceMaterialAndConfidence::set_type(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence_Type value) {
  _internal_set_type(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.type)
}
inline ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence_Type StaticObject_SurfaceMaterialAndConfidence::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence_Type>(_impl_.type_);
}
inline void StaticObject_SurfaceMaterialAndConfidence::_internal_set_type(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence_Type value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// .sensoris.protobuf.types.base.Confidence confidence = 2;
inline bool StaticObject_SurfaceMaterialAndConfidence::has_confidence() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.confidence_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::types::base::Confidence& StaticObject_SurfaceMaterialAndConfidence::_internal_confidence() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::sensoris::protobuf::types::base::Confidence* p = _impl_.confidence_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::types::base::Confidence&>(::sensoris::protobuf::types::base::_Confidence_default_instance_);
}
inline const ::sensoris::protobuf::types::base::Confidence& StaticObject_SurfaceMaterialAndConfidence::confidence() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.confidence)
  return _internal_confidence();
}
inline void StaticObject_SurfaceMaterialAndConfidence::unsafe_arena_set_allocated_confidence(
    ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.confidence_);
  }
  _impl_.confidence_ = reinterpret_cast<::sensoris::protobuf::types::base::Confidence*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.confidence)
}
inline ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE StaticObject_SurfaceMaterialAndConfidence::release_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::types::base::Confidence* released = _impl_.confidence_;
  _impl_.confidence_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE StaticObject_SurfaceMaterialAndConfidence::unsafe_arena_release_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.confidence)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::types::base::Confidence* temp = _impl_.confidence_;
  _impl_.confidence_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NONNULL StaticObject_SurfaceMaterialAndConfidence::_internal_mutable_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.confidence_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::sensoris::protobuf::types::base::Confidence>(GetArena());
    _impl_.confidence_ = reinterpret_cast<::sensoris::protobuf::types::base::Confidence*>(p);
  }
  return _impl_.confidence_;
}
inline ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NONNULL StaticObject_SurfaceMaterialAndConfidence::mutable_confidence()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::sensoris::protobuf::types::base::Confidence* _msg = _internal_mutable_confidence();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.confidence)
  return _msg;
}
inline void StaticObject_SurfaceMaterialAndConfidence::set_allocated_confidence(::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.confidence_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.confidence_ = reinterpret_cast<::sensoris::protobuf::types::base::Confidence*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.confidence)
}

// .sensoris.protobuf.types.base.Int64ValueAndAccuracy reflectivity_and_accuracy = 3 [(.sensoris.protobuf.types.base.exponent) = 0];
inline bool StaticObject_SurfaceMaterialAndConfidence::has_reflectivity_and_accuracy() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.reflectivity_and_accuracy_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::types::base::Int64ValueAndAccuracy& StaticObject_SurfaceMaterialAndConfidence::_internal_reflectivity_and_accuracy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* p = _impl_.reflectivity_and_accuracy_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::types::base::Int64ValueAndAccuracy&>(::sensoris::protobuf::types::base::_Int64ValueAndAccuracy_default_instance_);
}
inline const ::sensoris::protobuf::types::base::Int64ValueAndAccuracy& StaticObject_SurfaceMaterialAndConfidence::reflectivity_and_accuracy() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.reflectivity_and_accuracy)
  return _internal_reflectivity_and_accuracy();
}
inline void StaticObject_SurfaceMaterialAndConfidence::unsafe_arena_set_allocated_reflectivity_and_accuracy(
    ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.reflectivity_and_accuracy_);
  }
  _impl_.reflectivity_and_accuracy_ = reinterpret_cast<::sensoris::protobuf::types::base::Int64ValueAndAccuracy*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.reflectivity_and_accuracy)
}
inline ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NULLABLE StaticObject_SurfaceMaterialAndConfidence::release_reflectivity_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* released = _impl_.reflectivity_and_accuracy_;
  _impl_.reflectivity_and_accuracy_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NULLABLE StaticObject_SurfaceMaterialAndConfidence::unsafe_arena_release_reflectivity_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.reflectivity_and_accuracy)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* temp = _impl_.reflectivity_and_accuracy_;
  _impl_.reflectivity_and_accuracy_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NONNULL StaticObject_SurfaceMaterialAndConfidence::_internal_mutable_reflectivity_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.reflectivity_and_accuracy_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::sensoris::protobuf::types::base::Int64ValueAndAccuracy>(GetArena());
    _impl_.reflectivity_and_accuracy_ = reinterpret_cast<::sensoris::protobuf::types::base::Int64ValueAndAccuracy*>(p);
  }
  return _impl_.reflectivity_and_accuracy_;
}
inline ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NONNULL StaticObject_SurfaceMaterialAndConfidence::mutable_reflectivity_and_accuracy()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::sensoris::protobuf::types::base::Int64ValueAndAccuracy* _msg = _internal_mutable_reflectivity_and_accuracy();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.reflectivity_and_accuracy)
  return _msg;
}
inline void StaticObject_SurfaceMaterialAndConfidence::set_allocated_reflectivity_and_accuracy(::sensoris::protobuf::types::base::Int64ValueAndAccuracy* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.reflectivity_and_accuracy_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.reflectivity_and_accuracy_ = reinterpret_cast<::sensoris::protobuf::types::base::Int64ValueAndAccuracy*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence.reflectivity_and_accuracy)
}

// -------------------------------------------------------------------

// StaticObject_SurfaceColorAndConfidence

// .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.Type type = 1;
inline void StaticObject_SurfaceColorAndConfidence::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence_Type StaticObject_SurfaceColorAndConfidence::type() const {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.type)
  return _internal_type();
}
inline void StaticObject_SurfaceColorAndConfidence::set_type(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence_Type value) {
  _internal_set_type(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.type)
}
inline ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence_Type StaticObject_SurfaceColorAndConfidence::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence_Type>(_impl_.type_);
}
inline void StaticObject_SurfaceColorAndConfidence::_internal_set_type(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence_Type value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// .sensoris.protobuf.types.base.Confidence confidence = 2;
inline bool StaticObject_SurfaceColorAndConfidence::has_confidence() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.confidence_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::types::base::Confidence& StaticObject_SurfaceColorAndConfidence::_internal_confidence() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::sensoris::protobuf::types::base::Confidence* p = _impl_.confidence_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::types::base::Confidence&>(::sensoris::protobuf::types::base::_Confidence_default_instance_);
}
inline const ::sensoris::protobuf::types::base::Confidence& StaticObject_SurfaceColorAndConfidence::confidence() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.confidence)
  return _internal_confidence();
}
inline void StaticObject_SurfaceColorAndConfidence::unsafe_arena_set_allocated_confidence(
    ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.confidence_);
  }
  _impl_.confidence_ = reinterpret_cast<::sensoris::protobuf::types::base::Confidence*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.confidence)
}
inline ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE StaticObject_SurfaceColorAndConfidence::release_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::types::base::Confidence* released = _impl_.confidence_;
  _impl_.confidence_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE StaticObject_SurfaceColorAndConfidence::unsafe_arena_release_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.confidence)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::types::base::Confidence* temp = _impl_.confidence_;
  _impl_.confidence_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NONNULL StaticObject_SurfaceColorAndConfidence::_internal_mutable_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.confidence_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::sensoris::protobuf::types::base::Confidence>(GetArena());
    _impl_.confidence_ = reinterpret_cast<::sensoris::protobuf::types::base::Confidence*>(p);
  }
  return _impl_.confidence_;
}
inline ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NONNULL StaticObject_SurfaceColorAndConfidence::mutable_confidence()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::sensoris::protobuf::types::base::Confidence* _msg = _internal_mutable_confidence();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.confidence)
  return _msg;
}
inline void StaticObject_SurfaceColorAndConfidence::set_allocated_confidence(::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.confidence_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.confidence_ = reinterpret_cast<::sensoris::protobuf::types::base::Confidence*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence.confidence)
}

// -------------------------------------------------------------------

// StaticObject

// .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
inline bool StaticObject::has_envelope() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.envelope_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::types::base::EventEnvelope& StaticObject::_internal_envelope() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::sensoris::protobuf::types::base::EventEnvelope* p = _impl_.envelope_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::types::base::EventEnvelope&>(::sensoris::protobuf::types::base::_EventEnvelope_default_instance_);
}
inline const ::sensoris::protobuf::types::base::EventEnvelope& StaticObject::envelope() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.categories.objectdetection.StaticObject.envelope)
  return _internal_envelope();
}
inline void StaticObject::unsafe_arena_set_allocated_envelope(
    ::sensoris::protobuf::types::base::EventEnvelope* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.envelope_);
  }
  _impl_.envelope_ = reinterpret_cast<::sensoris::protobuf::types::base::EventEnvelope*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.categories.objectdetection.StaticObject.envelope)
}
inline ::sensoris::protobuf::types::base::EventEnvelope* PROTOBUF_NULLABLE StaticObject::release_envelope() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::types::base::EventEnvelope* released = _impl_.envelope_;
  _impl_.envelope_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::sensoris::protobuf::types::base::EventEnvelope* PROTOBUF_NULLABLE StaticObject::unsafe_arena_release_envelope() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.categories.objectdetection.StaticObject.envelope)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::types::base::EventEnvelope* temp = _impl_.envelope_;
  _impl_.envelope_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::types::base::EventEnvelope* PROTOBUF_NONNULL StaticObject::_internal_mutable_envelope() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.envelope_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::sensoris::protobuf::types::base::EventEnvelope>(GetArena());
    _impl_.envelope_ = reinterpret_cast<::sensoris::protobuf::types::base::EventEnvelope*>(p);
  }
  return _impl_.envelope_;
}
inline ::sensoris::protobuf::types::base::EventEnvelope* PROTOBUF_NONNULL StaticObject::mutable_envelope()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::sensoris::protobuf::types::base::EventEnvelope* _msg = _internal_mutable_envelope();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.categories.objectdetection.StaticObject.envelope)
  return _msg;
}
inline void StaticObject::set_allocated_envelope(::sensoris::protobuf::types::base::EventEnvelope* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.envelope_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.envelope_ = reinterpret_cast<::sensoris::protobuf::types::base::EventEnvelope*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.categories.objectdetection.StaticObject.envelope)
}

// .google.protobuf.Int64Value object_id = 2;
inline bool StaticObject::has_object_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.object_id_ != nullptr);
  return value;
}
inline const ::google::protobuf::Int64Value& StaticObject::_internal_object_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Int64Value* p = _impl_.object_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Int64Value&>(::google::protobuf::_Int64Value_default_instance_);
}
inline const ::google::protobuf::Int64Value& StaticObject::object_id() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.categories.objectdetection.StaticObject.object_id)
  return _internal_object_id();
}
inline void StaticObject::unsafe_arena_set_allocated_object_id(
    ::google::protobuf::Int64Value* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.object_id_);
  }
  _impl_.object_id_ = reinterpret_cast<::google::protobuf::Int64Value*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.categories.objectdetection.StaticObject.object_id)
}
inline ::google::protobuf::Int64Value* PROTOBUF_NULLABLE StaticObject::release_object_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Int64Value* released = _impl_.object_id_;
  _impl_.object_id_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Int64Value* PROTOBUF_NULLABLE StaticObject::unsafe_arena_release_object_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.categories.objectdetection.StaticObject.object_id)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Int64Value* temp = _impl_.object_id_;
  _impl_.object_id_ = nullptr;
  return temp;
}
inline ::google::protobuf::Int64Value* PROTOBUF_NONNULL StaticObject::_internal_mutable_object_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.object_id_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Int64Value>(GetArena());
    _impl_.object_id_ = reinterpret_cast<::google::protobuf::Int64Value*>(p);
  }
  return _impl_.object_id_;
}
inline ::google::protobuf::Int64Value* PROTOBUF_NONNULL StaticObject::mutable_object_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Int64Value* _msg = _internal_mutable_object_id();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.categories.objectdetection.StaticObject.object_id)
  return _msg;
}
inline void StaticObject::set_allocated_object_id(::google::protobuf::Int64Value* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.object_id_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.object_id_ = reinterpret_cast<::google::protobuf::Int64Value*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.categories.objectdetection.StaticObject.object_id)
}

// .sensoris.protobuf.types.base.Confidence existence_confidence = 3;
inline bool StaticObject::has_existence_confidence() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.existence_confidence_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::types::base::Confidence& StaticObject::_internal_existence_confidence() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::sensoris::protobuf::types::base::Confidence* p = _impl_.existence_confidence_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::types::base::Confidence&>(::sensoris::protobuf::types::base::_Confidence_default_instance_);
}
inline const ::sensoris::protobuf::types::base::Confidence& StaticObject::existence_confidence() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.categories.objectdetection.StaticObject.existence_confidence)
  return _internal_existence_confidence();
}
inline void StaticObject::unsafe_arena_set_allocated_existence_confidence(
    ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.existence_confidence_);
  }
  _impl_.existence_confidence_ = reinterpret_cast<::sensoris::protobuf::types::base::Confidence*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.categories.objectdetection.StaticObject.existence_confidence)
}
inline ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE StaticObject::release_existence_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::sensoris::protobuf::types::base::Confidence* released = _impl_.existence_confidence_;
  _impl_.existence_confidence_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE StaticObject::unsafe_arena_release_existence_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.categories.objectdetection.StaticObject.existence_confidence)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::sensoris::protobuf::types::base::Confidence* temp = _impl_.existence_confidence_;
  _impl_.existence_confidence_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NONNULL StaticObject::_internal_mutable_existence_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.existence_confidence_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::sensoris::protobuf::types::base::Confidence>(GetArena());
    _impl_.existence_confidence_ = reinterpret_cast<::sensoris::protobuf::types::base::Confidence*>(p);
  }
  return _impl_.existence_confidence_;
}
inline ::sensoris::protobuf::types::base::Confidence* PROTOBUF_NONNULL StaticObject::mutable_existence_confidence()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::sensoris::protobuf::types::base::Confidence* _msg = _internal_mutable_existence_confidence();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.categories.objectdetection.StaticObject.existence_confidence)
  return _msg;
}
inline void StaticObject::set_allocated_existence_confidence(::sensoris::protobuf::types::base::Confidence* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.existence_confidence_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.existence_confidence_ = reinterpret_cast<::sensoris::protobuf::types::base::Confidence*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.categories.objectdetection.StaticObject.existence_confidence)
}

// .sensoris.protobuf.types.base.EventDetectionStatus detection_status = 4;
inline bool StaticObject::has_detection_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.detection_status_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::types::base::EventDetectionStatus& StaticObject::_internal_detection_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::sensoris::protobuf::types::base::EventDetectionStatus* p = _impl_.detection_status_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::types::base::EventDetectionStatus&>(::sensoris::protobuf::types::base::_EventDetectionStatus_default_instance_);
}
inline const ::sensoris::protobuf::types::base::EventDetectionStatus& StaticObject::detection_status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.categories.objectdetection.StaticObject.detection_status)
  return _internal_detection_status();
}
inline void StaticObject::unsafe_arena_set_allocated_detection_status(
    ::sensoris::protobuf::types::base::EventDetectionStatus* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.detection_status_);
  }
  _impl_.detection_status_ = reinterpret_cast<::sensoris::protobuf::types::base::EventDetectionStatus*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.categories.objectdetection.StaticObject.detection_status)
}
inline ::sensoris::protobuf::types::base::EventDetectionStatus* PROTOBUF_NULLABLE StaticObject::release_detection_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::sensoris::protobuf::types::base::EventDetectionStatus* released = _impl_.detection_status_;
  _impl_.detection_status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::sensoris::protobuf::types::base::EventDetectionStatus* PROTOBUF_NULLABLE StaticObject::unsafe_arena_release_detection_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.categories.objectdetection.StaticObject.detection_status)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::sensoris::protobuf::types::base::EventDetectionStatus* temp = _impl_.detection_status_;
  _impl_.detection_status_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::types::base::EventDetectionStatus* PROTOBUF_NONNULL StaticObject::_internal_mutable_detection_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.detection_status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::sensoris::protobuf::types::base::EventDetectionStatus>(GetArena());
    _impl_.detection_status_ = reinterpret_cast<::sensoris::protobuf::types::base::EventDetectionStatus*>(p);
  }
  return _impl_.detection_status_;
}
inline ::sensoris::protobuf::types::base::EventDetectionStatus* PROTOBUF_NONNULL StaticObject::mutable_detection_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::sensoris::protobuf::types::base::EventDetectionStatus* _msg = _internal_mutable_detection_status();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.categories.objectdetection.StaticObject.detection_status)
  return _msg;
}
inline void StaticObject::set_allocated_detection_status(::sensoris::protobuf::types::base::EventDetectionStatus* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.detection_status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.detection_status_ = reinterpret_cast<::sensoris::protobuf::types::base::EventDetectionStatus*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.categories.objectdetection.StaticObject.detection_status)
}

// .sensoris.protobuf.categories.objectdetection.StaticObject.TypeAndConfidence type_and_confidence = 5;
inline bool StaticObject::has_type_and_confidence() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.type_and_confidence_ != nullptr);
  return value;
}
inline void StaticObject::clear_type_and_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.type_and_confidence_ != nullptr) _impl_.type_and_confidence_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence& StaticObject::_internal_type_and_confidence() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence* p = _impl_.type_and_confidence_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence&>(::sensoris::protobuf::categories::objectdetection::_StaticObject_TypeAndConfidence_default_instance_);
}
inline const ::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence& StaticObject::type_and_confidence() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.categories.objectdetection.StaticObject.type_and_confidence)
  return _internal_type_and_confidence();
}
inline void StaticObject::unsafe_arena_set_allocated_type_and_confidence(
    ::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.type_and_confidence_);
  }
  _impl_.type_and_confidence_ = reinterpret_cast<::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.categories.objectdetection.StaticObject.type_and_confidence)
}
inline ::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence* PROTOBUF_NULLABLE StaticObject::release_type_and_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence* released = _impl_.type_and_confidence_;
  _impl_.type_and_confidence_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence* PROTOBUF_NULLABLE StaticObject::unsafe_arena_release_type_and_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.categories.objectdetection.StaticObject.type_and_confidence)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence* temp = _impl_.type_and_confidence_;
  _impl_.type_and_confidence_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence* PROTOBUF_NONNULL StaticObject::_internal_mutable_type_and_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.type_and_confidence_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence>(GetArena());
    _impl_.type_and_confidence_ = reinterpret_cast<::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence*>(p);
  }
  return _impl_.type_and_confidence_;
}
inline ::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence* PROTOBUF_NONNULL StaticObject::mutable_type_and_confidence()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence* _msg = _internal_mutable_type_and_confidence();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.categories.objectdetection.StaticObject.type_and_confidence)
  return _msg;
}
inline void StaticObject::set_allocated_type_and_confidence(::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.type_and_confidence_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.type_and_confidence_ = reinterpret_cast<::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.categories.objectdetection.StaticObject.type_and_confidence)
}

// .sensoris.protobuf.types.spatial.RectangularBoxAndAccuracy rectangular_box_and_accuracy = 6;
inline bool StaticObject::has_rectangular_box_and_accuracy() const {
  return geometry_case() == kRectangularBoxAndAccuracy;
}
inline bool StaticObject::_internal_has_rectangular_box_and_accuracy() const {
  return geometry_case() == kRectangularBoxAndAccuracy;
}
inline void StaticObject::set_has_rectangular_box_and_accuracy() {
  _impl_._oneof_case_[0] = kRectangularBoxAndAccuracy;
}
inline ::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy* PROTOBUF_NULLABLE StaticObject::release_rectangular_box_and_accuracy() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.categories.objectdetection.StaticObject.rectangular_box_and_accuracy)
  if (geometry_case() == kRectangularBoxAndAccuracy) {
    clear_has_geometry();
    auto* temp = _impl_.geometry_.rectangular_box_and_accuracy_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.geometry_.rectangular_box_and_accuracy_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy& StaticObject::_internal_rectangular_box_and_accuracy() const {
  return geometry_case() == kRectangularBoxAndAccuracy ? *_impl_.geometry_.rectangular_box_and_accuracy_ : reinterpret_cast<::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy&>(::sensoris::protobuf::types::spatial::_RectangularBoxAndAccuracy_default_instance_);
}
inline const ::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy& StaticObject::rectangular_box_and_accuracy() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.categories.objectdetection.StaticObject.rectangular_box_and_accuracy)
  return _internal_rectangular_box_and_accuracy();
}
inline ::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy* PROTOBUF_NULLABLE StaticObject::unsafe_arena_release_rectangular_box_and_accuracy() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.categories.objectdetection.StaticObject.rectangular_box_and_accuracy)
  if (geometry_case() == kRectangularBoxAndAccuracy) {
    clear_has_geometry();
    auto* temp = _impl_.geometry_.rectangular_box_and_accuracy_;
    _impl_.geometry_.rectangular_box_and_accuracy_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void StaticObject::unsafe_arena_set_allocated_rectangular_box_and_accuracy(
    ::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_geometry();
  if (value) {
    set_has_rectangular_box_and_accuracy();
    _impl_.geometry_.rectangular_box_and_accuracy_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.categories.objectdetection.StaticObject.rectangular_box_and_accuracy)
}
inline ::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy* PROTOBUF_NONNULL StaticObject::_internal_mutable_rectangular_box_and_accuracy() {
  if (geometry_case() != kRectangularBoxAndAccuracy) {
    clear_geometry();
    set_has_rectangular_box_and_accuracy();
    _impl_.geometry_.rectangular_box_and_accuracy_ = 
        ::google::protobuf::Message::DefaultConstruct<::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy>(GetArena());
  }
  return _impl_.geometry_.rectangular_box_and_accuracy_;
}
inline ::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy* PROTOBUF_NONNULL StaticObject::mutable_rectangular_box_and_accuracy()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::types::spatial::RectangularBoxAndAccuracy* _msg = _internal_mutable_rectangular_box_and_accuracy();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.categories.objectdetection.StaticObject.rectangular_box_and_accuracy)
  return _msg;
}

// .sensoris.protobuf.categories.objectdetection.StaticObject.ConeAndAccuracy cone_and_accuracy = 7;
inline bool StaticObject::has_cone_and_accuracy() const {
  return geometry_case() == kConeAndAccuracy;
}
inline bool StaticObject::_internal_has_cone_and_accuracy() const {
  return geometry_case() == kConeAndAccuracy;
}
inline void StaticObject::set_has_cone_and_accuracy() {
  _impl_._oneof_case_[0] = kConeAndAccuracy;
}
inline void StaticObject::clear_cone_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (geometry_case() == kConeAndAccuracy) {
    if (GetArena() == nullptr) {
      delete _impl_.geometry_.cone_and_accuracy_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.geometry_.cone_and_accuracy_);
    }
    clear_has_geometry();
  }
}
inline ::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy* PROTOBUF_NULLABLE StaticObject::release_cone_and_accuracy() {
  // @@protoc_insertion_point(field_release:sensoris.protobuf.categories.objectdetection.StaticObject.cone_and_accuracy)
  if (geometry_case() == kConeAndAccuracy) {
    clear_has_geometry();
    auto* temp = _impl_.geometry_.cone_and_accuracy_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.geometry_.cone_and_accuracy_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy& StaticObject::_internal_cone_and_accuracy() const {
  return geometry_case() == kConeAndAccuracy ? *_impl_.geometry_.cone_and_accuracy_ : reinterpret_cast<::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy&>(::sensoris::protobuf::categories::objectdetection::_StaticObject_ConeAndAccuracy_default_instance_);
}
inline const ::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy& StaticObject::cone_and_accuracy() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.categories.objectdetection.StaticObject.cone_and_accuracy)
  return _internal_cone_and_accuracy();
}
inline ::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy* PROTOBUF_NULLABLE StaticObject::unsafe_arena_release_cone_and_accuracy() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sensoris.protobuf.categories.objectdetection.StaticObject.cone_and_accuracy)
  if (geometry_case() == kConeAndAccuracy) {
    clear_has_geometry();
    auto* temp = _impl_.geometry_.cone_and_accuracy_;
    _impl_.geometry_.cone_and_accuracy_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void StaticObject::unsafe_arena_set_allocated_cone_and_accuracy(
    ::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_geometry();
  if (value) {
    set_has_cone_and_accuracy();
    _impl_.geometry_.cone_and_accuracy_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.categories.objectdetection.StaticObject.cone_and_accuracy)
}
inline ::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy* PROTOBUF_NONNULL StaticObject::_internal_mutable_cone_and_accuracy() {
  if (geometry_case() != kConeAndAccuracy) {
    clear_geometry();
    set_has_cone_and_accuracy();
    _impl_.geometry_.cone_and_accuracy_ = 
        ::google::protobuf::Message::DefaultConstruct<::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy>(GetArena());
  }
  return _impl_.geometry_.cone_and_accuracy_;
}
inline ::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy* PROTOBUF_NONNULL StaticObject::mutable_cone_and_accuracy()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::sensoris::protobuf::categories::objectdetection::StaticObject_ConeAndAccuracy* _msg = _internal_mutable_cone_and_accuracy();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.categories.objectdetection.StaticObject.cone_and_accuracy)
  return _msg;
}

// .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceTypeAndConfidence surface_type_and_confidence = 8;
inline bool StaticObject::has_surface_type_and_confidence() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.surface_type_and_confidence_ != nullptr);
  return value;
}
inline void StaticObject::clear_surface_type_and_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.surface_type_and_confidence_ != nullptr) _impl_.surface_type_and_confidence_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence& StaticObject::_internal_surface_type_and_confidence() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence* p = _impl_.surface_type_and_confidence_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence&>(::sensoris::protobuf::categories::objectdetection::_StaticObject_SurfaceTypeAndConfidence_default_instance_);
}
inline const ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence& StaticObject::surface_type_and_confidence() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.categories.objectdetection.StaticObject.surface_type_and_confidence)
  return _internal_surface_type_and_confidence();
}
inline void StaticObject::unsafe_arena_set_allocated_surface_type_and_confidence(
    ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.surface_type_and_confidence_);
  }
  _impl_.surface_type_and_confidence_ = reinterpret_cast<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.categories.objectdetection.StaticObject.surface_type_and_confidence)
}
inline ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence* PROTOBUF_NULLABLE StaticObject::release_surface_type_and_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence* released = _impl_.surface_type_and_confidence_;
  _impl_.surface_type_and_confidence_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence* PROTOBUF_NULLABLE StaticObject::unsafe_arena_release_surface_type_and_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.categories.objectdetection.StaticObject.surface_type_and_confidence)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence* temp = _impl_.surface_type_and_confidence_;
  _impl_.surface_type_and_confidence_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence* PROTOBUF_NONNULL StaticObject::_internal_mutable_surface_type_and_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.surface_type_and_confidence_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence>(GetArena());
    _impl_.surface_type_and_confidence_ = reinterpret_cast<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence*>(p);
  }
  return _impl_.surface_type_and_confidence_;
}
inline ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence* PROTOBUF_NONNULL StaticObject::mutable_surface_type_and_confidence()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence* _msg = _internal_mutable_surface_type_and_confidence();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.categories.objectdetection.StaticObject.surface_type_and_confidence)
  return _msg;
}
inline void StaticObject::set_allocated_surface_type_and_confidence(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.surface_type_and_confidence_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.surface_type_and_confidence_ = reinterpret_cast<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.categories.objectdetection.StaticObject.surface_type_and_confidence)
}

// .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceMaterialAndConfidence surface_material_and_confidence = 9;
inline bool StaticObject::has_surface_material_and_confidence() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.surface_material_and_confidence_ != nullptr);
  return value;
}
inline void StaticObject::clear_surface_material_and_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.surface_material_and_confidence_ != nullptr) _impl_.surface_material_and_confidence_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline const ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence& StaticObject::_internal_surface_material_and_confidence() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence* p = _impl_.surface_material_and_confidence_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence&>(::sensoris::protobuf::categories::objectdetection::_StaticObject_SurfaceMaterialAndConfidence_default_instance_);
}
inline const ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence& StaticObject::surface_material_and_confidence() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.categories.objectdetection.StaticObject.surface_material_and_confidence)
  return _internal_surface_material_and_confidence();
}
inline void StaticObject::unsafe_arena_set_allocated_surface_material_and_confidence(
    ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.surface_material_and_confidence_);
  }
  _impl_.surface_material_and_confidence_ = reinterpret_cast<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.categories.objectdetection.StaticObject.surface_material_and_confidence)
}
inline ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence* PROTOBUF_NULLABLE StaticObject::release_surface_material_and_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence* released = _impl_.surface_material_and_confidence_;
  _impl_.surface_material_and_confidence_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence* PROTOBUF_NULLABLE StaticObject::unsafe_arena_release_surface_material_and_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.categories.objectdetection.StaticObject.surface_material_and_confidence)

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence* temp = _impl_.surface_material_and_confidence_;
  _impl_.surface_material_and_confidence_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence* PROTOBUF_NONNULL StaticObject::_internal_mutable_surface_material_and_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.surface_material_and_confidence_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence>(GetArena());
    _impl_.surface_material_and_confidence_ = reinterpret_cast<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence*>(p);
  }
  return _impl_.surface_material_and_confidence_;
}
inline ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence* PROTOBUF_NONNULL StaticObject::mutable_surface_material_and_confidence()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000040u;
  ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence* _msg = _internal_mutable_surface_material_and_confidence();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.categories.objectdetection.StaticObject.surface_material_and_confidence)
  return _msg;
}
inline void StaticObject::set_allocated_surface_material_and_confidence(::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.surface_material_and_confidence_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }

  _impl_.surface_material_and_confidence_ = reinterpret_cast<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.categories.objectdetection.StaticObject.surface_material_and_confidence)
}

// repeated .sensoris.protobuf.categories.objectdetection.StaticObject.SurfaceColorAndConfidence surface_color_and_confidence = 10;
inline int StaticObject::_internal_surface_color_and_confidence_size() const {
  return _internal_surface_color_and_confidence().size();
}
inline int StaticObject::surface_color_and_confidence_size() const {
  return _internal_surface_color_and_confidence_size();
}
inline void StaticObject::clear_surface_color_and_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.surface_color_and_confidence_.Clear();
}
inline ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence* PROTOBUF_NONNULL StaticObject::mutable_surface_color_and_confidence(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.categories.objectdetection.StaticObject.surface_color_and_confidence)
  return _internal_mutable_surface_color_and_confidence()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence>* PROTOBUF_NONNULL StaticObject::mutable_surface_color_and_confidence()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.categories.objectdetection.StaticObject.surface_color_and_confidence)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_surface_color_and_confidence();
}
inline const ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence& StaticObject::surface_color_and_confidence(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.categories.objectdetection.StaticObject.surface_color_and_confidence)
  return _internal_surface_color_and_confidence().Get(index);
}
inline ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence* PROTOBUF_NONNULL StaticObject::add_surface_color_and_confidence()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence* _add = _internal_mutable_surface_color_and_confidence()->Add();
  // @@protoc_insertion_point(field_add:sensoris.protobuf.categories.objectdetection.StaticObject.surface_color_and_confidence)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence>& StaticObject::surface_color_and_confidence() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.categories.objectdetection.StaticObject.surface_color_and_confidence)
  return _internal_surface_color_and_confidence();
}
inline const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence>&
StaticObject::_internal_surface_color_and_confidence() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.surface_color_and_confidence_;
}
inline ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence>* PROTOBUF_NONNULL
StaticObject::_internal_mutable_surface_color_and_confidence() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.surface_color_and_confidence_;
}

inline bool StaticObject::has_geometry() const {
  return geometry_case() != GEOMETRY_NOT_SET;
}
inline void StaticObject::clear_has_geometry() {
  _impl_._oneof_case_[0] = GEOMETRY_NOT_SET;
}
inline StaticObject::GeometryCase StaticObject::geometry_case() const {
  return StaticObject::GeometryCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// ObjectDetectionCategory

// .sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
inline bool ObjectDetectionCategory::has_envelope() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.envelope_ != nullptr);
  return value;
}
inline const ::sensoris::protobuf::types::base::CategoryEnvelope& ObjectDetectionCategory::_internal_envelope() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::sensoris::protobuf::types::base::CategoryEnvelope* p = _impl_.envelope_;
  return p != nullptr ? *p : reinterpret_cast<const ::sensoris::protobuf::types::base::CategoryEnvelope&>(::sensoris::protobuf::types::base::_CategoryEnvelope_default_instance_);
}
inline const ::sensoris::protobuf::types::base::CategoryEnvelope& ObjectDetectionCategory::envelope() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory.envelope)
  return _internal_envelope();
}
inline void ObjectDetectionCategory::unsafe_arena_set_allocated_envelope(
    ::sensoris::protobuf::types::base::CategoryEnvelope* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.envelope_);
  }
  _impl_.envelope_ = reinterpret_cast<::sensoris::protobuf::types::base::CategoryEnvelope*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory.envelope)
}
inline ::sensoris::protobuf::types::base::CategoryEnvelope* PROTOBUF_NULLABLE ObjectDetectionCategory::release_envelope() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::types::base::CategoryEnvelope* released = _impl_.envelope_;
  _impl_.envelope_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::sensoris::protobuf::types::base::CategoryEnvelope* PROTOBUF_NULLABLE ObjectDetectionCategory::unsafe_arena_release_envelope() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory.envelope)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sensoris::protobuf::types::base::CategoryEnvelope* temp = _impl_.envelope_;
  _impl_.envelope_ = nullptr;
  return temp;
}
inline ::sensoris::protobuf::types::base::CategoryEnvelope* PROTOBUF_NONNULL ObjectDetectionCategory::_internal_mutable_envelope() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.envelope_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::sensoris::protobuf::types::base::CategoryEnvelope>(GetArena());
    _impl_.envelope_ = reinterpret_cast<::sensoris::protobuf::types::base::CategoryEnvelope*>(p);
  }
  return _impl_.envelope_;
}
inline ::sensoris::protobuf::types::base::CategoryEnvelope* PROTOBUF_NONNULL ObjectDetectionCategory::mutable_envelope()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::sensoris::protobuf::types::base::CategoryEnvelope* _msg = _internal_mutable_envelope();
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory.envelope)
  return _msg;
}
inline void ObjectDetectionCategory::set_allocated_envelope(::sensoris::protobuf::types::base::CategoryEnvelope* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.envelope_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.envelope_ = reinterpret_cast<::sensoris::protobuf::types::base::CategoryEnvelope*>(value);
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory.envelope)
}

// repeated .sensoris.protobuf.categories.objectdetection.MovableObject movable_object = 2;
inline int ObjectDetectionCategory::_internal_movable_object_size() const {
  return _internal_movable_object().size();
}
inline int ObjectDetectionCategory::movable_object_size() const {
  return _internal_movable_object_size();
}
inline void ObjectDetectionCategory::clear_movable_object() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.movable_object_.Clear();
}
inline ::sensoris::protobuf::categories::objectdetection::MovableObject* PROTOBUF_NONNULL ObjectDetectionCategory::mutable_movable_object(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory.movable_object)
  return _internal_mutable_movable_object()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::categories::objectdetection::MovableObject>* PROTOBUF_NONNULL ObjectDetectionCategory::mutable_movable_object()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory.movable_object)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_movable_object();
}
inline const ::sensoris::protobuf::categories::objectdetection::MovableObject& ObjectDetectionCategory::movable_object(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory.movable_object)
  return _internal_movable_object().Get(index);
}
inline ::sensoris::protobuf::categories::objectdetection::MovableObject* PROTOBUF_NONNULL ObjectDetectionCategory::add_movable_object()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::sensoris::protobuf::categories::objectdetection::MovableObject* _add = _internal_mutable_movable_object()->Add();
  // @@protoc_insertion_point(field_add:sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory.movable_object)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::categories::objectdetection::MovableObject>& ObjectDetectionCategory::movable_object() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory.movable_object)
  return _internal_movable_object();
}
inline const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::categories::objectdetection::MovableObject>&
ObjectDetectionCategory::_internal_movable_object() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.movable_object_;
}
inline ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::categories::objectdetection::MovableObject>* PROTOBUF_NONNULL
ObjectDetectionCategory::_internal_mutable_movable_object() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.movable_object_;
}

// repeated .sensoris.protobuf.categories.objectdetection.StaticObject static_object = 3;
inline int ObjectDetectionCategory::_internal_static_object_size() const {
  return _internal_static_object().size();
}
inline int ObjectDetectionCategory::static_object_size() const {
  return _internal_static_object_size();
}
inline void ObjectDetectionCategory::clear_static_object() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.static_object_.Clear();
}
inline ::sensoris::protobuf::categories::objectdetection::StaticObject* PROTOBUF_NONNULL ObjectDetectionCategory::mutable_static_object(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory.static_object)
  return _internal_mutable_static_object()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::categories::objectdetection::StaticObject>* PROTOBUF_NONNULL ObjectDetectionCategory::mutable_static_object()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory.static_object)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_static_object();
}
inline const ::sensoris::protobuf::categories::objectdetection::StaticObject& ObjectDetectionCategory::static_object(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory.static_object)
  return _internal_static_object().Get(index);
}
inline ::sensoris::protobuf::categories::objectdetection::StaticObject* PROTOBUF_NONNULL ObjectDetectionCategory::add_static_object()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::sensoris::protobuf::categories::objectdetection::StaticObject* _add = _internal_mutable_static_object()->Add();
  // @@protoc_insertion_point(field_add:sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory.static_object)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::categories::objectdetection::StaticObject>& ObjectDetectionCategory::static_object() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sensoris.protobuf.categories.objectdetection.ObjectDetectionCategory.static_object)
  return _internal_static_object();
}
inline const ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::categories::objectdetection::StaticObject>&
ObjectDetectionCategory::_internal_static_object() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.static_object_;
}
inline ::google::protobuf::RepeatedPtrField<::sensoris::protobuf::categories::objectdetection::StaticObject>* PROTOBUF_NONNULL
ObjectDetectionCategory::_internal_mutable_static_object() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.static_object_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace objectdetection
}  // namespace categories
}  // namespace protobuf
}  // namespace sensoris


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence_Type> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence_Type>() {
  return ::sensoris::protobuf::categories::objectdetection::MovableObject_TypeAndConfidence_Type_descriptor();
}
template <>
struct is_proto_enum<::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence_Type> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence_Type>() {
  return ::sensoris::protobuf::categories::objectdetection::StaticObject_TypeAndConfidence_Type_descriptor();
}
template <>
struct is_proto_enum<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence_Type> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence_Type>() {
  return ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceTypeAndConfidence_Type_descriptor();
}
template <>
struct is_proto_enum<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence_Type> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence_Type>() {
  return ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceMaterialAndConfidence_Type_descriptor();
}
template <>
struct is_proto_enum<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence_Type> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence_Type>() {
  return ::sensoris::protobuf::categories::objectdetection::StaticObject_SurfaceColorAndConfidence_Type_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // sensoris_2fprotobuf_2fcategories_2fobject_5fdetection_2eproto_2epb_2eh
