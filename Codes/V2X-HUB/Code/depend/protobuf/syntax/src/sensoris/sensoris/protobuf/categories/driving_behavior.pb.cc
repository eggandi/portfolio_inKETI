// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: sensoris/protobuf/categories/driving_behavior.proto
// Protobuf C++ Version: 6.31.1

#include "sensoris/protobuf/categories/driving_behavior.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace sensoris {
namespace protobuf {
namespace categories {
namespace drivingbehavior {

inline constexpr ParkingStatus_StatusAndConfidence::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        confidence_{nullptr},
        type_{static_cast< ::sensoris::protobuf::categories::drivingbehavior::ParkingStatus_StatusAndConfidence_Type >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR ParkingStatus_StatusAndConfidence::ParkingStatus_StatusAndConfidence(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ParkingStatus_StatusAndConfidence_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ParkingStatus_StatusAndConfidenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ParkingStatus_StatusAndConfidenceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ParkingStatus_StatusAndConfidenceDefaultTypeInternal() {}
  union {
    ParkingStatus_StatusAndConfidence _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ParkingStatus_StatusAndConfidenceDefaultTypeInternal _ParkingStatus_StatusAndConfidence_default_instance_;

inline constexpr ParkingStatus_DirectionAndConfidence::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        confidence_{nullptr},
        type_{static_cast< ::sensoris::protobuf::categories::drivingbehavior::ParkingStatus_DirectionAndConfidence_Type >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR ParkingStatus_DirectionAndConfidence::ParkingStatus_DirectionAndConfidence(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ParkingStatus_DirectionAndConfidence_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ParkingStatus_DirectionAndConfidenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ParkingStatus_DirectionAndConfidenceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ParkingStatus_DirectionAndConfidenceDefaultTypeInternal() {}
  union {
    ParkingStatus_DirectionAndConfidence _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ParkingStatus_DirectionAndConfidenceDefaultTypeInternal _ParkingStatus_DirectionAndConfidence_default_instance_;

inline constexpr ParkingStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        envelope_{nullptr},
        status_and_confidence_{nullptr},
        direction_and_confidence_{nullptr},
        duration_and_accuracy_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ParkingStatus::ParkingStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ParkingStatus_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ParkingStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ParkingStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ParkingStatusDefaultTypeInternal() {}
  union {
    ParkingStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ParkingStatusDefaultTypeInternal _ParkingStatus_default_instance_;

inline constexpr DrivingBehaviorCategory::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        parking_status_{},
        envelope_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DrivingBehaviorCategory::DrivingBehaviorCategory(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(DrivingBehaviorCategory_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DrivingBehaviorCategoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DrivingBehaviorCategoryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DrivingBehaviorCategoryDefaultTypeInternal() {}
  union {
    DrivingBehaviorCategory _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DrivingBehaviorCategoryDefaultTypeInternal _DrivingBehaviorCategory_default_instance_;
}  // namespace drivingbehavior
}  // namespace categories
}  // namespace protobuf
}  // namespace sensoris
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto = nullptr;
const ::uint32_t
    TableStruct_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::drivingbehavior::ParkingStatus_StatusAndConfidence, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::drivingbehavior::ParkingStatus_StatusAndConfidence, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::drivingbehavior::ParkingStatus_StatusAndConfidence, _impl_.confidence_),
        1,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::drivingbehavior::ParkingStatus_DirectionAndConfidence, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::drivingbehavior::ParkingStatus_DirectionAndConfidence, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::drivingbehavior::ParkingStatus_DirectionAndConfidence, _impl_.confidence_),
        1,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::drivingbehavior::ParkingStatus, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::drivingbehavior::ParkingStatus, _impl_.envelope_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::drivingbehavior::ParkingStatus, _impl_.status_and_confidence_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::drivingbehavior::ParkingStatus, _impl_.direction_and_confidence_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::drivingbehavior::ParkingStatus, _impl_.duration_and_accuracy_),
        0,
        1,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory, _impl_.envelope_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory, _impl_.parking_status_),
        0,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::sensoris::protobuf::categories::drivingbehavior::ParkingStatus_StatusAndConfidence)},
        {7, sizeof(::sensoris::protobuf::categories::drivingbehavior::ParkingStatus_DirectionAndConfidence)},
        {14, sizeof(::sensoris::protobuf::categories::drivingbehavior::ParkingStatus)},
        {25, sizeof(::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::sensoris::protobuf::categories::drivingbehavior::_ParkingStatus_StatusAndConfidence_default_instance_._instance,
    &::sensoris::protobuf::categories::drivingbehavior::_ParkingStatus_DirectionAndConfidence_default_instance_._instance,
    &::sensoris::protobuf::categories::drivingbehavior::_ParkingStatus_default_instance_._instance,
    &::sensoris::protobuf::categories::drivingbehavior::_DrivingBehaviorCategory_default_instance_._instance,
};
const char descriptor_table_protodef_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n3sensoris/protobuf/categories/driving_b"
    "ehavior.proto\022,sensoris.protobuf.categor"
    "ies.drivingbehavior\032\"sensoris/protobuf/t"
    "ypes/base.proto\"\204\007\n\rParkingStatus\022=\n\010env"
    "elope\030\001 \001(\0132+.sensoris.protobuf.types.ba"
    "se.EventEnvelope\022n\n\025status_and_confidenc"
    "e\030\002 \001(\0132O.sensoris.protobuf.categories.d"
    "rivingbehavior.ParkingStatus.StatusAndCo"
    "nfidence\022t\n\030direction_and_confidence\030\003 \001"
    "(\0132R.sensoris.protobuf.categories.drivin"
    "gbehavior.ParkingStatus.DirectionAndConf"
    "idence\022X\n\025duration_and_accuracy\030\004 \001(\01323."
    "sensoris.protobuf.types.base.Int64ValueA"
    "ndAccuracyB\004\210\265\030\000\032\354\001\n\023StatusAndConfidence"
    "\022b\n\004type\030\001 \001(\0162T.sensoris.protobuf.categ"
    "ories.drivingbehavior.ParkingStatus.Stat"
    "usAndConfidence.Type\022<\n\nconfidence\030\002 \001(\013"
    "2(.sensoris.protobuf.types.base.Confiden"
    "ce\"3\n\004Type\022\020\n\014UNKNOWN_TYPE\020\000\022\013\n\007PARK_IN\020"
    "\001\022\014\n\010PARK_OUT\020\002\032\204\002\n\026DirectionAndConfiden"
    "ce\022e\n\004type\030\001 \001(\0162W.sensoris.protobuf.cat"
    "egories.drivingbehavior.ParkingStatus.Di"
    "rectionAndConfidence.Type\022<\n\nconfidence\030"
    "\002 \001(\0132(.sensoris.protobuf.types.base.Con"
    "fidence\"E\n\004Type\022\020\n\014UNKNOWN_TYPE\020\000\022\020\n\014LON"
    "GITUDINAL\020\001\022\013\n\007LATERAL\020\002\022\014\n\010DIAGONAL\020\003\"\260"
    "\001\n\027DrivingBehaviorCategory\022@\n\010envelope\030\001"
    " \001(\0132..sensoris.protobuf.types.base.Cate"
    "goryEnvelope\022S\n\016parking_status\030\002 \003(\0132;.s"
    "ensoris.protobuf.categories.drivingbehav"
    "ior.ParkingStatusB\206\001\n\'org.sensoris.categ"
    "ories.drivingbehaviorB\037SensorisDrivingBe"
    "haviorCategoryP\001Z5sensoris.org/specifica"
    "tion/categories/drivingbehavior\370\001\001b\006prot"
    "o3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto_deps[1] = {
        &::descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
};
static ::absl::once_flag descriptor_table_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto = {
    false,
    false,
    1362,
    descriptor_table_protodef_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto,
    "sensoris/protobuf/categories/driving_behavior.proto",
    &descriptor_table_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto_once,
    descriptor_table_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto_deps,
    1,
    4,
    schemas,
    file_default_instances,
    TableStruct_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto::offsets,
    file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto,
    file_level_service_descriptors_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto,
};
namespace sensoris {
namespace protobuf {
namespace categories {
namespace drivingbehavior {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ParkingStatus_StatusAndConfidence_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto);
  return file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t ParkingStatus_StatusAndConfidence_Type_internal_data_[] = {
    196608u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ParkingStatus_DirectionAndConfidence_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto);
  return file_level_enum_descriptors_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t ParkingStatus_DirectionAndConfidence_Type_internal_data_[] = {
    262144u, 0u, };
// ===================================================================

class ParkingStatus_StatusAndConfidence::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ParkingStatus_StatusAndConfidence>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ParkingStatus_StatusAndConfidence, _impl_._has_bits_);
};

void ParkingStatus_StatusAndConfidence::clear_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.confidence_ != nullptr) _impl_.confidence_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ParkingStatus_StatusAndConfidence::ParkingStatus_StatusAndConfidence(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ParkingStatus_StatusAndConfidence_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.drivingbehavior.ParkingStatus.StatusAndConfidence)
}
PROTOBUF_NDEBUG_INLINE ParkingStatus_StatusAndConfidence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::categories::drivingbehavior::ParkingStatus_StatusAndConfidence& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ParkingStatus_StatusAndConfidence::ParkingStatus_StatusAndConfidence(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ParkingStatus_StatusAndConfidence& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ParkingStatus_StatusAndConfidence_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ParkingStatus_StatusAndConfidence* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.confidence_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.confidence_)
                : nullptr;
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.drivingbehavior.ParkingStatus.StatusAndConfidence)
}
PROTOBUF_NDEBUG_INLINE ParkingStatus_StatusAndConfidence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ParkingStatus_StatusAndConfidence::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, confidence_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, confidence_) +
               sizeof(Impl_::type_));
}
ParkingStatus_StatusAndConfidence::~ParkingStatus_StatusAndConfidence() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.drivingbehavior.ParkingStatus.StatusAndConfidence)
  SharedDtor(*this);
}
inline void ParkingStatus_StatusAndConfidence::SharedDtor(MessageLite& self) {
  ParkingStatus_StatusAndConfidence& this_ = static_cast<ParkingStatus_StatusAndConfidence&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.confidence_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ParkingStatus_StatusAndConfidence::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ParkingStatus_StatusAndConfidence(arena);
}
constexpr auto ParkingStatus_StatusAndConfidence::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ParkingStatus_StatusAndConfidence),
                                            alignof(ParkingStatus_StatusAndConfidence));
}
constexpr auto ParkingStatus_StatusAndConfidence::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ParkingStatus_StatusAndConfidence_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ParkingStatus_StatusAndConfidence::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ParkingStatus_StatusAndConfidence>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ParkingStatus_StatusAndConfidence::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ParkingStatus_StatusAndConfidence>(), &ParkingStatus_StatusAndConfidence::ByteSizeLong,
              &ParkingStatus_StatusAndConfidence::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ParkingStatus_StatusAndConfidence, _impl_._cached_size_),
          false,
      },
      &ParkingStatus_StatusAndConfidence::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ParkingStatus_StatusAndConfidence_class_data_ =
        ParkingStatus_StatusAndConfidence::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ParkingStatus_StatusAndConfidence::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ParkingStatus_StatusAndConfidence_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ParkingStatus_StatusAndConfidence_class_data_.tc_table);
  return ParkingStatus_StatusAndConfidence_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
ParkingStatus_StatusAndConfidence::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ParkingStatus_StatusAndConfidence, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ParkingStatus_StatusAndConfidence_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::drivingbehavior::ParkingStatus_StatusAndConfidence>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ParkingStatus_StatusAndConfidence, _impl_.confidence_)}},
    // .sensoris.protobuf.categories.drivingbehavior.ParkingStatus.StatusAndConfidence.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ParkingStatus_StatusAndConfidence, _impl_.type_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(ParkingStatus_StatusAndConfidence, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.categories.drivingbehavior.ParkingStatus.StatusAndConfidence.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(ParkingStatus_StatusAndConfidence, _impl_.type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    {PROTOBUF_FIELD_OFFSET(ParkingStatus_StatusAndConfidence, _impl_.confidence_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Confidence>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ParkingStatus_StatusAndConfidence::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.drivingbehavior.ParkingStatus.StatusAndConfidence)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.confidence_ != nullptr);
    _impl_.confidence_->Clear();
  }
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ParkingStatus_StatusAndConfidence::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ParkingStatus_StatusAndConfidence& this_ = static_cast<const ParkingStatus_StatusAndConfidence&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ParkingStatus_StatusAndConfidence::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ParkingStatus_StatusAndConfidence& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.drivingbehavior.ParkingStatus.StatusAndConfidence)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .sensoris.protobuf.categories.drivingbehavior.ParkingStatus.StatusAndConfidence.Type type = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_type(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.Confidence confidence = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.confidence_, this_._impl_.confidence_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.drivingbehavior.ParkingStatus.StatusAndConfidence)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ParkingStatus_StatusAndConfidence::ByteSizeLong(const MessageLite& base) {
  const ParkingStatus_StatusAndConfidence& this_ = static_cast<const ParkingStatus_StatusAndConfidence&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ParkingStatus_StatusAndConfidence::ByteSizeLong() const {
  const ParkingStatus_StatusAndConfidence& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.drivingbehavior.ParkingStatus.StatusAndConfidence)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.confidence_);
    }
    // .sensoris.protobuf.categories.drivingbehavior.ParkingStatus.StatusAndConfidence.Type type = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ParkingStatus_StatusAndConfidence::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ParkingStatus_StatusAndConfidence*>(&to_msg);
  auto& from = static_cast<const ParkingStatus_StatusAndConfidence&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.drivingbehavior.ParkingStatus.StatusAndConfidence)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.confidence_ != nullptr);
      if (_this->_impl_.confidence_ == nullptr) {
        _this->_impl_.confidence_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.confidence_);
      } else {
        _this->_impl_.confidence_->MergeFrom(*from._impl_.confidence_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_type() != 0) {
        _this->_impl_.type_ = from._impl_.type_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ParkingStatus_StatusAndConfidence::CopyFrom(const ParkingStatus_StatusAndConfidence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.drivingbehavior.ParkingStatus.StatusAndConfidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ParkingStatus_StatusAndConfidence::InternalSwap(ParkingStatus_StatusAndConfidence* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ParkingStatus_StatusAndConfidence, _impl_.type_)
      + sizeof(ParkingStatus_StatusAndConfidence::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(ParkingStatus_StatusAndConfidence, _impl_.confidence_)>(
          reinterpret_cast<char*>(&_impl_.confidence_),
          reinterpret_cast<char*>(&other->_impl_.confidence_));
}

::google::protobuf::Metadata ParkingStatus_StatusAndConfidence::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ParkingStatus_DirectionAndConfidence::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ParkingStatus_DirectionAndConfidence>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ParkingStatus_DirectionAndConfidence, _impl_._has_bits_);
};

void ParkingStatus_DirectionAndConfidence::clear_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.confidence_ != nullptr) _impl_.confidence_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ParkingStatus_DirectionAndConfidence::ParkingStatus_DirectionAndConfidence(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ParkingStatus_DirectionAndConfidence_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.drivingbehavior.ParkingStatus.DirectionAndConfidence)
}
PROTOBUF_NDEBUG_INLINE ParkingStatus_DirectionAndConfidence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::categories::drivingbehavior::ParkingStatus_DirectionAndConfidence& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ParkingStatus_DirectionAndConfidence::ParkingStatus_DirectionAndConfidence(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ParkingStatus_DirectionAndConfidence& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ParkingStatus_DirectionAndConfidence_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ParkingStatus_DirectionAndConfidence* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.confidence_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.confidence_)
                : nullptr;
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.drivingbehavior.ParkingStatus.DirectionAndConfidence)
}
PROTOBUF_NDEBUG_INLINE ParkingStatus_DirectionAndConfidence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ParkingStatus_DirectionAndConfidence::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, confidence_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, confidence_) +
               sizeof(Impl_::type_));
}
ParkingStatus_DirectionAndConfidence::~ParkingStatus_DirectionAndConfidence() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.drivingbehavior.ParkingStatus.DirectionAndConfidence)
  SharedDtor(*this);
}
inline void ParkingStatus_DirectionAndConfidence::SharedDtor(MessageLite& self) {
  ParkingStatus_DirectionAndConfidence& this_ = static_cast<ParkingStatus_DirectionAndConfidence&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.confidence_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ParkingStatus_DirectionAndConfidence::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ParkingStatus_DirectionAndConfidence(arena);
}
constexpr auto ParkingStatus_DirectionAndConfidence::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ParkingStatus_DirectionAndConfidence),
                                            alignof(ParkingStatus_DirectionAndConfidence));
}
constexpr auto ParkingStatus_DirectionAndConfidence::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ParkingStatus_DirectionAndConfidence_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ParkingStatus_DirectionAndConfidence::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ParkingStatus_DirectionAndConfidence>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ParkingStatus_DirectionAndConfidence::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ParkingStatus_DirectionAndConfidence>(), &ParkingStatus_DirectionAndConfidence::ByteSizeLong,
              &ParkingStatus_DirectionAndConfidence::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ParkingStatus_DirectionAndConfidence, _impl_._cached_size_),
          false,
      },
      &ParkingStatus_DirectionAndConfidence::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ParkingStatus_DirectionAndConfidence_class_data_ =
        ParkingStatus_DirectionAndConfidence::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ParkingStatus_DirectionAndConfidence::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ParkingStatus_DirectionAndConfidence_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ParkingStatus_DirectionAndConfidence_class_data_.tc_table);
  return ParkingStatus_DirectionAndConfidence_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
ParkingStatus_DirectionAndConfidence::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ParkingStatus_DirectionAndConfidence, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ParkingStatus_DirectionAndConfidence_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::drivingbehavior::ParkingStatus_DirectionAndConfidence>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ParkingStatus_DirectionAndConfidence, _impl_.confidence_)}},
    // .sensoris.protobuf.categories.drivingbehavior.ParkingStatus.DirectionAndConfidence.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ParkingStatus_DirectionAndConfidence, _impl_.type_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(ParkingStatus_DirectionAndConfidence, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.categories.drivingbehavior.ParkingStatus.DirectionAndConfidence.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(ParkingStatus_DirectionAndConfidence, _impl_.type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    {PROTOBUF_FIELD_OFFSET(ParkingStatus_DirectionAndConfidence, _impl_.confidence_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Confidence>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ParkingStatus_DirectionAndConfidence::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.drivingbehavior.ParkingStatus.DirectionAndConfidence)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.confidence_ != nullptr);
    _impl_.confidence_->Clear();
  }
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ParkingStatus_DirectionAndConfidence::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ParkingStatus_DirectionAndConfidence& this_ = static_cast<const ParkingStatus_DirectionAndConfidence&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ParkingStatus_DirectionAndConfidence::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ParkingStatus_DirectionAndConfidence& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.drivingbehavior.ParkingStatus.DirectionAndConfidence)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .sensoris.protobuf.categories.drivingbehavior.ParkingStatus.DirectionAndConfidence.Type type = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_type(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.Confidence confidence = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.confidence_, this_._impl_.confidence_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.drivingbehavior.ParkingStatus.DirectionAndConfidence)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ParkingStatus_DirectionAndConfidence::ByteSizeLong(const MessageLite& base) {
  const ParkingStatus_DirectionAndConfidence& this_ = static_cast<const ParkingStatus_DirectionAndConfidence&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ParkingStatus_DirectionAndConfidence::ByteSizeLong() const {
  const ParkingStatus_DirectionAndConfidence& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.drivingbehavior.ParkingStatus.DirectionAndConfidence)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .sensoris.protobuf.types.base.Confidence confidence = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.confidence_);
    }
    // .sensoris.protobuf.categories.drivingbehavior.ParkingStatus.DirectionAndConfidence.Type type = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ParkingStatus_DirectionAndConfidence::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ParkingStatus_DirectionAndConfidence*>(&to_msg);
  auto& from = static_cast<const ParkingStatus_DirectionAndConfidence&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.drivingbehavior.ParkingStatus.DirectionAndConfidence)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.confidence_ != nullptr);
      if (_this->_impl_.confidence_ == nullptr) {
        _this->_impl_.confidence_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.confidence_);
      } else {
        _this->_impl_.confidence_->MergeFrom(*from._impl_.confidence_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_type() != 0) {
        _this->_impl_.type_ = from._impl_.type_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ParkingStatus_DirectionAndConfidence::CopyFrom(const ParkingStatus_DirectionAndConfidence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.drivingbehavior.ParkingStatus.DirectionAndConfidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ParkingStatus_DirectionAndConfidence::InternalSwap(ParkingStatus_DirectionAndConfidence* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ParkingStatus_DirectionAndConfidence, _impl_.type_)
      + sizeof(ParkingStatus_DirectionAndConfidence::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(ParkingStatus_DirectionAndConfidence, _impl_.confidence_)>(
          reinterpret_cast<char*>(&_impl_.confidence_),
          reinterpret_cast<char*>(&other->_impl_.confidence_));
}

::google::protobuf::Metadata ParkingStatus_DirectionAndConfidence::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ParkingStatus::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ParkingStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ParkingStatus, _impl_._has_bits_);
};

void ParkingStatus::clear_envelope() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.envelope_ != nullptr) _impl_.envelope_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void ParkingStatus::clear_duration_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.duration_and_accuracy_ != nullptr) _impl_.duration_and_accuracy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
ParkingStatus::ParkingStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ParkingStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.drivingbehavior.ParkingStatus)
}
PROTOBUF_NDEBUG_INLINE ParkingStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::categories::drivingbehavior::ParkingStatus& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ParkingStatus::ParkingStatus(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ParkingStatus& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ParkingStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ParkingStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.envelope_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.envelope_)
                : nullptr;
  _impl_.status_and_confidence_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_and_confidence_)
                : nullptr;
  _impl_.direction_and_confidence_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.direction_and_confidence_)
                : nullptr;
  _impl_.duration_and_accuracy_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.duration_and_accuracy_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.drivingbehavior.ParkingStatus)
}
PROTOBUF_NDEBUG_INLINE ParkingStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ParkingStatus::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, envelope_),
           0,
           offsetof(Impl_, duration_and_accuracy_) -
               offsetof(Impl_, envelope_) +
               sizeof(Impl_::duration_and_accuracy_));
}
ParkingStatus::~ParkingStatus() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.drivingbehavior.ParkingStatus)
  SharedDtor(*this);
}
inline void ParkingStatus::SharedDtor(MessageLite& self) {
  ParkingStatus& this_ = static_cast<ParkingStatus&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.envelope_;
  delete this_._impl_.status_and_confidence_;
  delete this_._impl_.direction_and_confidence_;
  delete this_._impl_.duration_and_accuracy_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ParkingStatus::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ParkingStatus(arena);
}
constexpr auto ParkingStatus::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ParkingStatus),
                                            alignof(ParkingStatus));
}
constexpr auto ParkingStatus::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ParkingStatus_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ParkingStatus::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ParkingStatus>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ParkingStatus::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ParkingStatus>(), &ParkingStatus::ByteSizeLong,
              &ParkingStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ParkingStatus, _impl_._cached_size_),
          false,
      },
      &ParkingStatus::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ParkingStatus_class_data_ =
        ParkingStatus::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ParkingStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ParkingStatus_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ParkingStatus_class_data_.tc_table);
  return ParkingStatus_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 4, 0, 2>
ParkingStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ParkingStatus, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ParkingStatus_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::drivingbehavior::ParkingStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy duration_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 0];
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(ParkingStatus, _impl_.duration_and_accuracy_)}},
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ParkingStatus, _impl_.envelope_)}},
    // .sensoris.protobuf.categories.drivingbehavior.ParkingStatus.StatusAndConfidence status_and_confidence = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(ParkingStatus, _impl_.status_and_confidence_)}},
    // .sensoris.protobuf.categories.drivingbehavior.ParkingStatus.DirectionAndConfidence direction_and_confidence = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(ParkingStatus, _impl_.direction_and_confidence_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    {PROTOBUF_FIELD_OFFSET(ParkingStatus, _impl_.envelope_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.categories.drivingbehavior.ParkingStatus.StatusAndConfidence status_and_confidence = 2;
    {PROTOBUF_FIELD_OFFSET(ParkingStatus, _impl_.status_and_confidence_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.categories.drivingbehavior.ParkingStatus.DirectionAndConfidence direction_and_confidence = 3;
    {PROTOBUF_FIELD_OFFSET(ParkingStatus, _impl_.direction_and_confidence_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy duration_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 0];
    {PROTOBUF_FIELD_OFFSET(ParkingStatus, _impl_.duration_and_accuracy_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::EventEnvelope>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::drivingbehavior::ParkingStatus_StatusAndConfidence>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::drivingbehavior::ParkingStatus_DirectionAndConfidence>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64ValueAndAccuracy>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ParkingStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.drivingbehavior.ParkingStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.envelope_ != nullptr);
      _impl_.envelope_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.status_and_confidence_ != nullptr);
      _impl_.status_and_confidence_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.direction_and_confidence_ != nullptr);
      _impl_.direction_and_confidence_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.duration_and_accuracy_ != nullptr);
      _impl_.duration_and_accuracy_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ParkingStatus::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ParkingStatus& this_ = static_cast<const ParkingStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ParkingStatus::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ParkingStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.drivingbehavior.ParkingStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.envelope_, this_._impl_.envelope_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.categories.drivingbehavior.ParkingStatus.StatusAndConfidence status_and_confidence = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.status_and_confidence_, this_._impl_.status_and_confidence_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.categories.drivingbehavior.ParkingStatus.DirectionAndConfidence direction_and_confidence = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.direction_and_confidence_, this_._impl_.direction_and_confidence_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.types.base.Int64ValueAndAccuracy duration_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 0];
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.duration_and_accuracy_, this_._impl_.duration_and_accuracy_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.drivingbehavior.ParkingStatus)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ParkingStatus::ByteSizeLong(const MessageLite& base) {
  const ParkingStatus& this_ = static_cast<const ParkingStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ParkingStatus::ByteSizeLong() const {
  const ParkingStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.drivingbehavior.ParkingStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // .sensoris.protobuf.types.base.EventEnvelope envelope = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.envelope_);
    }
    // .sensoris.protobuf.categories.drivingbehavior.ParkingStatus.StatusAndConfidence status_and_confidence = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_and_confidence_);
    }
    // .sensoris.protobuf.categories.drivingbehavior.ParkingStatus.DirectionAndConfidence direction_and_confidence = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.direction_and_confidence_);
    }
    // .sensoris.protobuf.types.base.Int64ValueAndAccuracy duration_and_accuracy = 4 [(.sensoris.protobuf.types.base.exponent) = 0];
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.duration_and_accuracy_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ParkingStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ParkingStatus*>(&to_msg);
  auto& from = static_cast<const ParkingStatus&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.drivingbehavior.ParkingStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.envelope_ != nullptr);
      if (_this->_impl_.envelope_ == nullptr) {
        _this->_impl_.envelope_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.envelope_);
      } else {
        _this->_impl_.envelope_->MergeFrom(*from._impl_.envelope_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.status_and_confidence_ != nullptr);
      if (_this->_impl_.status_and_confidence_ == nullptr) {
        _this->_impl_.status_and_confidence_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_and_confidence_);
      } else {
        _this->_impl_.status_and_confidence_->MergeFrom(*from._impl_.status_and_confidence_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.direction_and_confidence_ != nullptr);
      if (_this->_impl_.direction_and_confidence_ == nullptr) {
        _this->_impl_.direction_and_confidence_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.direction_and_confidence_);
      } else {
        _this->_impl_.direction_and_confidence_->MergeFrom(*from._impl_.direction_and_confidence_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.duration_and_accuracy_ != nullptr);
      if (_this->_impl_.duration_and_accuracy_ == nullptr) {
        _this->_impl_.duration_and_accuracy_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.duration_and_accuracy_);
      } else {
        _this->_impl_.duration_and_accuracy_->MergeFrom(*from._impl_.duration_and_accuracy_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ParkingStatus::CopyFrom(const ParkingStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.drivingbehavior.ParkingStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ParkingStatus::InternalSwap(ParkingStatus* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ParkingStatus, _impl_.duration_and_accuracy_)
      + sizeof(ParkingStatus::_impl_.duration_and_accuracy_)
      - PROTOBUF_FIELD_OFFSET(ParkingStatus, _impl_.envelope_)>(
          reinterpret_cast<char*>(&_impl_.envelope_),
          reinterpret_cast<char*>(&other->_impl_.envelope_));
}

::google::protobuf::Metadata ParkingStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DrivingBehaviorCategory::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<DrivingBehaviorCategory>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DrivingBehaviorCategory, _impl_._has_bits_);
};

void DrivingBehaviorCategory::clear_envelope() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.envelope_ != nullptr) _impl_.envelope_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
DrivingBehaviorCategory::DrivingBehaviorCategory(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DrivingBehaviorCategory_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.categories.drivingbehavior.DrivingBehaviorCategory)
}
PROTOBUF_NDEBUG_INLINE DrivingBehaviorCategory::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        parking_status_{visibility, arena, from.parking_status_} {}

DrivingBehaviorCategory::DrivingBehaviorCategory(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const DrivingBehaviorCategory& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DrivingBehaviorCategory_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DrivingBehaviorCategory* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.envelope_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.envelope_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.categories.drivingbehavior.DrivingBehaviorCategory)
}
PROTOBUF_NDEBUG_INLINE DrivingBehaviorCategory::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        parking_status_{visibility, arena} {}

inline void DrivingBehaviorCategory::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.envelope_ = {};
}
DrivingBehaviorCategory::~DrivingBehaviorCategory() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.categories.drivingbehavior.DrivingBehaviorCategory)
  SharedDtor(*this);
}
inline void DrivingBehaviorCategory::SharedDtor(MessageLite& self) {
  DrivingBehaviorCategory& this_ = static_cast<DrivingBehaviorCategory&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.envelope_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL DrivingBehaviorCategory::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DrivingBehaviorCategory(arena);
}
constexpr auto DrivingBehaviorCategory::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(DrivingBehaviorCategory, _impl_.parking_status_) +
          decltype(DrivingBehaviorCategory::_impl_.parking_status_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(DrivingBehaviorCategory), alignof(DrivingBehaviorCategory), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&DrivingBehaviorCategory::PlacementNew_,
                                 sizeof(DrivingBehaviorCategory),
                                 alignof(DrivingBehaviorCategory));
  }
}
constexpr auto DrivingBehaviorCategory::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DrivingBehaviorCategory_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DrivingBehaviorCategory::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<DrivingBehaviorCategory>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DrivingBehaviorCategory::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<DrivingBehaviorCategory>(), &DrivingBehaviorCategory::ByteSizeLong,
              &DrivingBehaviorCategory::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DrivingBehaviorCategory, _impl_._cached_size_),
          false,
      },
      &DrivingBehaviorCategory::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull DrivingBehaviorCategory_class_data_ =
        DrivingBehaviorCategory::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
DrivingBehaviorCategory::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DrivingBehaviorCategory_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DrivingBehaviorCategory_class_data_.tc_table);
  return DrivingBehaviorCategory_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
DrivingBehaviorCategory::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DrivingBehaviorCategory, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    DrivingBehaviorCategory_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::drivingbehavior::DrivingBehaviorCategory>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .sensoris.protobuf.categories.drivingbehavior.ParkingStatus parking_status = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(DrivingBehaviorCategory, _impl_.parking_status_)}},
    // .sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DrivingBehaviorCategory, _impl_.envelope_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
    {PROTOBUF_FIELD_OFFSET(DrivingBehaviorCategory, _impl_.envelope_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .sensoris.protobuf.categories.drivingbehavior.ParkingStatus parking_status = 2;
    {PROTOBUF_FIELD_OFFSET(DrivingBehaviorCategory, _impl_.parking_status_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::CategoryEnvelope>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::categories::drivingbehavior::ParkingStatus>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void DrivingBehaviorCategory::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.categories.drivingbehavior.DrivingBehaviorCategory)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parking_status_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.envelope_ != nullptr);
    _impl_.envelope_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL DrivingBehaviorCategory::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const DrivingBehaviorCategory& this_ = static_cast<const DrivingBehaviorCategory&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL DrivingBehaviorCategory::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const DrivingBehaviorCategory& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.categories.drivingbehavior.DrivingBehaviorCategory)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.envelope_, this_._impl_.envelope_->GetCachedSize(), target,
        stream);
  }

  // repeated .sensoris.protobuf.categories.drivingbehavior.ParkingStatus parking_status = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_parking_status_size());
       i < n; i++) {
    const auto& repfield = this_._internal_parking_status().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.categories.drivingbehavior.DrivingBehaviorCategory)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DrivingBehaviorCategory::ByteSizeLong(const MessageLite& base) {
  const DrivingBehaviorCategory& this_ = static_cast<const DrivingBehaviorCategory&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DrivingBehaviorCategory::ByteSizeLong() const {
  const DrivingBehaviorCategory& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.categories.drivingbehavior.DrivingBehaviorCategory)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .sensoris.protobuf.categories.drivingbehavior.ParkingStatus parking_status = 2;
    {
      total_size += 1UL * this_._internal_parking_status_size();
      for (const auto& msg : this_._internal_parking_status()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // .sensoris.protobuf.types.base.CategoryEnvelope envelope = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.envelope_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void DrivingBehaviorCategory::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DrivingBehaviorCategory*>(&to_msg);
  auto& from = static_cast<const DrivingBehaviorCategory&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.categories.drivingbehavior.DrivingBehaviorCategory)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_parking_status()->MergeFrom(
      from._internal_parking_status());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.envelope_ != nullptr);
    if (_this->_impl_.envelope_ == nullptr) {
      _this->_impl_.envelope_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.envelope_);
    } else {
      _this->_impl_.envelope_->MergeFrom(*from._impl_.envelope_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DrivingBehaviorCategory::CopyFrom(const DrivingBehaviorCategory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.categories.drivingbehavior.DrivingBehaviorCategory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DrivingBehaviorCategory::InternalSwap(DrivingBehaviorCategory* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.parking_status_.InternalSwap(&other->_impl_.parking_status_);
  swap(_impl_.envelope_, other->_impl_.envelope_);
}

::google::protobuf::Metadata DrivingBehaviorCategory::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace drivingbehavior
}  // namespace categories
}  // namespace protobuf
}  // namespace sensoris
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_sensoris_2fprotobuf_2fcategories_2fdriving_5fbehavior_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
