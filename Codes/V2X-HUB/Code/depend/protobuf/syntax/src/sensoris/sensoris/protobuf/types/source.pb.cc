// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: sensoris/protobuf/types/source.proto
// Protobuf C++ Version: 6.31.1

#include "sensoris/protobuf/types/source.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace sensoris {
namespace protobuf {
namespace types {
namespace source {

inline constexpr SensorFusion::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : sensor_id_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SensorFusion::SensorFusion(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SensorFusion_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SensorFusionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorFusionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorFusionDefaultTypeInternal() {}
  union {
    SensorFusion _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorFusionDefaultTypeInternal _SensorFusion_default_instance_;

inline constexpr Sensor_MountingPositionAndOrientation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        translation_and_accuracy_{nullptr},
        orientation_and_accuracy_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Sensor_MountingPositionAndOrientation::Sensor_MountingPositionAndOrientation(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Sensor_MountingPositionAndOrientation_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Sensor_MountingPositionAndOrientationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Sensor_MountingPositionAndOrientationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Sensor_MountingPositionAndOrientationDefaultTypeInternal() {}
  union {
    Sensor_MountingPositionAndOrientation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Sensor_MountingPositionAndOrientationDefaultTypeInternal _Sensor_MountingPositionAndOrientation_default_instance_;

inline constexpr NavigationSatelliteSystem::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        satellite_system_{},
        _satellite_system_cached_byte_size_{0},
        satellite_based_augmentation_system_{},
        _satellite_based_augmentation_system_cached_byte_size_{0},
        ground_based_augmentation_system_{},
        _ground_based_augmentation_system_cached_byte_size_{0},
        extension_{},
        elevation_mask_{nullptr},
        antenna_offset_and_accuracy_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR NavigationSatelliteSystem::NavigationSatelliteSystem(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(NavigationSatelliteSystem_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NavigationSatelliteSystemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NavigationSatelliteSystemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NavigationSatelliteSystemDefaultTypeInternal() {}
  union {
    NavigationSatelliteSystem _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NavigationSatelliteSystemDefaultTypeInternal _NavigationSatelliteSystem_default_instance_;

inline constexpr Sensor::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mounting_position_and_orientation_{nullptr},
        specific_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Sensor::Sensor(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Sensor_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SensorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorDefaultTypeInternal() {}
  union {
    Sensor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorDefaultTypeInternal _Sensor_default_instance_;

inline constexpr Source::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        extension_{},
        id_{nullptr},
        entity_{nullptr},
        sampling_frequency_{nullptr},
        source_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Source::Source(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Source_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SourceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SourceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SourceDefaultTypeInternal() {}
  union {
    Source _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SourceDefaultTypeInternal _Source_default_instance_;
}  // namespace source
}  // namespace types
}  // namespace protobuf
}  // namespace sensoris
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_sensoris_2fprotobuf_2ftypes_2fsource_2eproto[3];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_sensoris_2fprotobuf_2ftypes_2fsource_2eproto = nullptr;
const ::uint32_t
    TableStruct_sensoris_2fprotobuf_2ftypes_2fsource_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::source::NavigationSatelliteSystem, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::source::NavigationSatelliteSystem, _impl_.satellite_system_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::source::NavigationSatelliteSystem, _impl_.satellite_based_augmentation_system_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::source::NavigationSatelliteSystem, _impl_.ground_based_augmentation_system_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::source::NavigationSatelliteSystem, _impl_.elevation_mask_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::source::NavigationSatelliteSystem, _impl_.antenna_offset_and_accuracy_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::source::NavigationSatelliteSystem, _impl_.extension_),
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::source::Sensor_MountingPositionAndOrientation, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::source::Sensor_MountingPositionAndOrientation, _impl_.translation_and_accuracy_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::source::Sensor_MountingPositionAndOrientation, _impl_.orientation_and_accuracy_),
        0,
        1,
        0x085, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::source::Sensor, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::source::Sensor, _impl_._oneof_case_[0]),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::source::Sensor, _impl_.mounting_position_and_orientation_),
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::source::Sensor, _impl_.specific_),
        0,
        ~0u,
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::source::SensorFusion, _impl_.sensor_id_),
        0x085, // bitmap
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::source::Source, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::source::Source, _impl_._oneof_case_[0]),
        11, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::source::Source, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::source::Source, _impl_.entity_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::source::Source, _impl_.sampling_frequency_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::source::Source, _impl_.extension_),
        PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::source::Source, _impl_.source_),
        0,
        1,
        2,
        ~0u,
        ~0u,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::sensoris::protobuf::types::source::NavigationSatelliteSystem)},
        {15, sizeof(::sensoris::protobuf::types::source::Sensor_MountingPositionAndOrientation)},
        {22, sizeof(::sensoris::protobuf::types::source::Sensor)},
        {31, sizeof(::sensoris::protobuf::types::source::SensorFusion)},
        {33, sizeof(::sensoris::protobuf::types::source::Source)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::sensoris::protobuf::types::source::_NavigationSatelliteSystem_default_instance_._instance,
    &::sensoris::protobuf::types::source::_Sensor_MountingPositionAndOrientation_default_instance_._instance,
    &::sensoris::protobuf::types::source::_Sensor_default_instance_._instance,
    &::sensoris::protobuf::types::source::_SensorFusion_default_instance_._instance,
    &::sensoris::protobuf::types::source::_Source_default_instance_._instance,
};
const char descriptor_table_protodef_sensoris_2fprotobuf_2ftypes_2fsource_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n$sensoris/protobuf/types/source.proto\022\036"
    "sensoris.protobuf.types.source\032\031google/p"
    "rotobuf/any.proto\032\036google/protobuf/wrapp"
    "ers.proto\032\"sensoris/protobuf/types/base."
    "proto\032%sensoris/protobuf/types/spatial.p"
    "roto\"\340\010\n\031NavigationSatelliteSystem\022c\n\020sa"
    "tellite_system\030\001 \003(\0162I.sensoris.protobuf"
    ".types.source.NavigationSatelliteSystem."
    "SatelliteSystem\022\207\001\n#satellite_based_augm"
    "entation_system\030\002 \003(\0162Z.sensoris.protobu"
    "f.types.source.NavigationSatelliteSystem"
    ".SatelliteBasedAugmentationSystem\022\201\001\n gr"
    "ound_based_augmentation_system\030\003 \003(\0162W.s"
    "ensoris.protobuf.types.source.Navigation"
    "SatelliteSystem.GroundBasedAugmentationS"
    "ystem\0229\n\016elevation_mask\030\004 \001(\0132\033.google.p"
    "rotobuf.Int64ValueB\004\210\265\030\000\022`\n\033antenna_offs"
    "et_and_accuracy\030\005 \001(\01325.sensoris.protobu"
    "f.types.spatial.XyzVectorAndAccuracyB\004\210\265"
    "\030\000\022\'\n\textension\030\017 \003(\0132\024.google.protobuf."
    "Any\"\203\001\n\017SatelliteSystem\022\034\n\030UNKNOWN_SATEL"
    "LITE_SYSTEM\020\000\022\007\n\003GPS\020\001\022\013\n\007GLONASS\020\002\022\013\n\007G"
    "ALILEO\020\003\022\014\n\010BEIDOU_1\020\004\022\014\n\010BEIDOU_2\020\005\022\t\n\005"
    "NAVIC\020\006\022\010\n\004QZSS\020\007\"\342\001\n SatelliteBasedAugm"
    "entationSystem\022\033\n\027UNKNOWN_SATELLITE_BASE"
    "D\020\000\022\023\n\017SATELLITE_BASED\020\001\022\010\n\004WAAS\020\002\022\t\n\005EG"
    "NOS\020\003\022\010\n\004MSAS\020\004\022\030\n\024QZSS_SATELLITE_BASED\020"
    "\005\022\t\n\005GAGAN\020\006\022\010\n\004SDCM\020\007\022\010\n\004SNAS\020\010\022\010\n\004WAGE"
    "\020\t\022\r\n\tSTAR_FIRE\020\n\022\014\n\010STAR_FIX\020\013\022\r\n\tOMNI_"
    "STAR\020\014\"\236\001\n\035GroundBasedAugmentationSystem"
    "\022\030\n\024UNKNOWN_GROUND_BASED\020\000\022\020\n\014GROUND_BAS"
    "ED\020\001\022\010\n\004GBAS\020\002\022\t\n\005NDGPS\020\003\022\t\n\005SAPOS\020\004\022\007\n\003"
    "ALF\020\005\022\014\n\010AXIO_NET\020\006\022\013\n\007VRS_NOW\020\007\022\r\n\tSMAR"
    "T_NET\020\010\"\273\003\n\006Sensor\022p\n!mounting_position_"
    "and_orientation\030\001 \001(\0132E.sensoris.protobu"
    "f.types.source.Sensor.MountingPositionAn"
    "dOrientation\022`\n\033navigation_satellite_sys"
    "tem\030\002 \001(\01329.sensoris.protobuf.types.sour"
    "ce.NavigationSatelliteSystemH\000\032\320\001\n\036Mount"
    "ingPositionAndOrientation\022V\n\030translation"
    "_and_accuracy\030\001 \001(\01324.sensoris.protobuf."
    "types.spatial.PositionAndAccuracy\022V\n\030ori"
    "entation_and_accuracy\030\002 \001(\01324.sensoris.p"
    "rotobuf.types.spatial.RotationAndAccurac"
    "yB\n\n\010specific\">\n\014SensorFusion\022.\n\tsensor_"
    "id\030\001 \003(\0132\033.google.protobuf.Int64Value\"\347\002"
    "\n\006Source\022\'\n\002id\030\001 \001(\0132\033.google.protobuf.I"
    "nt64Value\0224\n\006entity\030\002 \001(\0132$.sensoris.pro"
    "tobuf.types.base.Entity\022J\n\022sampling_freq"
    "uency\030\003 \001(\0132(.sensoris.protobuf.types.ba"
    "se.Int64ValueB\004\210\265\030\003\0228\n\006sensor\030\004 \001(\0132&.se"
    "nsoris.protobuf.types.source.SensorH\000\022E\n"
    "\rsensor_fusion\030\005 \001(\0132,.sensoris.protobuf"
    ".types.source.SensorFusionH\000\022\'\n\textensio"
    "n\030\017 \003(\0132\024.google.protobuf.AnyB\010\n\006sourceB"
    "^\n\031org.sensoris.types.sourceB\023SensorisSo"
    "urceTypesP\001Z\'sensoris.org/specification/"
    "types/source\370\001\001b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_sensoris_2fprotobuf_2ftypes_2fsource_2eproto_deps[4] = {
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
        &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
        &::descriptor_table_sensoris_2fprotobuf_2ftypes_2fbase_2eproto,
        &::descriptor_table_sensoris_2fprotobuf_2ftypes_2fspatial_2eproto,
};
static ::absl::once_flag descriptor_table_sensoris_2fprotobuf_2ftypes_2fsource_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_sensoris_2fprotobuf_2ftypes_2fsource_2eproto = {
    false,
    false,
    2303,
    descriptor_table_protodef_sensoris_2fprotobuf_2ftypes_2fsource_2eproto,
    "sensoris/protobuf/types/source.proto",
    &descriptor_table_sensoris_2fprotobuf_2ftypes_2fsource_2eproto_once,
    descriptor_table_sensoris_2fprotobuf_2ftypes_2fsource_2eproto_deps,
    4,
    5,
    schemas,
    file_default_instances,
    TableStruct_sensoris_2fprotobuf_2ftypes_2fsource_2eproto::offsets,
    file_level_enum_descriptors_sensoris_2fprotobuf_2ftypes_2fsource_2eproto,
    file_level_service_descriptors_sensoris_2fprotobuf_2ftypes_2fsource_2eproto,
};
namespace sensoris {
namespace protobuf {
namespace types {
namespace source {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL NavigationSatelliteSystem_SatelliteSystem_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensoris_2fprotobuf_2ftypes_2fsource_2eproto);
  return file_level_enum_descriptors_sensoris_2fprotobuf_2ftypes_2fsource_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t NavigationSatelliteSystem_SatelliteSystem_internal_data_[] = {
    524288u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL NavigationSatelliteSystem_SatelliteBasedAugmentationSystem_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensoris_2fprotobuf_2ftypes_2fsource_2eproto);
  return file_level_enum_descriptors_sensoris_2fprotobuf_2ftypes_2fsource_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t NavigationSatelliteSystem_SatelliteBasedAugmentationSystem_internal_data_[] = {
    851968u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL NavigationSatelliteSystem_GroundBasedAugmentationSystem_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensoris_2fprotobuf_2ftypes_2fsource_2eproto);
  return file_level_enum_descriptors_sensoris_2fprotobuf_2ftypes_2fsource_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t NavigationSatelliteSystem_GroundBasedAugmentationSystem_internal_data_[] = {
    589824u, 0u, };
// ===================================================================

class NavigationSatelliteSystem::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<NavigationSatelliteSystem>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NavigationSatelliteSystem, _impl_._has_bits_);
};

void NavigationSatelliteSystem::clear_elevation_mask() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.elevation_mask_ != nullptr) _impl_.elevation_mask_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void NavigationSatelliteSystem::clear_antenna_offset_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.antenna_offset_and_accuracy_ != nullptr) _impl_.antenna_offset_and_accuracy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void NavigationSatelliteSystem::clear_extension() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.extension_.Clear();
}
NavigationSatelliteSystem::NavigationSatelliteSystem(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NavigationSatelliteSystem_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.source.NavigationSatelliteSystem)
}
PROTOBUF_NDEBUG_INLINE NavigationSatelliteSystem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::source::NavigationSatelliteSystem& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        satellite_system_{visibility, arena, from.satellite_system_},
        _satellite_system_cached_byte_size_{0},
        satellite_based_augmentation_system_{visibility, arena, from.satellite_based_augmentation_system_},
        _satellite_based_augmentation_system_cached_byte_size_{0},
        ground_based_augmentation_system_{visibility, arena, from.ground_based_augmentation_system_},
        _ground_based_augmentation_system_cached_byte_size_{0},
        extension_{visibility, arena, from.extension_} {}

NavigationSatelliteSystem::NavigationSatelliteSystem(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const NavigationSatelliteSystem& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NavigationSatelliteSystem_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NavigationSatelliteSystem* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.elevation_mask_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.elevation_mask_)
                : nullptr;
  _impl_.antenna_offset_and_accuracy_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.antenna_offset_and_accuracy_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.source.NavigationSatelliteSystem)
}
PROTOBUF_NDEBUG_INLINE NavigationSatelliteSystem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        satellite_system_{visibility, arena},
        _satellite_system_cached_byte_size_{0},
        satellite_based_augmentation_system_{visibility, arena},
        _satellite_based_augmentation_system_cached_byte_size_{0},
        ground_based_augmentation_system_{visibility, arena},
        _ground_based_augmentation_system_cached_byte_size_{0},
        extension_{visibility, arena} {}

inline void NavigationSatelliteSystem::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, elevation_mask_),
           0,
           offsetof(Impl_, antenna_offset_and_accuracy_) -
               offsetof(Impl_, elevation_mask_) +
               sizeof(Impl_::antenna_offset_and_accuracy_));
}
NavigationSatelliteSystem::~NavigationSatelliteSystem() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.source.NavigationSatelliteSystem)
  SharedDtor(*this);
}
inline void NavigationSatelliteSystem::SharedDtor(MessageLite& self) {
  NavigationSatelliteSystem& this_ = static_cast<NavigationSatelliteSystem&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.elevation_mask_;
  delete this_._impl_.antenna_offset_and_accuracy_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL NavigationSatelliteSystem::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) NavigationSatelliteSystem(arena);
}
constexpr auto NavigationSatelliteSystem::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(NavigationSatelliteSystem, _impl_.satellite_system_) +
          decltype(NavigationSatelliteSystem::_impl_.satellite_system_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(NavigationSatelliteSystem, _impl_.satellite_based_augmentation_system_) +
          decltype(NavigationSatelliteSystem::_impl_.satellite_based_augmentation_system_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(NavigationSatelliteSystem, _impl_.ground_based_augmentation_system_) +
          decltype(NavigationSatelliteSystem::_impl_.ground_based_augmentation_system_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(NavigationSatelliteSystem, _impl_.extension_) +
          decltype(NavigationSatelliteSystem::_impl_.extension_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(NavigationSatelliteSystem), alignof(NavigationSatelliteSystem), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&NavigationSatelliteSystem::PlacementNew_,
                                 sizeof(NavigationSatelliteSystem),
                                 alignof(NavigationSatelliteSystem));
  }
}
constexpr auto NavigationSatelliteSystem::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_NavigationSatelliteSystem_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &NavigationSatelliteSystem::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<NavigationSatelliteSystem>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &NavigationSatelliteSystem::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<NavigationSatelliteSystem>(), &NavigationSatelliteSystem::ByteSizeLong,
              &NavigationSatelliteSystem::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(NavigationSatelliteSystem, _impl_._cached_size_),
          false,
      },
      &NavigationSatelliteSystem::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fsource_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull NavigationSatelliteSystem_class_data_ =
        NavigationSatelliteSystem::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
NavigationSatelliteSystem::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&NavigationSatelliteSystem_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(NavigationSatelliteSystem_class_data_.tc_table);
  return NavigationSatelliteSystem_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 3, 0, 2>
NavigationSatelliteSystem::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NavigationSatelliteSystem, _impl_._has_bits_),
    0, // no _extensions_
    15, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950880,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    NavigationSatelliteSystem_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::source::NavigationSatelliteSystem>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .sensoris.protobuf.types.source.NavigationSatelliteSystem.SatelliteSystem satellite_system = 1;
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NavigationSatelliteSystem, _impl_.satellite_system_)}},
    // repeated .sensoris.protobuf.types.source.NavigationSatelliteSystem.SatelliteBasedAugmentationSystem satellite_based_augmentation_system = 2;
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NavigationSatelliteSystem, _impl_.satellite_based_augmentation_system_)}},
    // repeated .sensoris.protobuf.types.source.NavigationSatelliteSystem.GroundBasedAugmentationSystem ground_based_augmentation_system = 3;
    {::_pbi::TcParser::FastV32P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(NavigationSatelliteSystem, _impl_.ground_based_augmentation_system_)}},
    // .google.protobuf.Int64Value elevation_mask = 4 [(.sensoris.protobuf.types.base.exponent) = 0];
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(NavigationSatelliteSystem, _impl_.elevation_mask_)}},
    // .sensoris.protobuf.types.spatial.XyzVectorAndAccuracy antenna_offset_and_accuracy = 5 [(.sensoris.protobuf.types.base.exponent) = 0];
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(NavigationSatelliteSystem, _impl_.antenna_offset_and_accuracy_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .google.protobuf.Any extension = 15;
    {::_pbi::TcParser::FastMtR1,
     {122, 63, 2, PROTOBUF_FIELD_OFFSET(NavigationSatelliteSystem, _impl_.extension_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .sensoris.protobuf.types.source.NavigationSatelliteSystem.SatelliteSystem satellite_system = 1;
    {PROTOBUF_FIELD_OFFSET(NavigationSatelliteSystem, _impl_.satellite_system_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // repeated .sensoris.protobuf.types.source.NavigationSatelliteSystem.SatelliteBasedAugmentationSystem satellite_based_augmentation_system = 2;
    {PROTOBUF_FIELD_OFFSET(NavigationSatelliteSystem, _impl_.satellite_based_augmentation_system_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // repeated .sensoris.protobuf.types.source.NavigationSatelliteSystem.GroundBasedAugmentationSystem ground_based_augmentation_system = 3;
    {PROTOBUF_FIELD_OFFSET(NavigationSatelliteSystem, _impl_.ground_based_augmentation_system_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // .google.protobuf.Int64Value elevation_mask = 4 [(.sensoris.protobuf.types.base.exponent) = 0];
    {PROTOBUF_FIELD_OFFSET(NavigationSatelliteSystem, _impl_.elevation_mask_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.spatial.XyzVectorAndAccuracy antenna_offset_and_accuracy = 5 [(.sensoris.protobuf.types.base.exponent) = 0];
    {PROTOBUF_FIELD_OFFSET(NavigationSatelliteSystem, _impl_.antenna_offset_and_accuracy_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .google.protobuf.Any extension = 15;
    {PROTOBUF_FIELD_OFFSET(NavigationSatelliteSystem, _impl_.extension_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::spatial::XyzVectorAndAccuracy>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void NavigationSatelliteSystem::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.source.NavigationSatelliteSystem)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.satellite_system_.Clear();
  _impl_.satellite_based_augmentation_system_.Clear();
  _impl_.ground_based_augmentation_system_.Clear();
  _impl_.extension_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.elevation_mask_ != nullptr);
      _impl_.elevation_mask_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.antenna_offset_and_accuracy_ != nullptr);
      _impl_.antenna_offset_and_accuracy_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL NavigationSatelliteSystem::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const NavigationSatelliteSystem& this_ = static_cast<const NavigationSatelliteSystem&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL NavigationSatelliteSystem::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const NavigationSatelliteSystem& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.source.NavigationSatelliteSystem)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .sensoris.protobuf.types.source.NavigationSatelliteSystem.SatelliteSystem satellite_system = 1;
  {
    ::size_t byte_size = this_._impl_._satellite_system_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          1, this_._internal_satellite_system(), byte_size, target);
    }
  }

  // repeated .sensoris.protobuf.types.source.NavigationSatelliteSystem.SatelliteBasedAugmentationSystem satellite_based_augmentation_system = 2;
  {
    ::size_t byte_size = this_._impl_._satellite_based_augmentation_system_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          2, this_._internal_satellite_based_augmentation_system(), byte_size, target);
    }
  }

  // repeated .sensoris.protobuf.types.source.NavigationSatelliteSystem.GroundBasedAugmentationSystem ground_based_augmentation_system = 3;
  {
    ::size_t byte_size = this_._impl_._ground_based_augmentation_system_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          3, this_._internal_ground_based_augmentation_system(), byte_size, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Int64Value elevation_mask = 4 [(.sensoris.protobuf.types.base.exponent) = 0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.elevation_mask_, this_._impl_.elevation_mask_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.types.spatial.XyzVectorAndAccuracy antenna_offset_and_accuracy = 5 [(.sensoris.protobuf.types.base.exponent) = 0];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.antenna_offset_and_accuracy_, this_._impl_.antenna_offset_and_accuracy_->GetCachedSize(), target,
        stream);
  }

  // repeated .google.protobuf.Any extension = 15;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_extension_size());
       i < n; i++) {
    const auto& repfield = this_._internal_extension().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            15, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.source.NavigationSatelliteSystem)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t NavigationSatelliteSystem::ByteSizeLong(const MessageLite& base) {
  const NavigationSatelliteSystem& this_ = static_cast<const NavigationSatelliteSystem&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t NavigationSatelliteSystem::ByteSizeLong() const {
  const NavigationSatelliteSystem& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.source.NavigationSatelliteSystem)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .sensoris.protobuf.types.source.NavigationSatelliteSystem.SatelliteSystem satellite_system = 1;
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_satellite_system(), 1, this_._impl_._satellite_system_cached_byte_size_);
    }
    // repeated .sensoris.protobuf.types.source.NavigationSatelliteSystem.SatelliteBasedAugmentationSystem satellite_based_augmentation_system = 2;
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_satellite_based_augmentation_system(), 1, this_._impl_._satellite_based_augmentation_system_cached_byte_size_);
    }
    // repeated .sensoris.protobuf.types.source.NavigationSatelliteSystem.GroundBasedAugmentationSystem ground_based_augmentation_system = 3;
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_ground_based_augmentation_system(), 1, this_._impl_._ground_based_augmentation_system_cached_byte_size_);
    }
    // repeated .google.protobuf.Any extension = 15;
    {
      total_size += 1UL * this_._internal_extension_size();
      for (const auto& msg : this_._internal_extension()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .google.protobuf.Int64Value elevation_mask = 4 [(.sensoris.protobuf.types.base.exponent) = 0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.elevation_mask_);
    }
    // .sensoris.protobuf.types.spatial.XyzVectorAndAccuracy antenna_offset_and_accuracy = 5 [(.sensoris.protobuf.types.base.exponent) = 0];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.antenna_offset_and_accuracy_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void NavigationSatelliteSystem::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NavigationSatelliteSystem*>(&to_msg);
  auto& from = static_cast<const NavigationSatelliteSystem&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.source.NavigationSatelliteSystem)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_satellite_system()->MergeFrom(from._internal_satellite_system());
  _this->_internal_mutable_satellite_based_augmentation_system()->MergeFrom(from._internal_satellite_based_augmentation_system());
  _this->_internal_mutable_ground_based_augmentation_system()->MergeFrom(from._internal_ground_based_augmentation_system());
  _this->_internal_mutable_extension()->MergeFrom(
      from._internal_extension());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.elevation_mask_ != nullptr);
      if (_this->_impl_.elevation_mask_ == nullptr) {
        _this->_impl_.elevation_mask_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.elevation_mask_);
      } else {
        _this->_impl_.elevation_mask_->MergeFrom(*from._impl_.elevation_mask_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.antenna_offset_and_accuracy_ != nullptr);
      if (_this->_impl_.antenna_offset_and_accuracy_ == nullptr) {
        _this->_impl_.antenna_offset_and_accuracy_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.antenna_offset_and_accuracy_);
      } else {
        _this->_impl_.antenna_offset_and_accuracy_->MergeFrom(*from._impl_.antenna_offset_and_accuracy_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NavigationSatelliteSystem::CopyFrom(const NavigationSatelliteSystem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.source.NavigationSatelliteSystem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NavigationSatelliteSystem::InternalSwap(NavigationSatelliteSystem* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.satellite_system_.InternalSwap(&other->_impl_.satellite_system_);
  _impl_.satellite_based_augmentation_system_.InternalSwap(&other->_impl_.satellite_based_augmentation_system_);
  _impl_.ground_based_augmentation_system_.InternalSwap(&other->_impl_.ground_based_augmentation_system_);
  _impl_.extension_.InternalSwap(&other->_impl_.extension_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NavigationSatelliteSystem, _impl_.antenna_offset_and_accuracy_)
      + sizeof(NavigationSatelliteSystem::_impl_.antenna_offset_and_accuracy_)
      - PROTOBUF_FIELD_OFFSET(NavigationSatelliteSystem, _impl_.elevation_mask_)>(
          reinterpret_cast<char*>(&_impl_.elevation_mask_),
          reinterpret_cast<char*>(&other->_impl_.elevation_mask_));
}

::google::protobuf::Metadata NavigationSatelliteSystem::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Sensor_MountingPositionAndOrientation::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Sensor_MountingPositionAndOrientation>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Sensor_MountingPositionAndOrientation, _impl_._has_bits_);
};

void Sensor_MountingPositionAndOrientation::clear_translation_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.translation_and_accuracy_ != nullptr) _impl_.translation_and_accuracy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Sensor_MountingPositionAndOrientation::clear_orientation_and_accuracy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.orientation_and_accuracy_ != nullptr) _impl_.orientation_and_accuracy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
Sensor_MountingPositionAndOrientation::Sensor_MountingPositionAndOrientation(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Sensor_MountingPositionAndOrientation_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.source.Sensor.MountingPositionAndOrientation)
}
PROTOBUF_NDEBUG_INLINE Sensor_MountingPositionAndOrientation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::source::Sensor_MountingPositionAndOrientation& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Sensor_MountingPositionAndOrientation::Sensor_MountingPositionAndOrientation(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Sensor_MountingPositionAndOrientation& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Sensor_MountingPositionAndOrientation_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Sensor_MountingPositionAndOrientation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.translation_and_accuracy_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.translation_and_accuracy_)
                : nullptr;
  _impl_.orientation_and_accuracy_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.orientation_and_accuracy_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.source.Sensor.MountingPositionAndOrientation)
}
PROTOBUF_NDEBUG_INLINE Sensor_MountingPositionAndOrientation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Sensor_MountingPositionAndOrientation::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, translation_and_accuracy_),
           0,
           offsetof(Impl_, orientation_and_accuracy_) -
               offsetof(Impl_, translation_and_accuracy_) +
               sizeof(Impl_::orientation_and_accuracy_));
}
Sensor_MountingPositionAndOrientation::~Sensor_MountingPositionAndOrientation() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.source.Sensor.MountingPositionAndOrientation)
  SharedDtor(*this);
}
inline void Sensor_MountingPositionAndOrientation::SharedDtor(MessageLite& self) {
  Sensor_MountingPositionAndOrientation& this_ = static_cast<Sensor_MountingPositionAndOrientation&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.translation_and_accuracy_;
  delete this_._impl_.orientation_and_accuracy_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Sensor_MountingPositionAndOrientation::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Sensor_MountingPositionAndOrientation(arena);
}
constexpr auto Sensor_MountingPositionAndOrientation::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Sensor_MountingPositionAndOrientation),
                                            alignof(Sensor_MountingPositionAndOrientation));
}
constexpr auto Sensor_MountingPositionAndOrientation::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Sensor_MountingPositionAndOrientation_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Sensor_MountingPositionAndOrientation::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Sensor_MountingPositionAndOrientation>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Sensor_MountingPositionAndOrientation::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Sensor_MountingPositionAndOrientation>(), &Sensor_MountingPositionAndOrientation::ByteSizeLong,
              &Sensor_MountingPositionAndOrientation::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Sensor_MountingPositionAndOrientation, _impl_._cached_size_),
          false,
      },
      &Sensor_MountingPositionAndOrientation::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fsource_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Sensor_MountingPositionAndOrientation_class_data_ =
        Sensor_MountingPositionAndOrientation::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Sensor_MountingPositionAndOrientation::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Sensor_MountingPositionAndOrientation_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Sensor_MountingPositionAndOrientation_class_data_.tc_table);
  return Sensor_MountingPositionAndOrientation_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
Sensor_MountingPositionAndOrientation::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Sensor_MountingPositionAndOrientation, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Sensor_MountingPositionAndOrientation_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::source::Sensor_MountingPositionAndOrientation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .sensoris.protobuf.types.spatial.RotationAndAccuracy orientation_and_accuracy = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Sensor_MountingPositionAndOrientation, _impl_.orientation_and_accuracy_)}},
    // .sensoris.protobuf.types.spatial.PositionAndAccuracy translation_and_accuracy = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Sensor_MountingPositionAndOrientation, _impl_.translation_and_accuracy_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.spatial.PositionAndAccuracy translation_and_accuracy = 1;
    {PROTOBUF_FIELD_OFFSET(Sensor_MountingPositionAndOrientation, _impl_.translation_and_accuracy_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.spatial.RotationAndAccuracy orientation_and_accuracy = 2;
    {PROTOBUF_FIELD_OFFSET(Sensor_MountingPositionAndOrientation, _impl_.orientation_and_accuracy_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::spatial::PositionAndAccuracy>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::spatial::RotationAndAccuracy>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Sensor_MountingPositionAndOrientation::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.source.Sensor.MountingPositionAndOrientation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.translation_and_accuracy_ != nullptr);
      _impl_.translation_and_accuracy_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.orientation_and_accuracy_ != nullptr);
      _impl_.orientation_and_accuracy_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Sensor_MountingPositionAndOrientation::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Sensor_MountingPositionAndOrientation& this_ = static_cast<const Sensor_MountingPositionAndOrientation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Sensor_MountingPositionAndOrientation::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Sensor_MountingPositionAndOrientation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.source.Sensor.MountingPositionAndOrientation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.spatial.PositionAndAccuracy translation_and_accuracy = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.translation_and_accuracy_, this_._impl_.translation_and_accuracy_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.types.spatial.RotationAndAccuracy orientation_and_accuracy = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.orientation_and_accuracy_, this_._impl_.orientation_and_accuracy_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.source.Sensor.MountingPositionAndOrientation)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Sensor_MountingPositionAndOrientation::ByteSizeLong(const MessageLite& base) {
  const Sensor_MountingPositionAndOrientation& this_ = static_cast<const Sensor_MountingPositionAndOrientation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Sensor_MountingPositionAndOrientation::ByteSizeLong() const {
  const Sensor_MountingPositionAndOrientation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.source.Sensor.MountingPositionAndOrientation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .sensoris.protobuf.types.spatial.PositionAndAccuracy translation_and_accuracy = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.translation_and_accuracy_);
    }
    // .sensoris.protobuf.types.spatial.RotationAndAccuracy orientation_and_accuracy = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.orientation_and_accuracy_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Sensor_MountingPositionAndOrientation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Sensor_MountingPositionAndOrientation*>(&to_msg);
  auto& from = static_cast<const Sensor_MountingPositionAndOrientation&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.source.Sensor.MountingPositionAndOrientation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.translation_and_accuracy_ != nullptr);
      if (_this->_impl_.translation_and_accuracy_ == nullptr) {
        _this->_impl_.translation_and_accuracy_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.translation_and_accuracy_);
      } else {
        _this->_impl_.translation_and_accuracy_->MergeFrom(*from._impl_.translation_and_accuracy_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.orientation_and_accuracy_ != nullptr);
      if (_this->_impl_.orientation_and_accuracy_ == nullptr) {
        _this->_impl_.orientation_and_accuracy_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.orientation_and_accuracy_);
      } else {
        _this->_impl_.orientation_and_accuracy_->MergeFrom(*from._impl_.orientation_and_accuracy_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Sensor_MountingPositionAndOrientation::CopyFrom(const Sensor_MountingPositionAndOrientation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.source.Sensor.MountingPositionAndOrientation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Sensor_MountingPositionAndOrientation::InternalSwap(Sensor_MountingPositionAndOrientation* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Sensor_MountingPositionAndOrientation, _impl_.orientation_and_accuracy_)
      + sizeof(Sensor_MountingPositionAndOrientation::_impl_.orientation_and_accuracy_)
      - PROTOBUF_FIELD_OFFSET(Sensor_MountingPositionAndOrientation, _impl_.translation_and_accuracy_)>(
          reinterpret_cast<char*>(&_impl_.translation_and_accuracy_),
          reinterpret_cast<char*>(&other->_impl_.translation_and_accuracy_));
}

::google::protobuf::Metadata Sensor_MountingPositionAndOrientation::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Sensor::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Sensor>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Sensor, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::source::Sensor, _impl_._oneof_case_);
};

void Sensor::set_allocated_navigation_satellite_system(::sensoris::protobuf::types::source::NavigationSatelliteSystem* PROTOBUF_NULLABLE navigation_satellite_system) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_specific();
  if (navigation_satellite_system) {
    ::google::protobuf::Arena* submessage_arena = navigation_satellite_system->GetArena();
    if (message_arena != submessage_arena) {
      navigation_satellite_system = ::google::protobuf::internal::GetOwnedMessage(message_arena, navigation_satellite_system, submessage_arena);
    }
    set_has_navigation_satellite_system();
    _impl_.specific_.navigation_satellite_system_ = navigation_satellite_system;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.source.Sensor.navigation_satellite_system)
}
Sensor::Sensor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Sensor_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.source.Sensor)
}
PROTOBUF_NDEBUG_INLINE Sensor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::source::Sensor& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        specific_{},
        _oneof_case_{from._oneof_case_[0]} {}

Sensor::Sensor(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Sensor& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Sensor_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Sensor* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.mounting_position_and_orientation_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.mounting_position_and_orientation_)
                : nullptr;
  switch (specific_case()) {
    case SPECIFIC_NOT_SET:
      break;
      case kNavigationSatelliteSystem:
        _impl_.specific_.navigation_satellite_system_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.specific_.navigation_satellite_system_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.source.Sensor)
}
PROTOBUF_NDEBUG_INLINE Sensor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        specific_{},
        _oneof_case_{} {}

inline void Sensor::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.mounting_position_and_orientation_ = {};
}
Sensor::~Sensor() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.source.Sensor)
  SharedDtor(*this);
}
inline void Sensor::SharedDtor(MessageLite& self) {
  Sensor& this_ = static_cast<Sensor&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.mounting_position_and_orientation_;
  if (this_.has_specific()) {
    this_.clear_specific();
  }
  this_._impl_.~Impl_();
}

void Sensor::clear_specific() {
// @@protoc_insertion_point(one_of_clear_start:sensoris.protobuf.types.source.Sensor)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (specific_case()) {
    case kNavigationSatelliteSystem: {
      if (GetArena() == nullptr) {
        delete _impl_.specific_.navigation_satellite_system_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.specific_.navigation_satellite_system_);
      }
      break;
    }
    case SPECIFIC_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = SPECIFIC_NOT_SET;
}


inline void* PROTOBUF_NONNULL Sensor::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Sensor(arena);
}
constexpr auto Sensor::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Sensor),
                                            alignof(Sensor));
}
constexpr auto Sensor::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Sensor_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Sensor::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Sensor>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Sensor::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Sensor>(), &Sensor::ByteSizeLong,
              &Sensor::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Sensor, _impl_._cached_size_),
          false,
      },
      &Sensor::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fsource_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Sensor_class_data_ =
        Sensor::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Sensor::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Sensor_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Sensor_class_data_.tc_table);
  return Sensor_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2>
Sensor::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Sensor, _impl_._has_bits_),
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Sensor_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::source::Sensor>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .sensoris.protobuf.types.source.Sensor.MountingPositionAndOrientation mounting_position_and_orientation = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Sensor, _impl_.mounting_position_and_orientation_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sensoris.protobuf.types.source.Sensor.MountingPositionAndOrientation mounting_position_and_orientation = 1;
    {PROTOBUF_FIELD_OFFSET(Sensor, _impl_.mounting_position_and_orientation_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.source.NavigationSatelliteSystem navigation_satellite_system = 2;
    {PROTOBUF_FIELD_OFFSET(Sensor, _impl_.specific_.navigation_satellite_system_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::source::Sensor_MountingPositionAndOrientation>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::source::NavigationSatelliteSystem>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Sensor::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.source.Sensor)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.mounting_position_and_orientation_ != nullptr);
    _impl_.mounting_position_and_orientation_->Clear();
  }
  clear_specific();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Sensor::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Sensor& this_ = static_cast<const Sensor&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Sensor::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Sensor& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.source.Sensor)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sensoris.protobuf.types.source.Sensor.MountingPositionAndOrientation mounting_position_and_orientation = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.mounting_position_and_orientation_, this_._impl_.mounting_position_and_orientation_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.types.source.NavigationSatelliteSystem navigation_satellite_system = 2;
  if (this_.specific_case() == kNavigationSatelliteSystem) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.specific_.navigation_satellite_system_, this_._impl_.specific_.navigation_satellite_system_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.source.Sensor)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Sensor::ByteSizeLong(const MessageLite& base) {
  const Sensor& this_ = static_cast<const Sensor&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Sensor::ByteSizeLong() const {
  const Sensor& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.source.Sensor)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .sensoris.protobuf.types.source.Sensor.MountingPositionAndOrientation mounting_position_and_orientation = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.mounting_position_and_orientation_);
    }
  }
  switch (this_.specific_case()) {
    // .sensoris.protobuf.types.source.NavigationSatelliteSystem navigation_satellite_system = 2;
    case kNavigationSatelliteSystem: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.specific_.navigation_satellite_system_);
      break;
    }
    case SPECIFIC_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Sensor::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Sensor*>(&to_msg);
  auto& from = static_cast<const Sensor&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.source.Sensor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.mounting_position_and_orientation_ != nullptr);
    if (_this->_impl_.mounting_position_and_orientation_ == nullptr) {
      _this->_impl_.mounting_position_and_orientation_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.mounting_position_and_orientation_);
    } else {
      _this->_impl_.mounting_position_and_orientation_->MergeFrom(*from._impl_.mounting_position_and_orientation_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_specific();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kNavigationSatelliteSystem: {
        if (oneof_needs_init) {
          _this->_impl_.specific_.navigation_satellite_system_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.specific_.navigation_satellite_system_);
        } else {
          _this->_impl_.specific_.navigation_satellite_system_->MergeFrom(*from._impl_.specific_.navigation_satellite_system_);
        }
        break;
      }
      case SPECIFIC_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Sensor::CopyFrom(const Sensor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.source.Sensor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Sensor::InternalSwap(Sensor* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.mounting_position_and_orientation_, other->_impl_.mounting_position_and_orientation_);
  swap(_impl_.specific_, other->_impl_.specific_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Sensor::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SensorFusion::_Internal {
 public:
};

void SensorFusion::clear_sensor_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sensor_id_.Clear();
}
SensorFusion::SensorFusion(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SensorFusion_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.source.SensorFusion)
}
PROTOBUF_NDEBUG_INLINE SensorFusion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::source::SensorFusion& from_msg)
      : sensor_id_{visibility, arena, from.sensor_id_},
        _cached_size_{0} {}

SensorFusion::SensorFusion(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SensorFusion& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SensorFusion_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SensorFusion* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.source.SensorFusion)
}
PROTOBUF_NDEBUG_INLINE SensorFusion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : sensor_id_{visibility, arena},
        _cached_size_{0} {}

inline void SensorFusion::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SensorFusion::~SensorFusion() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.source.SensorFusion)
  SharedDtor(*this);
}
inline void SensorFusion::SharedDtor(MessageLite& self) {
  SensorFusion& this_ = static_cast<SensorFusion&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SensorFusion::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SensorFusion(arena);
}
constexpr auto SensorFusion::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SensorFusion, _impl_.sensor_id_) +
          decltype(SensorFusion::_impl_.sensor_id_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SensorFusion), alignof(SensorFusion), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SensorFusion::PlacementNew_,
                                 sizeof(SensorFusion),
                                 alignof(SensorFusion));
  }
}
constexpr auto SensorFusion::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SensorFusion_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SensorFusion::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SensorFusion>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SensorFusion::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SensorFusion>(), &SensorFusion::ByteSizeLong,
              &SensorFusion::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SensorFusion, _impl_._cached_size_),
          false,
      },
      &SensorFusion::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fsource_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SensorFusion_class_data_ =
        SensorFusion::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SensorFusion::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SensorFusion_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SensorFusion_class_data_.tc_table);
  return SensorFusion_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
SensorFusion::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SensorFusion_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::source::SensorFusion>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .google.protobuf.Int64Value sensor_id = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SensorFusion, _impl_.sensor_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .google.protobuf.Int64Value sensor_id = 1;
    {PROTOBUF_FIELD_OFFSET(SensorFusion, _impl_.sensor_id_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SensorFusion::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.source.SensorFusion)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sensor_id_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SensorFusion::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SensorFusion& this_ = static_cast<const SensorFusion&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SensorFusion::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SensorFusion& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.source.SensorFusion)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .google.protobuf.Int64Value sensor_id = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_sensor_id_size());
       i < n; i++) {
    const auto& repfield = this_._internal_sensor_id().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.source.SensorFusion)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SensorFusion::ByteSizeLong(const MessageLite& base) {
  const SensorFusion& this_ = static_cast<const SensorFusion&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SensorFusion::ByteSizeLong() const {
  const SensorFusion& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.source.SensorFusion)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .google.protobuf.Int64Value sensor_id = 1;
    {
      total_size += 1UL * this_._internal_sensor_id_size();
      for (const auto& msg : this_._internal_sensor_id()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SensorFusion::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SensorFusion*>(&to_msg);
  auto& from = static_cast<const SensorFusion&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.source.SensorFusion)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_sensor_id()->MergeFrom(
      from._internal_sensor_id());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorFusion::CopyFrom(const SensorFusion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.source.SensorFusion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SensorFusion::InternalSwap(SensorFusion* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.sensor_id_.InternalSwap(&other->_impl_.sensor_id_);
}

::google::protobuf::Metadata SensorFusion::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Source::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Source>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Source, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::sensoris::protobuf::types::source::Source, _impl_._oneof_case_);
};

void Source::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.id_ != nullptr) _impl_.id_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Source::clear_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.entity_ != nullptr) _impl_.entity_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void Source::clear_sampling_frequency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sampling_frequency_ != nullptr) _impl_.sampling_frequency_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void Source::set_allocated_sensor(::sensoris::protobuf::types::source::Sensor* PROTOBUF_NULLABLE sensor) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_source();
  if (sensor) {
    ::google::protobuf::Arena* submessage_arena = sensor->GetArena();
    if (message_arena != submessage_arena) {
      sensor = ::google::protobuf::internal::GetOwnedMessage(message_arena, sensor, submessage_arena);
    }
    set_has_sensor();
    _impl_.source_.sensor_ = sensor;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.source.Source.sensor)
}
void Source::set_allocated_sensor_fusion(::sensoris::protobuf::types::source::SensorFusion* PROTOBUF_NULLABLE sensor_fusion) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_source();
  if (sensor_fusion) {
    ::google::protobuf::Arena* submessage_arena = sensor_fusion->GetArena();
    if (message_arena != submessage_arena) {
      sensor_fusion = ::google::protobuf::internal::GetOwnedMessage(message_arena, sensor_fusion, submessage_arena);
    }
    set_has_sensor_fusion();
    _impl_.source_.sensor_fusion_ = sensor_fusion;
  }
  // @@protoc_insertion_point(field_set_allocated:sensoris.protobuf.types.source.Source.sensor_fusion)
}
void Source::clear_extension() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.extension_.Clear();
}
Source::Source(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Source_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sensoris.protobuf.types.source.Source)
}
PROTOBUF_NDEBUG_INLINE Source::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sensoris::protobuf::types::source::Source& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        extension_{visibility, arena, from.extension_},
        source_{},
        _oneof_case_{from._oneof_case_[0]} {}

Source::Source(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Source& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Source_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Source* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.id_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.id_)
                : nullptr;
  _impl_.entity_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.entity_)
                : nullptr;
  _impl_.sampling_frequency_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.sampling_frequency_)
                : nullptr;
  switch (source_case()) {
    case SOURCE_NOT_SET:
      break;
      case kSensor:
        _impl_.source_.sensor_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.source_.sensor_);
        break;
      case kSensorFusion:
        _impl_.source_.sensor_fusion_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.source_.sensor_fusion_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:sensoris.protobuf.types.source.Source)
}
PROTOBUF_NDEBUG_INLINE Source::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        extension_{visibility, arena},
        source_{},
        _oneof_case_{} {}

inline void Source::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, sampling_frequency_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::sampling_frequency_));
}
Source::~Source() {
  // @@protoc_insertion_point(destructor:sensoris.protobuf.types.source.Source)
  SharedDtor(*this);
}
inline void Source::SharedDtor(MessageLite& self) {
  Source& this_ = static_cast<Source&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.id_;
  delete this_._impl_.entity_;
  delete this_._impl_.sampling_frequency_;
  if (this_.has_source()) {
    this_.clear_source();
  }
  this_._impl_.~Impl_();
}

void Source::clear_source() {
// @@protoc_insertion_point(one_of_clear_start:sensoris.protobuf.types.source.Source)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (source_case()) {
    case kSensor: {
      if (GetArena() == nullptr) {
        delete _impl_.source_.sensor_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.source_.sensor_);
      }
      break;
    }
    case kSensorFusion: {
      if (GetArena() == nullptr) {
        delete _impl_.source_.sensor_fusion_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.source_.sensor_fusion_);
      }
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = SOURCE_NOT_SET;
}


inline void* PROTOBUF_NONNULL Source::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Source(arena);
}
constexpr auto Source::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Source, _impl_.extension_) +
          decltype(Source::_impl_.extension_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Source), alignof(Source), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Source::PlacementNew_,
                                 sizeof(Source),
                                 alignof(Source));
  }
}
constexpr auto Source::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Source_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Source::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Source>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Source::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Source>(), &Source::ByteSizeLong,
              &Source::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Source, _impl_._cached_size_),
          false,
      },
      &Source::kDescriptorMethods,
      &descriptor_table_sensoris_2fprotobuf_2ftypes_2fsource_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Source_class_data_ =
        Source::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Source::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Source_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Source_class_data_.tc_table);
  return Source_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 6, 0, 2>
Source::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Source, _impl_._has_bits_),
    0, // no _extensions_
    15, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950880,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Source_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sensoris::protobuf::types::source::Source>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Int64Value id = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Source, _impl_.id_)}},
    // .sensoris.protobuf.types.base.Entity entity = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Source, _impl_.entity_)}},
    // .sensoris.protobuf.types.base.Int64Value sampling_frequency = 3 [(.sensoris.protobuf.types.base.exponent) = 3];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(Source, _impl_.sampling_frequency_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .google.protobuf.Any extension = 15;
    {::_pbi::TcParser::FastMtR1,
     {122, 63, 5, PROTOBUF_FIELD_OFFSET(Source, _impl_.extension_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Int64Value id = 1;
    {PROTOBUF_FIELD_OFFSET(Source, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.Entity entity = 2;
    {PROTOBUF_FIELD_OFFSET(Source, _impl_.entity_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.base.Int64Value sampling_frequency = 3 [(.sensoris.protobuf.types.base.exponent) = 3];
    {PROTOBUF_FIELD_OFFSET(Source, _impl_.sampling_frequency_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.source.Sensor sensor = 4;
    {PROTOBUF_FIELD_OFFSET(Source, _impl_.source_.sensor_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sensoris.protobuf.types.source.SensorFusion sensor_fusion = 5;
    {PROTOBUF_FIELD_OFFSET(Source, _impl_.source_.sensor_fusion_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .google.protobuf.Any extension = 15;
    {PROTOBUF_FIELD_OFFSET(Source, _impl_.extension_), -1, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Entity>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::base::Int64Value>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::source::Sensor>()},
      {::_pbi::TcParser::GetTable<::sensoris::protobuf::types::source::SensorFusion>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Source::Clear() {
// @@protoc_insertion_point(message_clear_start:sensoris.protobuf.types.source.Source)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.extension_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.id_ != nullptr);
      _impl_.id_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.entity_ != nullptr);
      _impl_.entity_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.sampling_frequency_ != nullptr);
      _impl_.sampling_frequency_->Clear();
    }
  }
  clear_source();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Source::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Source& this_ = static_cast<const Source&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Source::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Source& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sensoris.protobuf.types.source.Source)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Int64Value id = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.id_, this_._impl_.id_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.types.base.Entity entity = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.entity_, this_._impl_.entity_->GetCachedSize(), target,
        stream);
  }

  // .sensoris.protobuf.types.base.Int64Value sampling_frequency = 3 [(.sensoris.protobuf.types.base.exponent) = 3];
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.sampling_frequency_, this_._impl_.sampling_frequency_->GetCachedSize(), target,
        stream);
  }

  switch (this_.source_case()) {
    case kSensor: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *this_._impl_.source_.sensor_, this_._impl_.source_.sensor_->GetCachedSize(), target,
          stream);
      break;
    }
    case kSensorFusion: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, *this_._impl_.source_.sensor_fusion_, this_._impl_.source_.sensor_fusion_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  // repeated .google.protobuf.Any extension = 15;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_extension_size());
       i < n; i++) {
    const auto& repfield = this_._internal_extension().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            15, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sensoris.protobuf.types.source.Source)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Source::ByteSizeLong(const MessageLite& base) {
  const Source& this_ = static_cast<const Source&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Source::ByteSizeLong() const {
  const Source& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sensoris.protobuf.types.source.Source)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .google.protobuf.Any extension = 15;
    {
      total_size += 1UL * this_._internal_extension_size();
      for (const auto& msg : this_._internal_extension()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .google.protobuf.Int64Value id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.id_);
    }
    // .sensoris.protobuf.types.base.Entity entity = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.entity_);
    }
    // .sensoris.protobuf.types.base.Int64Value sampling_frequency = 3 [(.sensoris.protobuf.types.base.exponent) = 3];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.sampling_frequency_);
    }
  }
  switch (this_.source_case()) {
    // .sensoris.protobuf.types.source.Sensor sensor = 4;
    case kSensor: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.source_.sensor_);
      break;
    }
    // .sensoris.protobuf.types.source.SensorFusion sensor_fusion = 5;
    case kSensorFusion: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.source_.sensor_fusion_);
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Source::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Source*>(&to_msg);
  auto& from = static_cast<const Source&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sensoris.protobuf.types.source.Source)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_extension()->MergeFrom(
      from._internal_extension());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.id_ != nullptr);
      if (_this->_impl_.id_ == nullptr) {
        _this->_impl_.id_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.id_);
      } else {
        _this->_impl_.id_->MergeFrom(*from._impl_.id_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.entity_ != nullptr);
      if (_this->_impl_.entity_ == nullptr) {
        _this->_impl_.entity_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.entity_);
      } else {
        _this->_impl_.entity_->MergeFrom(*from._impl_.entity_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.sampling_frequency_ != nullptr);
      if (_this->_impl_.sampling_frequency_ == nullptr) {
        _this->_impl_.sampling_frequency_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.sampling_frequency_);
      } else {
        _this->_impl_.sampling_frequency_->MergeFrom(*from._impl_.sampling_frequency_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_source();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kSensor: {
        if (oneof_needs_init) {
          _this->_impl_.source_.sensor_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.source_.sensor_);
        } else {
          _this->_impl_.source_.sensor_->MergeFrom(*from._impl_.source_.sensor_);
        }
        break;
      }
      case kSensorFusion: {
        if (oneof_needs_init) {
          _this->_impl_.source_.sensor_fusion_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.source_.sensor_fusion_);
        } else {
          _this->_impl_.source_.sensor_fusion_->MergeFrom(*from._impl_.source_.sensor_fusion_);
        }
        break;
      }
      case SOURCE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Source::CopyFrom(const Source& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sensoris.protobuf.types.source.Source)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Source::InternalSwap(Source* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.extension_.InternalSwap(&other->_impl_.extension_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Source, _impl_.sampling_frequency_)
      + sizeof(Source::_impl_.sampling_frequency_)
      - PROTOBUF_FIELD_OFFSET(Source, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
  swap(_impl_.source_, other->_impl_.source_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Source::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace source
}  // namespace types
}  // namespace protobuf
}  // namespace sensoris
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_sensoris_2fprotobuf_2ftypes_2fsource_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
