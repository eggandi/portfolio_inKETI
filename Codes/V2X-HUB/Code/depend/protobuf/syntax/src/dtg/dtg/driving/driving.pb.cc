// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: dtg/driving/driving.proto
// Protobuf C++ Version: 6.31.1

#include "dtg/driving/driving.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace DTG {
namespace DRIVING {

inline constexpr Driving::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        dist_day_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        dist_total_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        date_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        speed_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        rpm_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        brake_signal_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gps_x_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gps_y_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        heading_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        accel_x_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        accel_y_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR Driving::Driving(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Driving_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DrivingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DrivingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DrivingDefaultTypeInternal() {}
  union {
    Driving _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DrivingDefaultTypeInternal _Driving_default_instance_;
}  // namespace DRIVING
}  // namespace DTG
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_dtg_2fdriving_2fdriving_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_dtg_2fdriving_2fdriving_2eproto = nullptr;
const ::uint32_t
    TableStruct_dtg_2fdriving_2fdriving_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::DTG::DRIVING::Driving, _impl_._has_bits_),
        14, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::DTG::DRIVING::Driving, _impl_.dist_day_),
        PROTOBUF_FIELD_OFFSET(::DTG::DRIVING::Driving, _impl_.dist_total_),
        PROTOBUF_FIELD_OFFSET(::DTG::DRIVING::Driving, _impl_.date_),
        PROTOBUF_FIELD_OFFSET(::DTG::DRIVING::Driving, _impl_.speed_),
        PROTOBUF_FIELD_OFFSET(::DTG::DRIVING::Driving, _impl_.rpm_),
        PROTOBUF_FIELD_OFFSET(::DTG::DRIVING::Driving, _impl_.brake_signal_),
        PROTOBUF_FIELD_OFFSET(::DTG::DRIVING::Driving, _impl_.gps_x_),
        PROTOBUF_FIELD_OFFSET(::DTG::DRIVING::Driving, _impl_.gps_y_),
        PROTOBUF_FIELD_OFFSET(::DTG::DRIVING::Driving, _impl_.heading_),
        PROTOBUF_FIELD_OFFSET(::DTG::DRIVING::Driving, _impl_.accel_x_),
        PROTOBUF_FIELD_OFFSET(::DTG::DRIVING::Driving, _impl_.accel_y_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::DTG::DRIVING::Driving)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::DTG::DRIVING::_Driving_default_instance_._instance,
};
const char descriptor_table_protodef_dtg_2fdriving_2fdriving_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\031dtg/driving/driving.proto\022\013DTG.DRIVING"
    "\032\027validate/validate.proto\"\360\003\n\007Driving\022 \n"
    "\010dist_day\030\001 \001(\tB\t\372B\006r\004\020\004\030\004H\000\210\001\001\022\"\n\ndist_"
    "total\030\002 \001(\tB\t\372B\006r\004\020\007\030\007H\001\210\001\001\022\034\n\004date\030\003 \001("
    "\tB\t\372B\006r\004\020\016\030\016H\002\210\001\001\022\035\n\005speed\030\004 \001(\tB\t\372B\006r\004\020"
    "\003\030\003H\003\210\001\001\022\033\n\003rpm\030\005 \001(\tB\t\372B\006r\004\020\004\030\004H\004\210\001\001\022$\n"
    "\014brake_signal\030\006 \001(\tB\t\372B\006r\004\020\001\030\001H\005\210\001\001\022\035\n\005g"
    "ps_x\030\007 \001(\tB\t\372B\006r\004\020\t\030\tH\006\210\001\001\022\035\n\005gps_y\030\010 \001("
    "\tB\t\372B\006r\004\020\t\030\tH\007\210\001\001\022\037\n\007heading\030\t \001(\tB\t\372B\006r"
    "\004\020\003\030\003H\010\210\001\001\022\037\n\007accel_x\030\n \001(\tB\t\372B\006r\004\020\006\030\006H\t"
    "\210\001\001\022\037\n\007accel_y\030\013 \001(\tB\t\372B\006r\004\020\006\030\006H\n\210\001\001B\013\n\t"
    "_dist_dayB\r\n\013_dist_totalB\007\n\005_dateB\010\n\006_sp"
    "eedB\006\n\004_rpmB\017\n\r_brake_signalB\010\n\006_gps_xB\010"
    "\n\006_gps_yB\n\n\010_headingB\n\n\010_accel_xB\n\n\010_acc"
    "el_yb\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_dtg_2fdriving_2fdriving_2eproto_deps[1] = {
        &::descriptor_table_validate_2fvalidate_2eproto,
};
static ::absl::once_flag descriptor_table_dtg_2fdriving_2fdriving_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_dtg_2fdriving_2fdriving_2eproto = {
    false,
    false,
    572,
    descriptor_table_protodef_dtg_2fdriving_2fdriving_2eproto,
    "dtg/driving/driving.proto",
    &descriptor_table_dtg_2fdriving_2fdriving_2eproto_once,
    descriptor_table_dtg_2fdriving_2fdriving_2eproto_deps,
    1,
    1,
    schemas,
    file_default_instances,
    TableStruct_dtg_2fdriving_2fdriving_2eproto::offsets,
    file_level_enum_descriptors_dtg_2fdriving_2fdriving_2eproto,
    file_level_service_descriptors_dtg_2fdriving_2fdriving_2eproto,
};
namespace DTG {
namespace DRIVING {
// ===================================================================

class Driving::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Driving>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Driving, _impl_._has_bits_);
};

Driving::Driving(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Driving_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DTG.DRIVING.Driving)
}
PROTOBUF_NDEBUG_INLINE Driving::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::DTG::DRIVING::Driving& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        dist_day_(arena, from.dist_day_),
        dist_total_(arena, from.dist_total_),
        date_(arena, from.date_),
        speed_(arena, from.speed_),
        rpm_(arena, from.rpm_),
        brake_signal_(arena, from.brake_signal_),
        gps_x_(arena, from.gps_x_),
        gps_y_(arena, from.gps_y_),
        heading_(arena, from.heading_),
        accel_x_(arena, from.accel_x_),
        accel_y_(arena, from.accel_y_) {}

Driving::Driving(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Driving& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Driving_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Driving* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:DTG.DRIVING.Driving)
}
PROTOBUF_NDEBUG_INLINE Driving::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        dist_day_(arena),
        dist_total_(arena),
        date_(arena),
        speed_(arena),
        rpm_(arena),
        brake_signal_(arena),
        gps_x_(arena),
        gps_y_(arena),
        heading_(arena),
        accel_x_(arena),
        accel_y_(arena) {}

inline void Driving::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Driving::~Driving() {
  // @@protoc_insertion_point(destructor:DTG.DRIVING.Driving)
  SharedDtor(*this);
}
inline void Driving::SharedDtor(MessageLite& self) {
  Driving& this_ = static_cast<Driving&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.dist_day_.Destroy();
  this_._impl_.dist_total_.Destroy();
  this_._impl_.date_.Destroy();
  this_._impl_.speed_.Destroy();
  this_._impl_.rpm_.Destroy();
  this_._impl_.brake_signal_.Destroy();
  this_._impl_.gps_x_.Destroy();
  this_._impl_.gps_y_.Destroy();
  this_._impl_.heading_.Destroy();
  this_._impl_.accel_x_.Destroy();
  this_._impl_.accel_y_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Driving::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Driving(arena);
}
constexpr auto Driving::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Driving),
                                            alignof(Driving));
}
constexpr auto Driving::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Driving_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Driving::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Driving>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Driving::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Driving>(), &Driving::ByteSizeLong,
              &Driving::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Driving, _impl_._cached_size_),
          false,
      },
      &Driving::kDescriptorMethods,
      &descriptor_table_dtg_2fdriving_2fdriving_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Driving_class_data_ =
        Driving::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Driving::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Driving_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Driving_class_data_.tc_table);
  return Driving_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 0, 109, 2>
Driving::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Driving, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Driving_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DTG::DRIVING::Driving>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string dist_day = 1 [(.validate.rules) = {
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Driving, _impl_.dist_day_)}},
    // optional string dist_total = 2 [(.validate.rules) = {
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Driving, _impl_.dist_total_)}},
    // optional string date = 3 [(.validate.rules) = {
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(Driving, _impl_.date_)}},
    // optional string speed = 4 [(.validate.rules) = {
    {::_pbi::TcParser::FastUS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(Driving, _impl_.speed_)}},
    // optional string rpm = 5 [(.validate.rules) = {
    {::_pbi::TcParser::FastUS1,
     {42, 4, 0, PROTOBUF_FIELD_OFFSET(Driving, _impl_.rpm_)}},
    // optional string brake_signal = 6 [(.validate.rules) = {
    {::_pbi::TcParser::FastUS1,
     {50, 5, 0, PROTOBUF_FIELD_OFFSET(Driving, _impl_.brake_signal_)}},
    // optional string gps_x = 7 [(.validate.rules) = {
    {::_pbi::TcParser::FastUS1,
     {58, 6, 0, PROTOBUF_FIELD_OFFSET(Driving, _impl_.gps_x_)}},
    // optional string gps_y = 8 [(.validate.rules) = {
    {::_pbi::TcParser::FastUS1,
     {66, 7, 0, PROTOBUF_FIELD_OFFSET(Driving, _impl_.gps_y_)}},
    // optional string heading = 9 [(.validate.rules) = {
    {::_pbi::TcParser::FastUS1,
     {74, 8, 0, PROTOBUF_FIELD_OFFSET(Driving, _impl_.heading_)}},
    // optional string accel_x = 10 [(.validate.rules) = {
    {::_pbi::TcParser::FastUS1,
     {82, 9, 0, PROTOBUF_FIELD_OFFSET(Driving, _impl_.accel_x_)}},
    // optional string accel_y = 11 [(.validate.rules) = {
    {::_pbi::TcParser::FastUS1,
     {90, 10, 0, PROTOBUF_FIELD_OFFSET(Driving, _impl_.accel_y_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string dist_day = 1 [(.validate.rules) = {
    {PROTOBUF_FIELD_OFFSET(Driving, _impl_.dist_day_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string dist_total = 2 [(.validate.rules) = {
    {PROTOBUF_FIELD_OFFSET(Driving, _impl_.dist_total_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string date = 3 [(.validate.rules) = {
    {PROTOBUF_FIELD_OFFSET(Driving, _impl_.date_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string speed = 4 [(.validate.rules) = {
    {PROTOBUF_FIELD_OFFSET(Driving, _impl_.speed_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string rpm = 5 [(.validate.rules) = {
    {PROTOBUF_FIELD_OFFSET(Driving, _impl_.rpm_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string brake_signal = 6 [(.validate.rules) = {
    {PROTOBUF_FIELD_OFFSET(Driving, _impl_.brake_signal_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string gps_x = 7 [(.validate.rules) = {
    {PROTOBUF_FIELD_OFFSET(Driving, _impl_.gps_x_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string gps_y = 8 [(.validate.rules) = {
    {PROTOBUF_FIELD_OFFSET(Driving, _impl_.gps_y_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string heading = 9 [(.validate.rules) = {
    {PROTOBUF_FIELD_OFFSET(Driving, _impl_.heading_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string accel_x = 10 [(.validate.rules) = {
    {PROTOBUF_FIELD_OFFSET(Driving, _impl_.accel_x_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string accel_y = 11 [(.validate.rules) = {
    {PROTOBUF_FIELD_OFFSET(Driving, _impl_.accel_y_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\23\10\12\4\5\3\14\5\5\7\7\7\0\0\0\0"
    "DTG.DRIVING.Driving"
    "dist_day"
    "dist_total"
    "date"
    "speed"
    "rpm"
    "brake_signal"
    "gps_x"
    "gps_y"
    "heading"
    "accel_x"
    "accel_y"
  }},
};
PROTOBUF_NOINLINE void Driving::Clear() {
// @@protoc_insertion_point(message_clear_start:DTG.DRIVING.Driving)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.dist_day_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.dist_total_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.date_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _impl_.speed_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _impl_.rpm_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _impl_.brake_signal_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _impl_.gps_x_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _impl_.gps_y_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x00000700u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      _impl_.heading_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      _impl_.accel_x_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      _impl_.accel_y_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Driving::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Driving& this_ = static_cast<const Driving&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Driving::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Driving& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:DTG.DRIVING.Driving)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string dist_day = 1 [(.validate.rules) = {
  if ((cached_has_bits & 0x00000001u) != 0) {
    const ::std::string& _s = this_._internal_dist_day();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DTG.DRIVING.Driving.dist_day");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string dist_total = 2 [(.validate.rules) = {
  if ((cached_has_bits & 0x00000002u) != 0) {
    const ::std::string& _s = this_._internal_dist_total();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DTG.DRIVING.Driving.dist_total");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string date = 3 [(.validate.rules) = {
  if ((cached_has_bits & 0x00000004u) != 0) {
    const ::std::string& _s = this_._internal_date();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DTG.DRIVING.Driving.date");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional string speed = 4 [(.validate.rules) = {
  if ((cached_has_bits & 0x00000008u) != 0) {
    const ::std::string& _s = this_._internal_speed();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DTG.DRIVING.Driving.speed");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional string rpm = 5 [(.validate.rules) = {
  if ((cached_has_bits & 0x00000010u) != 0) {
    const ::std::string& _s = this_._internal_rpm();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DTG.DRIVING.Driving.rpm");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // optional string brake_signal = 6 [(.validate.rules) = {
  if ((cached_has_bits & 0x00000020u) != 0) {
    const ::std::string& _s = this_._internal_brake_signal();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DTG.DRIVING.Driving.brake_signal");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // optional string gps_x = 7 [(.validate.rules) = {
  if ((cached_has_bits & 0x00000040u) != 0) {
    const ::std::string& _s = this_._internal_gps_x();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DTG.DRIVING.Driving.gps_x");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // optional string gps_y = 8 [(.validate.rules) = {
  if ((cached_has_bits & 0x00000080u) != 0) {
    const ::std::string& _s = this_._internal_gps_y();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DTG.DRIVING.Driving.gps_y");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // optional string heading = 9 [(.validate.rules) = {
  if ((cached_has_bits & 0x00000100u) != 0) {
    const ::std::string& _s = this_._internal_heading();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DTG.DRIVING.Driving.heading");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // optional string accel_x = 10 [(.validate.rules) = {
  if ((cached_has_bits & 0x00000200u) != 0) {
    const ::std::string& _s = this_._internal_accel_x();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DTG.DRIVING.Driving.accel_x");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  // optional string accel_y = 11 [(.validate.rules) = {
  if ((cached_has_bits & 0x00000400u) != 0) {
    const ::std::string& _s = this_._internal_accel_y();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DTG.DRIVING.Driving.accel_y");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DTG.DRIVING.Driving)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Driving::ByteSizeLong(const MessageLite& base) {
  const Driving& this_ = static_cast<const Driving&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Driving::ByteSizeLong() const {
  const Driving& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:DTG.DRIVING.Driving)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // optional string dist_day = 1 [(.validate.rules) = {
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_dist_day());
    }
    // optional string dist_total = 2 [(.validate.rules) = {
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_dist_total());
    }
    // optional string date = 3 [(.validate.rules) = {
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_date());
    }
    // optional string speed = 4 [(.validate.rules) = {
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_speed());
    }
    // optional string rpm = 5 [(.validate.rules) = {
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_rpm());
    }
    // optional string brake_signal = 6 [(.validate.rules) = {
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_brake_signal());
    }
    // optional string gps_x = 7 [(.validate.rules) = {
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_gps_x());
    }
    // optional string gps_y = 8 [(.validate.rules) = {
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_gps_y());
    }
  }
  if ((cached_has_bits & 0x00000700u) != 0) {
    // optional string heading = 9 [(.validate.rules) = {
    if ((cached_has_bits & 0x00000100u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_heading());
    }
    // optional string accel_x = 10 [(.validate.rules) = {
    if ((cached_has_bits & 0x00000200u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_accel_x());
    }
    // optional string accel_y = 11 [(.validate.rules) = {
    if ((cached_has_bits & 0x00000400u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_accel_y());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Driving::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Driving*>(&to_msg);
  auto& from = static_cast<const Driving&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DTG.DRIVING.Driving)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_dist_day(from._internal_dist_day());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_dist_total(from._internal_dist_total());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_internal_set_date(from._internal_date());
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_internal_set_speed(from._internal_speed());
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_internal_set_rpm(from._internal_rpm());
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_internal_set_brake_signal(from._internal_brake_signal());
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_internal_set_gps_x(from._internal_gps_x());
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_internal_set_gps_y(from._internal_gps_y());
    }
  }
  if ((cached_has_bits & 0x00000700u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      _this->_internal_set_heading(from._internal_heading());
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      _this->_internal_set_accel_x(from._internal_accel_x());
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      _this->_internal_set_accel_y(from._internal_accel_y());
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Driving::CopyFrom(const Driving& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DTG.DRIVING.Driving)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Driving::InternalSwap(Driving* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dist_day_, &other->_impl_.dist_day_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dist_total_, &other->_impl_.dist_total_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.date_, &other->_impl_.date_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.speed_, &other->_impl_.speed_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.rpm_, &other->_impl_.rpm_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.brake_signal_, &other->_impl_.brake_signal_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.gps_x_, &other->_impl_.gps_x_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.gps_y_, &other->_impl_.gps_y_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.heading_, &other->_impl_.heading_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accel_x_, &other->_impl_.accel_x_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.accel_y_, &other->_impl_.accel_y_, arena);
}

::google::protobuf::Metadata Driving::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace DRIVING
}  // namespace DTG
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_dtg_2fdriving_2fdriving_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
