// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: covesa/ivdct/truck/chassis/chassis.proto
// Protobuf C++ Version: 6.31.1

#ifndef covesa_2fivdct_2ftruck_2fchassis_2fchassis_2eproto_2epb_2eh
#define covesa_2fivdct_2ftruck_2fchassis_2fchassis_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "covesa/ivdct/truck/chassis/accelerator/accelerator.pb.h"
#include "covesa/ivdct/truck/chassis/axle/axle.pb.h"
#include "covesa/ivdct/truck/chassis/brake/brake.pb.h"
#include "covesa/ivdct/truck/chassis/steeringwheel/steeringwheel.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_covesa_2fivdct_2ftruck_2fchassis_2fchassis_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_covesa_2fivdct_2ftruck_2fchassis_2fchassis_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_covesa_2fivdct_2ftruck_2fchassis_2fchassis_2eproto;
}  // extern "C"
namespace COVESA {
namespace IVDCT {
namespace TRUCK {
namespace CHASSIS {
class Chassis;
struct ChassisDefaultTypeInternal;
extern ChassisDefaultTypeInternal _Chassis_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Chassis_class_data_;
}  // namespace CHASSIS
}  // namespace TRUCK
}  // namespace IVDCT
}  // namespace COVESA
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace COVESA {
namespace IVDCT {
namespace TRUCK {
namespace CHASSIS {

// ===================================================================


// -------------------------------------------------------------------

class Chassis final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:COVESA.IVDCT.TRUCK.CHASSIS.Chassis) */ {
 public:
  inline Chassis() : Chassis(nullptr) {}
  ~Chassis() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Chassis* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Chassis));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Chassis(::google::protobuf::internal::ConstantInitialized);

  inline Chassis(const Chassis& from) : Chassis(nullptr, from) {}
  inline Chassis(Chassis&& from) noexcept
      : Chassis(nullptr, ::std::move(from)) {}
  inline Chassis& operator=(const Chassis& from) {
    CopyFrom(from);
    return *this;
  }
  inline Chassis& operator=(Chassis&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Chassis& default_instance() {
    return *reinterpret_cast<const Chassis*>(
        &_Chassis_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Chassis& a, Chassis& b) { a.Swap(&b); }
  inline void Swap(Chassis* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Chassis* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Chassis* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Chassis>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Chassis& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Chassis& from) { Chassis::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Chassis* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "COVESA.IVDCT.TRUCK.CHASSIS.Chassis"; }

 protected:
  explicit Chassis(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Chassis(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Chassis& from);
  Chassis(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Chassis&& from) noexcept
      : Chassis(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAcceleratorFieldNumber = 1,
    kAxleFieldNumber = 2,
    kBrakeFieldNumber = 3,
    kSteeringwheelFieldNumber = 4,
  };
  // repeated .COVESA.IVDCT.TRUCK.CHASSIS.ACCELERATOR.Accelerator accelerator = 1;
  int accelerator_size() const;
  private:
  int _internal_accelerator_size() const;

  public:
  void clear_accelerator() ;
  ::COVESA::IVDCT::TRUCK::CHASSIS::ACCELERATOR::Accelerator* PROTOBUF_NONNULL mutable_accelerator(int index);
  ::google::protobuf::RepeatedPtrField<::COVESA::IVDCT::TRUCK::CHASSIS::ACCELERATOR::Accelerator>* PROTOBUF_NONNULL mutable_accelerator();

  private:
  const ::google::protobuf::RepeatedPtrField<::COVESA::IVDCT::TRUCK::CHASSIS::ACCELERATOR::Accelerator>& _internal_accelerator() const;
  ::google::protobuf::RepeatedPtrField<::COVESA::IVDCT::TRUCK::CHASSIS::ACCELERATOR::Accelerator>* PROTOBUF_NONNULL _internal_mutable_accelerator();
  public:
  const ::COVESA::IVDCT::TRUCK::CHASSIS::ACCELERATOR::Accelerator& accelerator(int index) const;
  ::COVESA::IVDCT::TRUCK::CHASSIS::ACCELERATOR::Accelerator* PROTOBUF_NONNULL add_accelerator();
  const ::google::protobuf::RepeatedPtrField<::COVESA::IVDCT::TRUCK::CHASSIS::ACCELERATOR::Accelerator>& accelerator() const;
  // repeated .COVESA.IVDCT.TRUCK.CHASSIS.AXLE.Axle axle = 2;
  int axle_size() const;
  private:
  int _internal_axle_size() const;

  public:
  void clear_axle() ;
  ::COVESA::IVDCT::TRUCK::CHASSIS::AXLE::Axle* PROTOBUF_NONNULL mutable_axle(int index);
  ::google::protobuf::RepeatedPtrField<::COVESA::IVDCT::TRUCK::CHASSIS::AXLE::Axle>* PROTOBUF_NONNULL mutable_axle();

  private:
  const ::google::protobuf::RepeatedPtrField<::COVESA::IVDCT::TRUCK::CHASSIS::AXLE::Axle>& _internal_axle() const;
  ::google::protobuf::RepeatedPtrField<::COVESA::IVDCT::TRUCK::CHASSIS::AXLE::Axle>* PROTOBUF_NONNULL _internal_mutable_axle();
  public:
  const ::COVESA::IVDCT::TRUCK::CHASSIS::AXLE::Axle& axle(int index) const;
  ::COVESA::IVDCT::TRUCK::CHASSIS::AXLE::Axle* PROTOBUF_NONNULL add_axle();
  const ::google::protobuf::RepeatedPtrField<::COVESA::IVDCT::TRUCK::CHASSIS::AXLE::Axle>& axle() const;
  // repeated .COVESA.IVDCT.TRUCK.CHASSIS.BRAKE.Brake brake = 3;
  int brake_size() const;
  private:
  int _internal_brake_size() const;

  public:
  void clear_brake() ;
  ::COVESA::IVDCT::TRUCK::CHASSIS::BRAKE::Brake* PROTOBUF_NONNULL mutable_brake(int index);
  ::google::protobuf::RepeatedPtrField<::COVESA::IVDCT::TRUCK::CHASSIS::BRAKE::Brake>* PROTOBUF_NONNULL mutable_brake();

  private:
  const ::google::protobuf::RepeatedPtrField<::COVESA::IVDCT::TRUCK::CHASSIS::BRAKE::Brake>& _internal_brake() const;
  ::google::protobuf::RepeatedPtrField<::COVESA::IVDCT::TRUCK::CHASSIS::BRAKE::Brake>* PROTOBUF_NONNULL _internal_mutable_brake();
  public:
  const ::COVESA::IVDCT::TRUCK::CHASSIS::BRAKE::Brake& brake(int index) const;
  ::COVESA::IVDCT::TRUCK::CHASSIS::BRAKE::Brake* PROTOBUF_NONNULL add_brake();
  const ::google::protobuf::RepeatedPtrField<::COVESA::IVDCT::TRUCK::CHASSIS::BRAKE::Brake>& brake() const;
  // repeated .COVESA.IVDCT.TRUCK.CHASSIS.STEERINGWHEEL.Steeringwheel steeringwheel = 4;
  int steeringwheel_size() const;
  private:
  int _internal_steeringwheel_size() const;

  public:
  void clear_steeringwheel() ;
  ::COVESA::IVDCT::TRUCK::CHASSIS::STEERINGWHEEL::Steeringwheel* PROTOBUF_NONNULL mutable_steeringwheel(int index);
  ::google::protobuf::RepeatedPtrField<::COVESA::IVDCT::TRUCK::CHASSIS::STEERINGWHEEL::Steeringwheel>* PROTOBUF_NONNULL mutable_steeringwheel();

  private:
  const ::google::protobuf::RepeatedPtrField<::COVESA::IVDCT::TRUCK::CHASSIS::STEERINGWHEEL::Steeringwheel>& _internal_steeringwheel() const;
  ::google::protobuf::RepeatedPtrField<::COVESA::IVDCT::TRUCK::CHASSIS::STEERINGWHEEL::Steeringwheel>* PROTOBUF_NONNULL _internal_mutable_steeringwheel();
  public:
  const ::COVESA::IVDCT::TRUCK::CHASSIS::STEERINGWHEEL::Steeringwheel& steeringwheel(int index) const;
  ::COVESA::IVDCT::TRUCK::CHASSIS::STEERINGWHEEL::Steeringwheel* PROTOBUF_NONNULL add_steeringwheel();
  const ::google::protobuf::RepeatedPtrField<::COVESA::IVDCT::TRUCK::CHASSIS::STEERINGWHEEL::Steeringwheel>& steeringwheel() const;
  // @@protoc_insertion_point(class_scope:COVESA.IVDCT.TRUCK.CHASSIS.Chassis)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   4, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Chassis& from_msg);
    ::google::protobuf::RepeatedPtrField< ::COVESA::IVDCT::TRUCK::CHASSIS::ACCELERATOR::Accelerator > accelerator_;
    ::google::protobuf::RepeatedPtrField< ::COVESA::IVDCT::TRUCK::CHASSIS::AXLE::Axle > axle_;
    ::google::protobuf::RepeatedPtrField< ::COVESA::IVDCT::TRUCK::CHASSIS::BRAKE::Brake > brake_;
    ::google::protobuf::RepeatedPtrField< ::COVESA::IVDCT::TRUCK::CHASSIS::STEERINGWHEEL::Steeringwheel > steeringwheel_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_covesa_2fivdct_2ftruck_2fchassis_2fchassis_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Chassis_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Chassis

// repeated .COVESA.IVDCT.TRUCK.CHASSIS.ACCELERATOR.Accelerator accelerator = 1;
inline int Chassis::_internal_accelerator_size() const {
  return _internal_accelerator().size();
}
inline int Chassis::accelerator_size() const {
  return _internal_accelerator_size();
}
inline ::COVESA::IVDCT::TRUCK::CHASSIS::ACCELERATOR::Accelerator* PROTOBUF_NONNULL Chassis::mutable_accelerator(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:COVESA.IVDCT.TRUCK.CHASSIS.Chassis.accelerator)
  return _internal_mutable_accelerator()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::COVESA::IVDCT::TRUCK::CHASSIS::ACCELERATOR::Accelerator>* PROTOBUF_NONNULL Chassis::mutable_accelerator()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:COVESA.IVDCT.TRUCK.CHASSIS.Chassis.accelerator)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_accelerator();
}
inline const ::COVESA::IVDCT::TRUCK::CHASSIS::ACCELERATOR::Accelerator& Chassis::accelerator(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:COVESA.IVDCT.TRUCK.CHASSIS.Chassis.accelerator)
  return _internal_accelerator().Get(index);
}
inline ::COVESA::IVDCT::TRUCK::CHASSIS::ACCELERATOR::Accelerator* PROTOBUF_NONNULL Chassis::add_accelerator()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::COVESA::IVDCT::TRUCK::CHASSIS::ACCELERATOR::Accelerator* _add = _internal_mutable_accelerator()->Add();
  // @@protoc_insertion_point(field_add:COVESA.IVDCT.TRUCK.CHASSIS.Chassis.accelerator)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::COVESA::IVDCT::TRUCK::CHASSIS::ACCELERATOR::Accelerator>& Chassis::accelerator() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:COVESA.IVDCT.TRUCK.CHASSIS.Chassis.accelerator)
  return _internal_accelerator();
}
inline const ::google::protobuf::RepeatedPtrField<::COVESA::IVDCT::TRUCK::CHASSIS::ACCELERATOR::Accelerator>&
Chassis::_internal_accelerator() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accelerator_;
}
inline ::google::protobuf::RepeatedPtrField<::COVESA::IVDCT::TRUCK::CHASSIS::ACCELERATOR::Accelerator>* PROTOBUF_NONNULL
Chassis::_internal_mutable_accelerator() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.accelerator_;
}

// repeated .COVESA.IVDCT.TRUCK.CHASSIS.AXLE.Axle axle = 2;
inline int Chassis::_internal_axle_size() const {
  return _internal_axle().size();
}
inline int Chassis::axle_size() const {
  return _internal_axle_size();
}
inline ::COVESA::IVDCT::TRUCK::CHASSIS::AXLE::Axle* PROTOBUF_NONNULL Chassis::mutable_axle(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:COVESA.IVDCT.TRUCK.CHASSIS.Chassis.axle)
  return _internal_mutable_axle()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::COVESA::IVDCT::TRUCK::CHASSIS::AXLE::Axle>* PROTOBUF_NONNULL Chassis::mutable_axle()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:COVESA.IVDCT.TRUCK.CHASSIS.Chassis.axle)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_axle();
}
inline const ::COVESA::IVDCT::TRUCK::CHASSIS::AXLE::Axle& Chassis::axle(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:COVESA.IVDCT.TRUCK.CHASSIS.Chassis.axle)
  return _internal_axle().Get(index);
}
inline ::COVESA::IVDCT::TRUCK::CHASSIS::AXLE::Axle* PROTOBUF_NONNULL Chassis::add_axle()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::COVESA::IVDCT::TRUCK::CHASSIS::AXLE::Axle* _add = _internal_mutable_axle()->Add();
  // @@protoc_insertion_point(field_add:COVESA.IVDCT.TRUCK.CHASSIS.Chassis.axle)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::COVESA::IVDCT::TRUCK::CHASSIS::AXLE::Axle>& Chassis::axle() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:COVESA.IVDCT.TRUCK.CHASSIS.Chassis.axle)
  return _internal_axle();
}
inline const ::google::protobuf::RepeatedPtrField<::COVESA::IVDCT::TRUCK::CHASSIS::AXLE::Axle>&
Chassis::_internal_axle() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.axle_;
}
inline ::google::protobuf::RepeatedPtrField<::COVESA::IVDCT::TRUCK::CHASSIS::AXLE::Axle>* PROTOBUF_NONNULL
Chassis::_internal_mutable_axle() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.axle_;
}

// repeated .COVESA.IVDCT.TRUCK.CHASSIS.BRAKE.Brake brake = 3;
inline int Chassis::_internal_brake_size() const {
  return _internal_brake().size();
}
inline int Chassis::brake_size() const {
  return _internal_brake_size();
}
inline ::COVESA::IVDCT::TRUCK::CHASSIS::BRAKE::Brake* PROTOBUF_NONNULL Chassis::mutable_brake(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:COVESA.IVDCT.TRUCK.CHASSIS.Chassis.brake)
  return _internal_mutable_brake()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::COVESA::IVDCT::TRUCK::CHASSIS::BRAKE::Brake>* PROTOBUF_NONNULL Chassis::mutable_brake()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:COVESA.IVDCT.TRUCK.CHASSIS.Chassis.brake)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_brake();
}
inline const ::COVESA::IVDCT::TRUCK::CHASSIS::BRAKE::Brake& Chassis::brake(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:COVESA.IVDCT.TRUCK.CHASSIS.Chassis.brake)
  return _internal_brake().Get(index);
}
inline ::COVESA::IVDCT::TRUCK::CHASSIS::BRAKE::Brake* PROTOBUF_NONNULL Chassis::add_brake()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::COVESA::IVDCT::TRUCK::CHASSIS::BRAKE::Brake* _add = _internal_mutable_brake()->Add();
  // @@protoc_insertion_point(field_add:COVESA.IVDCT.TRUCK.CHASSIS.Chassis.brake)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::COVESA::IVDCT::TRUCK::CHASSIS::BRAKE::Brake>& Chassis::brake() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:COVESA.IVDCT.TRUCK.CHASSIS.Chassis.brake)
  return _internal_brake();
}
inline const ::google::protobuf::RepeatedPtrField<::COVESA::IVDCT::TRUCK::CHASSIS::BRAKE::Brake>&
Chassis::_internal_brake() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.brake_;
}
inline ::google::protobuf::RepeatedPtrField<::COVESA::IVDCT::TRUCK::CHASSIS::BRAKE::Brake>* PROTOBUF_NONNULL
Chassis::_internal_mutable_brake() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.brake_;
}

// repeated .COVESA.IVDCT.TRUCK.CHASSIS.STEERINGWHEEL.Steeringwheel steeringwheel = 4;
inline int Chassis::_internal_steeringwheel_size() const {
  return _internal_steeringwheel().size();
}
inline int Chassis::steeringwheel_size() const {
  return _internal_steeringwheel_size();
}
inline ::COVESA::IVDCT::TRUCK::CHASSIS::STEERINGWHEEL::Steeringwheel* PROTOBUF_NONNULL Chassis::mutable_steeringwheel(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:COVESA.IVDCT.TRUCK.CHASSIS.Chassis.steeringwheel)
  return _internal_mutable_steeringwheel()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::COVESA::IVDCT::TRUCK::CHASSIS::STEERINGWHEEL::Steeringwheel>* PROTOBUF_NONNULL Chassis::mutable_steeringwheel()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:COVESA.IVDCT.TRUCK.CHASSIS.Chassis.steeringwheel)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_steeringwheel();
}
inline const ::COVESA::IVDCT::TRUCK::CHASSIS::STEERINGWHEEL::Steeringwheel& Chassis::steeringwheel(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:COVESA.IVDCT.TRUCK.CHASSIS.Chassis.steeringwheel)
  return _internal_steeringwheel().Get(index);
}
inline ::COVESA::IVDCT::TRUCK::CHASSIS::STEERINGWHEEL::Steeringwheel* PROTOBUF_NONNULL Chassis::add_steeringwheel()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::COVESA::IVDCT::TRUCK::CHASSIS::STEERINGWHEEL::Steeringwheel* _add = _internal_mutable_steeringwheel()->Add();
  // @@protoc_insertion_point(field_add:COVESA.IVDCT.TRUCK.CHASSIS.Chassis.steeringwheel)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::COVESA::IVDCT::TRUCK::CHASSIS::STEERINGWHEEL::Steeringwheel>& Chassis::steeringwheel() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:COVESA.IVDCT.TRUCK.CHASSIS.Chassis.steeringwheel)
  return _internal_steeringwheel();
}
inline const ::google::protobuf::RepeatedPtrField<::COVESA::IVDCT::TRUCK::CHASSIS::STEERINGWHEEL::Steeringwheel>&
Chassis::_internal_steeringwheel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.steeringwheel_;
}
inline ::google::protobuf::RepeatedPtrField<::COVESA::IVDCT::TRUCK::CHASSIS::STEERINGWHEEL::Steeringwheel>* PROTOBUF_NONNULL
Chassis::_internal_mutable_steeringwheel() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.steeringwheel_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace CHASSIS
}  // namespace TRUCK
}  // namespace IVDCT
}  // namespace COVESA


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // covesa_2fivdct_2ftruck_2fchassis_2fchassis_2eproto_2epb_2eh
