// Code generated by protoc-gen-validate
// source: covesa/hub_hf/truck/adas/adas.proto
// DO NOT EDIT!!!

#include "covesa/hub_hf/truck/adas/adas.pb.validate.h"

#include <google/protobuf/message.h>
#include <google/protobuf/util/time_util.h>
#include "re2/re2.h"

namespace pgv {

namespace protobuf = google::protobuf;
namespace protobuf_wkt = google::protobuf;

namespace validate {
using std::string;

// define the regex for a UUID once up-front
const re2::RE2 _uuidPattern("^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$");

pgv::Validator<::COVESA::HUB_HF::TRUCK::ADAS::Adas> validator___COVESA__HUB_HF__TRUCK__ADAS__Adas(static_cast<bool(*)(const ::COVESA::HUB_HF::TRUCK::ADAS::Adas&, pgv::ValidationMsg*)>(::COVESA::HUB_HF::TRUCK::ADAS::Validate));


} // namespace validate
} // namespace pgv


namespace COVESA {
namespace HUB_HF {
namespace TRUCK {
namespace ADAS {


// Validate checks the field values on ::COVESA::HUB_HF::TRUCK::ADAS::Adas with
// the rules defined in the proto definition for this message. If any rules
// are violated, the return value is false and an error message is written to
// the input string argument.

	
	const std::set<string> _Adas_Activeautonomylevel_InLookup = {
				"SAE_0",
				"SAE_1",
				"SAE_2_DISENGAGING",
				"SAE_2",
				"SAE_3_DISENGAGING",
				"SAE_3",
				"SAE_4_DISENGAGING",
				"SAE_4",
				"SAE_5_DISENGAGING",
				"SAE_5",
		};
	

	

	

	

        

	

	

	



bool Validate(const ::COVESA::HUB_HF::TRUCK::ADAS::Adas& m, pgv::ValidationMsg* err) {
	(void)m;
	(void)err;
			if (m.has_activeautonomylevel()) {
				
	
	
	
	

	
		if (_Adas_Activeautonomylevel_InLookup.find(static_cast<decltype(_Adas_Activeautonomylevel_InLookup)::key_type>(m.activeautonomylevel())) == _Adas_Activeautonomylevel_InLookup.end()) {
			{
std::ostringstream msg("invalid ");
msg << "AdasValidationError" << "." << "Activeautonomylevel";
msg << ": " << "value must be in list [SAE_0 SAE_1 SAE_2_DISENGAGING SAE_2 SAE_3_DISENGAGING SAE_3 SAE_4_DISENGAGING SAE_4 SAE_5_DISENGAGING SAE_5]";
*err = msg.str();
return false;
}
		}

	

	

	

	

	

	

        

	
	

			}
		
		
	return true;
}


} // namespace
} // namespace
} // namespace
} // namespace

