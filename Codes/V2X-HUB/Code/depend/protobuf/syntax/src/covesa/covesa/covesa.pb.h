// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: covesa/covesa.proto
// Protobuf C++ Version: 6.31.1

#ifndef covesa_2fcovesa_2eproto_2epb_2eh
#define covesa_2fcovesa_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "covesa/ads_lf/ads_lf.pb.h"
#include "covesa/ads_hf/ads_hf.pb.h"
#include "covesa/dms/dms.pb.h"
#include "covesa/hub_hf/hub_hf.pb.h"
#include "covesa/ivdct/ivdct.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_covesa_2fcovesa_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_covesa_2fcovesa_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_covesa_2fcovesa_2eproto;
}  // extern "C"
namespace COVESA {
class Covesa;
struct CovesaDefaultTypeInternal;
extern CovesaDefaultTypeInternal _Covesa_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Covesa_class_data_;
}  // namespace COVESA
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace COVESA {

// ===================================================================


// -------------------------------------------------------------------

class Covesa final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:COVESA.Covesa) */ {
 public:
  inline Covesa() : Covesa(nullptr) {}
  ~Covesa() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Covesa* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Covesa));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Covesa(::google::protobuf::internal::ConstantInitialized);

  inline Covesa(const Covesa& from) : Covesa(nullptr, from) {}
  inline Covesa(Covesa&& from) noexcept
      : Covesa(nullptr, ::std::move(from)) {}
  inline Covesa& operator=(const Covesa& from) {
    CopyFrom(from);
    return *this;
  }
  inline Covesa& operator=(Covesa&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Covesa& default_instance() {
    return *reinterpret_cast<const Covesa*>(
        &_Covesa_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Covesa& a, Covesa& b) { a.Swap(&b); }
  inline void Swap(Covesa* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Covesa* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Covesa* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Covesa>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Covesa& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Covesa& from) { Covesa::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Covesa* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "COVESA.Covesa"; }

 protected:
  explicit Covesa(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Covesa(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Covesa& from);
  Covesa(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Covesa&& from) noexcept
      : Covesa(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAdsLfFieldNumber = 1,
    kAdsHfFieldNumber = 2,
    kDmsFieldNumber = 3,
    kHubHfFieldNumber = 4,
    kIvdctFieldNumber = 5,
  };
  // optional .COVESA.ADS_LF.Ads_lf ads_lf = 1;
  bool has_ads_lf() const;
  void clear_ads_lf() ;
  const ::COVESA::ADS_LF::Ads_lf& ads_lf() const;
  [[nodiscard]] ::COVESA::ADS_LF::Ads_lf* PROTOBUF_NULLABLE release_ads_lf();
  ::COVESA::ADS_LF::Ads_lf* PROTOBUF_NONNULL mutable_ads_lf();
  void set_allocated_ads_lf(::COVESA::ADS_LF::Ads_lf* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_ads_lf(::COVESA::ADS_LF::Ads_lf* PROTOBUF_NULLABLE value);
  ::COVESA::ADS_LF::Ads_lf* PROTOBUF_NULLABLE unsafe_arena_release_ads_lf();

  private:
  const ::COVESA::ADS_LF::Ads_lf& _internal_ads_lf() const;
  ::COVESA::ADS_LF::Ads_lf* PROTOBUF_NONNULL _internal_mutable_ads_lf();

  public:
  // optional .COVESA.ADS_HF.Ads_hf ads_hf = 2;
  bool has_ads_hf() const;
  void clear_ads_hf() ;
  const ::COVESA::ADS_HF::Ads_hf& ads_hf() const;
  [[nodiscard]] ::COVESA::ADS_HF::Ads_hf* PROTOBUF_NULLABLE release_ads_hf();
  ::COVESA::ADS_HF::Ads_hf* PROTOBUF_NONNULL mutable_ads_hf();
  void set_allocated_ads_hf(::COVESA::ADS_HF::Ads_hf* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_ads_hf(::COVESA::ADS_HF::Ads_hf* PROTOBUF_NULLABLE value);
  ::COVESA::ADS_HF::Ads_hf* PROTOBUF_NULLABLE unsafe_arena_release_ads_hf();

  private:
  const ::COVESA::ADS_HF::Ads_hf& _internal_ads_hf() const;
  ::COVESA::ADS_HF::Ads_hf* PROTOBUF_NONNULL _internal_mutable_ads_hf();

  public:
  // optional .COVESA.DMS.Dms dms = 3;
  bool has_dms() const;
  void clear_dms() ;
  const ::COVESA::DMS::Dms& dms() const;
  [[nodiscard]] ::COVESA::DMS::Dms* PROTOBUF_NULLABLE release_dms();
  ::COVESA::DMS::Dms* PROTOBUF_NONNULL mutable_dms();
  void set_allocated_dms(::COVESA::DMS::Dms* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_dms(::COVESA::DMS::Dms* PROTOBUF_NULLABLE value);
  ::COVESA::DMS::Dms* PROTOBUF_NULLABLE unsafe_arena_release_dms();

  private:
  const ::COVESA::DMS::Dms& _internal_dms() const;
  ::COVESA::DMS::Dms* PROTOBUF_NONNULL _internal_mutable_dms();

  public:
  // optional .COVESA.HUB_HF.Hub_hf hub_hf = 4;
  bool has_hub_hf() const;
  void clear_hub_hf() ;
  const ::COVESA::HUB_HF::Hub_hf& hub_hf() const;
  [[nodiscard]] ::COVESA::HUB_HF::Hub_hf* PROTOBUF_NULLABLE release_hub_hf();
  ::COVESA::HUB_HF::Hub_hf* PROTOBUF_NONNULL mutable_hub_hf();
  void set_allocated_hub_hf(::COVESA::HUB_HF::Hub_hf* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_hub_hf(::COVESA::HUB_HF::Hub_hf* PROTOBUF_NULLABLE value);
  ::COVESA::HUB_HF::Hub_hf* PROTOBUF_NULLABLE unsafe_arena_release_hub_hf();

  private:
  const ::COVESA::HUB_HF::Hub_hf& _internal_hub_hf() const;
  ::COVESA::HUB_HF::Hub_hf* PROTOBUF_NONNULL _internal_mutable_hub_hf();

  public:
  // optional .COVESA.IVDCT.Ivdct ivdct = 5;
  bool has_ivdct() const;
  void clear_ivdct() ;
  const ::COVESA::IVDCT::Ivdct& ivdct() const;
  [[nodiscard]] ::COVESA::IVDCT::Ivdct* PROTOBUF_NULLABLE release_ivdct();
  ::COVESA::IVDCT::Ivdct* PROTOBUF_NONNULL mutable_ivdct();
  void set_allocated_ivdct(::COVESA::IVDCT::Ivdct* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_ivdct(::COVESA::IVDCT::Ivdct* PROTOBUF_NULLABLE value);
  ::COVESA::IVDCT::Ivdct* PROTOBUF_NULLABLE unsafe_arena_release_ivdct();

  private:
  const ::COVESA::IVDCT::Ivdct& _internal_ivdct() const;
  ::COVESA::IVDCT::Ivdct* PROTOBUF_NONNULL _internal_mutable_ivdct();

  public:
  // @@protoc_insertion_point(class_scope:COVESA.Covesa)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   5, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Covesa& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::COVESA::ADS_LF::Ads_lf* PROTOBUF_NULLABLE ads_lf_;
    ::COVESA::ADS_HF::Ads_hf* PROTOBUF_NULLABLE ads_hf_;
    ::COVESA::DMS::Dms* PROTOBUF_NULLABLE dms_;
    ::COVESA::HUB_HF::Hub_hf* PROTOBUF_NULLABLE hub_hf_;
    ::COVESA::IVDCT::Ivdct* PROTOBUF_NULLABLE ivdct_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_covesa_2fcovesa_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Covesa_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Covesa

// optional .COVESA.ADS_LF.Ads_lf ads_lf = 1;
inline bool Covesa::has_ads_lf() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ads_lf_ != nullptr);
  return value;
}
inline const ::COVESA::ADS_LF::Ads_lf& Covesa::_internal_ads_lf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::COVESA::ADS_LF::Ads_lf* p = _impl_.ads_lf_;
  return p != nullptr ? *p : reinterpret_cast<const ::COVESA::ADS_LF::Ads_lf&>(::COVESA::ADS_LF::_Ads_lf_default_instance_);
}
inline const ::COVESA::ADS_LF::Ads_lf& Covesa::ads_lf() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:COVESA.Covesa.ads_lf)
  return _internal_ads_lf();
}
inline void Covesa::unsafe_arena_set_allocated_ads_lf(
    ::COVESA::ADS_LF::Ads_lf* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ads_lf_);
  }
  _impl_.ads_lf_ = reinterpret_cast<::COVESA::ADS_LF::Ads_lf*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:COVESA.Covesa.ads_lf)
}
inline ::COVESA::ADS_LF::Ads_lf* PROTOBUF_NULLABLE Covesa::release_ads_lf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::COVESA::ADS_LF::Ads_lf* released = _impl_.ads_lf_;
  _impl_.ads_lf_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::COVESA::ADS_LF::Ads_lf* PROTOBUF_NULLABLE Covesa::unsafe_arena_release_ads_lf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:COVESA.Covesa.ads_lf)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::COVESA::ADS_LF::Ads_lf* temp = _impl_.ads_lf_;
  _impl_.ads_lf_ = nullptr;
  return temp;
}
inline ::COVESA::ADS_LF::Ads_lf* PROTOBUF_NONNULL Covesa::_internal_mutable_ads_lf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ads_lf_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::COVESA::ADS_LF::Ads_lf>(GetArena());
    _impl_.ads_lf_ = reinterpret_cast<::COVESA::ADS_LF::Ads_lf*>(p);
  }
  return _impl_.ads_lf_;
}
inline ::COVESA::ADS_LF::Ads_lf* PROTOBUF_NONNULL Covesa::mutable_ads_lf()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::COVESA::ADS_LF::Ads_lf* _msg = _internal_mutable_ads_lf();
  // @@protoc_insertion_point(field_mutable:COVESA.Covesa.ads_lf)
  return _msg;
}
inline void Covesa::set_allocated_ads_lf(::COVESA::ADS_LF::Ads_lf* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ads_lf_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.ads_lf_ = reinterpret_cast<::COVESA::ADS_LF::Ads_lf*>(value);
  // @@protoc_insertion_point(field_set_allocated:COVESA.Covesa.ads_lf)
}

// optional .COVESA.ADS_HF.Ads_hf ads_hf = 2;
inline bool Covesa::has_ads_hf() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ads_hf_ != nullptr);
  return value;
}
inline const ::COVESA::ADS_HF::Ads_hf& Covesa::_internal_ads_hf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::COVESA::ADS_HF::Ads_hf* p = _impl_.ads_hf_;
  return p != nullptr ? *p : reinterpret_cast<const ::COVESA::ADS_HF::Ads_hf&>(::COVESA::ADS_HF::_Ads_hf_default_instance_);
}
inline const ::COVESA::ADS_HF::Ads_hf& Covesa::ads_hf() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:COVESA.Covesa.ads_hf)
  return _internal_ads_hf();
}
inline void Covesa::unsafe_arena_set_allocated_ads_hf(
    ::COVESA::ADS_HF::Ads_hf* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ads_hf_);
  }
  _impl_.ads_hf_ = reinterpret_cast<::COVESA::ADS_HF::Ads_hf*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:COVESA.Covesa.ads_hf)
}
inline ::COVESA::ADS_HF::Ads_hf* PROTOBUF_NULLABLE Covesa::release_ads_hf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::COVESA::ADS_HF::Ads_hf* released = _impl_.ads_hf_;
  _impl_.ads_hf_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::COVESA::ADS_HF::Ads_hf* PROTOBUF_NULLABLE Covesa::unsafe_arena_release_ads_hf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:COVESA.Covesa.ads_hf)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::COVESA::ADS_HF::Ads_hf* temp = _impl_.ads_hf_;
  _impl_.ads_hf_ = nullptr;
  return temp;
}
inline ::COVESA::ADS_HF::Ads_hf* PROTOBUF_NONNULL Covesa::_internal_mutable_ads_hf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ads_hf_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::COVESA::ADS_HF::Ads_hf>(GetArena());
    _impl_.ads_hf_ = reinterpret_cast<::COVESA::ADS_HF::Ads_hf*>(p);
  }
  return _impl_.ads_hf_;
}
inline ::COVESA::ADS_HF::Ads_hf* PROTOBUF_NONNULL Covesa::mutable_ads_hf()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::COVESA::ADS_HF::Ads_hf* _msg = _internal_mutable_ads_hf();
  // @@protoc_insertion_point(field_mutable:COVESA.Covesa.ads_hf)
  return _msg;
}
inline void Covesa::set_allocated_ads_hf(::COVESA::ADS_HF::Ads_hf* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ads_hf_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.ads_hf_ = reinterpret_cast<::COVESA::ADS_HF::Ads_hf*>(value);
  // @@protoc_insertion_point(field_set_allocated:COVESA.Covesa.ads_hf)
}

// optional .COVESA.DMS.Dms dms = 3;
inline bool Covesa::has_dms() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.dms_ != nullptr);
  return value;
}
inline const ::COVESA::DMS::Dms& Covesa::_internal_dms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::COVESA::DMS::Dms* p = _impl_.dms_;
  return p != nullptr ? *p : reinterpret_cast<const ::COVESA::DMS::Dms&>(::COVESA::DMS::_Dms_default_instance_);
}
inline const ::COVESA::DMS::Dms& Covesa::dms() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:COVESA.Covesa.dms)
  return _internal_dms();
}
inline void Covesa::unsafe_arena_set_allocated_dms(
    ::COVESA::DMS::Dms* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.dms_);
  }
  _impl_.dms_ = reinterpret_cast<::COVESA::DMS::Dms*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:COVESA.Covesa.dms)
}
inline ::COVESA::DMS::Dms* PROTOBUF_NULLABLE Covesa::release_dms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::COVESA::DMS::Dms* released = _impl_.dms_;
  _impl_.dms_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::COVESA::DMS::Dms* PROTOBUF_NULLABLE Covesa::unsafe_arena_release_dms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:COVESA.Covesa.dms)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::COVESA::DMS::Dms* temp = _impl_.dms_;
  _impl_.dms_ = nullptr;
  return temp;
}
inline ::COVESA::DMS::Dms* PROTOBUF_NONNULL Covesa::_internal_mutable_dms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dms_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::COVESA::DMS::Dms>(GetArena());
    _impl_.dms_ = reinterpret_cast<::COVESA::DMS::Dms*>(p);
  }
  return _impl_.dms_;
}
inline ::COVESA::DMS::Dms* PROTOBUF_NONNULL Covesa::mutable_dms()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::COVESA::DMS::Dms* _msg = _internal_mutable_dms();
  // @@protoc_insertion_point(field_mutable:COVESA.Covesa.dms)
  return _msg;
}
inline void Covesa::set_allocated_dms(::COVESA::DMS::Dms* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.dms_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.dms_ = reinterpret_cast<::COVESA::DMS::Dms*>(value);
  // @@protoc_insertion_point(field_set_allocated:COVESA.Covesa.dms)
}

// optional .COVESA.HUB_HF.Hub_hf hub_hf = 4;
inline bool Covesa::has_hub_hf() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.hub_hf_ != nullptr);
  return value;
}
inline const ::COVESA::HUB_HF::Hub_hf& Covesa::_internal_hub_hf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::COVESA::HUB_HF::Hub_hf* p = _impl_.hub_hf_;
  return p != nullptr ? *p : reinterpret_cast<const ::COVESA::HUB_HF::Hub_hf&>(::COVESA::HUB_HF::_Hub_hf_default_instance_);
}
inline const ::COVESA::HUB_HF::Hub_hf& Covesa::hub_hf() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:COVESA.Covesa.hub_hf)
  return _internal_hub_hf();
}
inline void Covesa::unsafe_arena_set_allocated_hub_hf(
    ::COVESA::HUB_HF::Hub_hf* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.hub_hf_);
  }
  _impl_.hub_hf_ = reinterpret_cast<::COVESA::HUB_HF::Hub_hf*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:COVESA.Covesa.hub_hf)
}
inline ::COVESA::HUB_HF::Hub_hf* PROTOBUF_NULLABLE Covesa::release_hub_hf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::COVESA::HUB_HF::Hub_hf* released = _impl_.hub_hf_;
  _impl_.hub_hf_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::COVESA::HUB_HF::Hub_hf* PROTOBUF_NULLABLE Covesa::unsafe_arena_release_hub_hf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:COVESA.Covesa.hub_hf)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::COVESA::HUB_HF::Hub_hf* temp = _impl_.hub_hf_;
  _impl_.hub_hf_ = nullptr;
  return temp;
}
inline ::COVESA::HUB_HF::Hub_hf* PROTOBUF_NONNULL Covesa::_internal_mutable_hub_hf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.hub_hf_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::COVESA::HUB_HF::Hub_hf>(GetArena());
    _impl_.hub_hf_ = reinterpret_cast<::COVESA::HUB_HF::Hub_hf*>(p);
  }
  return _impl_.hub_hf_;
}
inline ::COVESA::HUB_HF::Hub_hf* PROTOBUF_NONNULL Covesa::mutable_hub_hf()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::COVESA::HUB_HF::Hub_hf* _msg = _internal_mutable_hub_hf();
  // @@protoc_insertion_point(field_mutable:COVESA.Covesa.hub_hf)
  return _msg;
}
inline void Covesa::set_allocated_hub_hf(::COVESA::HUB_HF::Hub_hf* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.hub_hf_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.hub_hf_ = reinterpret_cast<::COVESA::HUB_HF::Hub_hf*>(value);
  // @@protoc_insertion_point(field_set_allocated:COVESA.Covesa.hub_hf)
}

// optional .COVESA.IVDCT.Ivdct ivdct = 5;
inline bool Covesa::has_ivdct() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ivdct_ != nullptr);
  return value;
}
inline const ::COVESA::IVDCT::Ivdct& Covesa::_internal_ivdct() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::COVESA::IVDCT::Ivdct* p = _impl_.ivdct_;
  return p != nullptr ? *p : reinterpret_cast<const ::COVESA::IVDCT::Ivdct&>(::COVESA::IVDCT::_Ivdct_default_instance_);
}
inline const ::COVESA::IVDCT::Ivdct& Covesa::ivdct() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:COVESA.Covesa.ivdct)
  return _internal_ivdct();
}
inline void Covesa::unsafe_arena_set_allocated_ivdct(
    ::COVESA::IVDCT::Ivdct* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ivdct_);
  }
  _impl_.ivdct_ = reinterpret_cast<::COVESA::IVDCT::Ivdct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:COVESA.Covesa.ivdct)
}
inline ::COVESA::IVDCT::Ivdct* PROTOBUF_NULLABLE Covesa::release_ivdct() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::COVESA::IVDCT::Ivdct* released = _impl_.ivdct_;
  _impl_.ivdct_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::COVESA::IVDCT::Ivdct* PROTOBUF_NULLABLE Covesa::unsafe_arena_release_ivdct() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:COVESA.Covesa.ivdct)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::COVESA::IVDCT::Ivdct* temp = _impl_.ivdct_;
  _impl_.ivdct_ = nullptr;
  return temp;
}
inline ::COVESA::IVDCT::Ivdct* PROTOBUF_NONNULL Covesa::_internal_mutable_ivdct() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ivdct_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::COVESA::IVDCT::Ivdct>(GetArena());
    _impl_.ivdct_ = reinterpret_cast<::COVESA::IVDCT::Ivdct*>(p);
  }
  return _impl_.ivdct_;
}
inline ::COVESA::IVDCT::Ivdct* PROTOBUF_NONNULL Covesa::mutable_ivdct()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::COVESA::IVDCT::Ivdct* _msg = _internal_mutable_ivdct();
  // @@protoc_insertion_point(field_mutable:COVESA.Covesa.ivdct)
  return _msg;
}
inline void Covesa::set_allocated_ivdct(::COVESA::IVDCT::Ivdct* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ivdct_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.ivdct_ = reinterpret_cast<::COVESA::IVDCT::Ivdct*>(value);
  // @@protoc_insertion_point(field_set_allocated:COVESA.Covesa.ivdct)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace COVESA


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // covesa_2fcovesa_2eproto_2epb_2eh
