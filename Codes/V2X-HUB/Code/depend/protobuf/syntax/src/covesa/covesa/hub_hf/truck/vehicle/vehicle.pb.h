// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: covesa/hub_hf/truck/vehicle/vehicle.proto
// Protobuf C++ Version: 6.31.1

#ifndef covesa_2fhub_5fhf_2ftruck_2fvehicle_2fvehicle_2eproto_2epb_2eh
#define covesa_2fhub_5fhf_2ftruck_2fvehicle_2fvehicle_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "covesa/hub_hf/truck/vehicle/currentlocation/currentlocation.pb.h"
#include "covesa/hub_hf/truck/vehicle/genericvehicle/genericvehicle.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_covesa_2fhub_5fhf_2ftruck_2fvehicle_2fvehicle_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_covesa_2fhub_5fhf_2ftruck_2fvehicle_2fvehicle_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_covesa_2fhub_5fhf_2ftruck_2fvehicle_2fvehicle_2eproto;
}  // extern "C"
namespace COVESA {
namespace HUB_HF {
namespace TRUCK {
namespace VEHICLE {
class Vehicle;
struct VehicleDefaultTypeInternal;
extern VehicleDefaultTypeInternal _Vehicle_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Vehicle_class_data_;
}  // namespace VEHICLE
}  // namespace TRUCK
}  // namespace HUB_HF
}  // namespace COVESA
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace COVESA {
namespace HUB_HF {
namespace TRUCK {
namespace VEHICLE {

// ===================================================================


// -------------------------------------------------------------------

class Vehicle final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:COVESA.HUB_HF.TRUCK.VEHICLE.Vehicle) */ {
 public:
  inline Vehicle() : Vehicle(nullptr) {}
  ~Vehicle() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Vehicle* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Vehicle));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Vehicle(::google::protobuf::internal::ConstantInitialized);

  inline Vehicle(const Vehicle& from) : Vehicle(nullptr, from) {}
  inline Vehicle(Vehicle&& from) noexcept
      : Vehicle(nullptr, ::std::move(from)) {}
  inline Vehicle& operator=(const Vehicle& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vehicle& operator=(Vehicle&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Vehicle& default_instance() {
    return *reinterpret_cast<const Vehicle*>(
        &_Vehicle_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Vehicle& a, Vehicle& b) { a.Swap(&b); }
  inline void Swap(Vehicle* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vehicle* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Vehicle* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Vehicle>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Vehicle& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Vehicle& from) { Vehicle::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Vehicle* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "COVESA.HUB_HF.TRUCK.VEHICLE.Vehicle"; }

 protected:
  explicit Vehicle(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Vehicle(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Vehicle& from);
  Vehicle(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Vehicle&& from) noexcept
      : Vehicle(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCurrentlocationFieldNumber = 1,
    kGenericvehicleFieldNumber = 2,
  };
  // repeated .COVESA.HUB_HF.TRUCK.VEHICLE.CURRENTLOCATION.Currentlocation currentlocation = 1;
  int currentlocation_size() const;
  private:
  int _internal_currentlocation_size() const;

  public:
  void clear_currentlocation() ;
  ::COVESA::HUB_HF::TRUCK::VEHICLE::CURRENTLOCATION::Currentlocation* PROTOBUF_NONNULL mutable_currentlocation(int index);
  ::google::protobuf::RepeatedPtrField<::COVESA::HUB_HF::TRUCK::VEHICLE::CURRENTLOCATION::Currentlocation>* PROTOBUF_NONNULL mutable_currentlocation();

  private:
  const ::google::protobuf::RepeatedPtrField<::COVESA::HUB_HF::TRUCK::VEHICLE::CURRENTLOCATION::Currentlocation>& _internal_currentlocation() const;
  ::google::protobuf::RepeatedPtrField<::COVESA::HUB_HF::TRUCK::VEHICLE::CURRENTLOCATION::Currentlocation>* PROTOBUF_NONNULL _internal_mutable_currentlocation();
  public:
  const ::COVESA::HUB_HF::TRUCK::VEHICLE::CURRENTLOCATION::Currentlocation& currentlocation(int index) const;
  ::COVESA::HUB_HF::TRUCK::VEHICLE::CURRENTLOCATION::Currentlocation* PROTOBUF_NONNULL add_currentlocation();
  const ::google::protobuf::RepeatedPtrField<::COVESA::HUB_HF::TRUCK::VEHICLE::CURRENTLOCATION::Currentlocation>& currentlocation() const;
  // repeated .COVESA.HUB_HF.TRUCK.VEHICLE.GENERICVEHICLE.Genericvehicle genericvehicle = 2;
  int genericvehicle_size() const;
  private:
  int _internal_genericvehicle_size() const;

  public:
  void clear_genericvehicle() ;
  ::COVESA::HUB_HF::TRUCK::VEHICLE::GENERICVEHICLE::Genericvehicle* PROTOBUF_NONNULL mutable_genericvehicle(int index);
  ::google::protobuf::RepeatedPtrField<::COVESA::HUB_HF::TRUCK::VEHICLE::GENERICVEHICLE::Genericvehicle>* PROTOBUF_NONNULL mutable_genericvehicle();

  private:
  const ::google::protobuf::RepeatedPtrField<::COVESA::HUB_HF::TRUCK::VEHICLE::GENERICVEHICLE::Genericvehicle>& _internal_genericvehicle() const;
  ::google::protobuf::RepeatedPtrField<::COVESA::HUB_HF::TRUCK::VEHICLE::GENERICVEHICLE::Genericvehicle>* PROTOBUF_NONNULL _internal_mutable_genericvehicle();
  public:
  const ::COVESA::HUB_HF::TRUCK::VEHICLE::GENERICVEHICLE::Genericvehicle& genericvehicle(int index) const;
  ::COVESA::HUB_HF::TRUCK::VEHICLE::GENERICVEHICLE::Genericvehicle* PROTOBUF_NONNULL add_genericvehicle();
  const ::google::protobuf::RepeatedPtrField<::COVESA::HUB_HF::TRUCK::VEHICLE::GENERICVEHICLE::Genericvehicle>& genericvehicle() const;
  // @@protoc_insertion_point(class_scope:COVESA.HUB_HF.TRUCK.VEHICLE.Vehicle)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Vehicle& from_msg);
    ::google::protobuf::RepeatedPtrField< ::COVESA::HUB_HF::TRUCK::VEHICLE::CURRENTLOCATION::Currentlocation > currentlocation_;
    ::google::protobuf::RepeatedPtrField< ::COVESA::HUB_HF::TRUCK::VEHICLE::GENERICVEHICLE::Genericvehicle > genericvehicle_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_covesa_2fhub_5fhf_2ftruck_2fvehicle_2fvehicle_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Vehicle_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Vehicle

// repeated .COVESA.HUB_HF.TRUCK.VEHICLE.CURRENTLOCATION.Currentlocation currentlocation = 1;
inline int Vehicle::_internal_currentlocation_size() const {
  return _internal_currentlocation().size();
}
inline int Vehicle::currentlocation_size() const {
  return _internal_currentlocation_size();
}
inline ::COVESA::HUB_HF::TRUCK::VEHICLE::CURRENTLOCATION::Currentlocation* PROTOBUF_NONNULL Vehicle::mutable_currentlocation(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:COVESA.HUB_HF.TRUCK.VEHICLE.Vehicle.currentlocation)
  return _internal_mutable_currentlocation()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::COVESA::HUB_HF::TRUCK::VEHICLE::CURRENTLOCATION::Currentlocation>* PROTOBUF_NONNULL Vehicle::mutable_currentlocation()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:COVESA.HUB_HF.TRUCK.VEHICLE.Vehicle.currentlocation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_currentlocation();
}
inline const ::COVESA::HUB_HF::TRUCK::VEHICLE::CURRENTLOCATION::Currentlocation& Vehicle::currentlocation(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:COVESA.HUB_HF.TRUCK.VEHICLE.Vehicle.currentlocation)
  return _internal_currentlocation().Get(index);
}
inline ::COVESA::HUB_HF::TRUCK::VEHICLE::CURRENTLOCATION::Currentlocation* PROTOBUF_NONNULL Vehicle::add_currentlocation()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::COVESA::HUB_HF::TRUCK::VEHICLE::CURRENTLOCATION::Currentlocation* _add = _internal_mutable_currentlocation()->Add();
  // @@protoc_insertion_point(field_add:COVESA.HUB_HF.TRUCK.VEHICLE.Vehicle.currentlocation)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::COVESA::HUB_HF::TRUCK::VEHICLE::CURRENTLOCATION::Currentlocation>& Vehicle::currentlocation() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:COVESA.HUB_HF.TRUCK.VEHICLE.Vehicle.currentlocation)
  return _internal_currentlocation();
}
inline const ::google::protobuf::RepeatedPtrField<::COVESA::HUB_HF::TRUCK::VEHICLE::CURRENTLOCATION::Currentlocation>&
Vehicle::_internal_currentlocation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.currentlocation_;
}
inline ::google::protobuf::RepeatedPtrField<::COVESA::HUB_HF::TRUCK::VEHICLE::CURRENTLOCATION::Currentlocation>* PROTOBUF_NONNULL
Vehicle::_internal_mutable_currentlocation() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.currentlocation_;
}

// repeated .COVESA.HUB_HF.TRUCK.VEHICLE.GENERICVEHICLE.Genericvehicle genericvehicle = 2;
inline int Vehicle::_internal_genericvehicle_size() const {
  return _internal_genericvehicle().size();
}
inline int Vehicle::genericvehicle_size() const {
  return _internal_genericvehicle_size();
}
inline ::COVESA::HUB_HF::TRUCK::VEHICLE::GENERICVEHICLE::Genericvehicle* PROTOBUF_NONNULL Vehicle::mutable_genericvehicle(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:COVESA.HUB_HF.TRUCK.VEHICLE.Vehicle.genericvehicle)
  return _internal_mutable_genericvehicle()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::COVESA::HUB_HF::TRUCK::VEHICLE::GENERICVEHICLE::Genericvehicle>* PROTOBUF_NONNULL Vehicle::mutable_genericvehicle()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:COVESA.HUB_HF.TRUCK.VEHICLE.Vehicle.genericvehicle)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_genericvehicle();
}
inline const ::COVESA::HUB_HF::TRUCK::VEHICLE::GENERICVEHICLE::Genericvehicle& Vehicle::genericvehicle(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:COVESA.HUB_HF.TRUCK.VEHICLE.Vehicle.genericvehicle)
  return _internal_genericvehicle().Get(index);
}
inline ::COVESA::HUB_HF::TRUCK::VEHICLE::GENERICVEHICLE::Genericvehicle* PROTOBUF_NONNULL Vehicle::add_genericvehicle()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::COVESA::HUB_HF::TRUCK::VEHICLE::GENERICVEHICLE::Genericvehicle* _add = _internal_mutable_genericvehicle()->Add();
  // @@protoc_insertion_point(field_add:COVESA.HUB_HF.TRUCK.VEHICLE.Vehicle.genericvehicle)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::COVESA::HUB_HF::TRUCK::VEHICLE::GENERICVEHICLE::Genericvehicle>& Vehicle::genericvehicle() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:COVESA.HUB_HF.TRUCK.VEHICLE.Vehicle.genericvehicle)
  return _internal_genericvehicle();
}
inline const ::google::protobuf::RepeatedPtrField<::COVESA::HUB_HF::TRUCK::VEHICLE::GENERICVEHICLE::Genericvehicle>&
Vehicle::_internal_genericvehicle() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.genericvehicle_;
}
inline ::google::protobuf::RepeatedPtrField<::COVESA::HUB_HF::TRUCK::VEHICLE::GENERICVEHICLE::Genericvehicle>* PROTOBUF_NONNULL
Vehicle::_internal_mutable_genericvehicle() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.genericvehicle_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace VEHICLE
}  // namespace TRUCK
}  // namespace HUB_HF
}  // namespace COVESA


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // covesa_2fhub_5fhf_2ftruck_2fvehicle_2fvehicle_2eproto_2epb_2eh
