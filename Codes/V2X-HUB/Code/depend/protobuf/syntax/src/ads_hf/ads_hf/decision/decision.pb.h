// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ads_hf/decision/decision.proto
// Protobuf C++ Version: 6.31.1

#ifndef ads_5fhf_2fdecision_2fdecision_2eproto_2epb_2eh
#define ads_5fhf_2fdecision_2fdecision_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "validate/validate.pb.h"
#include "ads_hf/decision/goal/goal.pb.h"
#include "ads_hf/decision/cipo/cipo.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ads_5fhf_2fdecision_2fdecision_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ads_5fhf_2fdecision_2fdecision_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_ads_5fhf_2fdecision_2fdecision_2eproto;
}  // extern "C"
namespace ADS_HF {
namespace DECISION {
enum Decision_Plan : int;
extern const uint32_t Decision_Plan_internal_data_[];
class Decision;
struct DecisionDefaultTypeInternal;
extern DecisionDefaultTypeInternal _Decision_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Decision_class_data_;
}  // namespace DECISION
}  // namespace ADS_HF
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::ADS_HF::DECISION::Decision_Plan_internal_data_>
    internal::EnumTraitsImpl::value<::ADS_HF::DECISION::Decision_Plan>;
}  // namespace protobuf
}  // namespace google

namespace ADS_HF {
namespace DECISION {
enum Decision_Plan : int {
  Decision_Plan_STOP = 0,
  Decision_Plan_LANE_CHANGE_LEFT = 1,
  Decision_Plan_LANE_CHANGE_RIGHT = 2,
  Decision_Plan_KEEP_LANE = 3,
  Decision_Plan_Decision_Plan_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  Decision_Plan_Decision_Plan_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t Decision_Plan_internal_data_[];
inline constexpr Decision_Plan Decision_Plan_Plan_MIN =
    static_cast<Decision_Plan>(0);
inline constexpr Decision_Plan Decision_Plan_Plan_MAX =
    static_cast<Decision_Plan>(3);
inline bool Decision_Plan_IsValid(int value) {
  return 0 <= value && value <= 3;
}
inline constexpr int Decision_Plan_Plan_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Decision_Plan_descriptor();
template <typename T>
const ::std::string& Decision_Plan_Name(T value) {
  static_assert(::std::is_same<T, Decision_Plan>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to Plan_Name().");
  return Decision_Plan_Name(static_cast<Decision_Plan>(value));
}
template <>
inline const ::std::string& Decision_Plan_Name(Decision_Plan value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Decision_Plan_descriptor, 0, 3>(
      static_cast<int>(value));
}
inline bool Decision_Plan_Parse(
    ::absl::string_view name, Decision_Plan* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<Decision_Plan>(Decision_Plan_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class Decision final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ADS_HF.DECISION.Decision) */ {
 public:
  inline Decision() : Decision(nullptr) {}
  ~Decision() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Decision* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Decision));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Decision(::google::protobuf::internal::ConstantInitialized);

  inline Decision(const Decision& from) : Decision(nullptr, from) {}
  inline Decision(Decision&& from) noexcept
      : Decision(nullptr, ::std::move(from)) {}
  inline Decision& operator=(const Decision& from) {
    CopyFrom(from);
    return *this;
  }
  inline Decision& operator=(Decision&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Decision& default_instance() {
    return *reinterpret_cast<const Decision*>(
        &_Decision_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Decision& a, Decision& b) { a.Swap(&b); }
  inline void Swap(Decision* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Decision* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Decision* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Decision>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Decision& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Decision& from) { Decision::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Decision* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ADS_HF.DECISION.Decision"; }

 protected:
  explicit Decision(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Decision(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Decision& from);
  Decision(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Decision&& from) noexcept
      : Decision(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Plan = Decision_Plan;
  static constexpr Plan STOP = Decision_Plan_STOP;
  static constexpr Plan LANE_CHANGE_LEFT = Decision_Plan_LANE_CHANGE_LEFT;
  static constexpr Plan LANE_CHANGE_RIGHT = Decision_Plan_LANE_CHANGE_RIGHT;
  static constexpr Plan KEEP_LANE = Decision_Plan_KEEP_LANE;
  static inline bool Plan_IsValid(int value) {
    return Decision_Plan_IsValid(value);
  }
  static constexpr Plan Plan_MIN = Decision_Plan_Plan_MIN;
  static constexpr Plan Plan_MAX = Decision_Plan_Plan_MAX;
  static constexpr int Plan_ARRAYSIZE = Decision_Plan_Plan_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Plan_descriptor() {
    return Decision_Plan_descriptor();
  }
  template <typename T>
  static inline const ::std::string& Plan_Name(T value) {
    return Decision_Plan_Name(value);
  }
  static inline bool Plan_Parse(
      ::absl::string_view name, Plan* PROTOBUF_NONNULL value) {
    return Decision_Plan_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kGoalFieldNumber = 4,
    kCipoFieldNumber = 5,
    kTimestampFieldNumber = 1,
    kSeqFieldNumber = 2,
    kPlanFieldNumber = 3,
  };
  // optional .ADS_HF.DECISION.GOAL.Goal goal = 4;
  bool has_goal() const;
  void clear_goal() ;
  const ::ADS_HF::DECISION::GOAL::Goal& goal() const;
  [[nodiscard]] ::ADS_HF::DECISION::GOAL::Goal* PROTOBUF_NULLABLE release_goal();
  ::ADS_HF::DECISION::GOAL::Goal* PROTOBUF_NONNULL mutable_goal();
  void set_allocated_goal(::ADS_HF::DECISION::GOAL::Goal* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_goal(::ADS_HF::DECISION::GOAL::Goal* PROTOBUF_NULLABLE value);
  ::ADS_HF::DECISION::GOAL::Goal* PROTOBUF_NULLABLE unsafe_arena_release_goal();

  private:
  const ::ADS_HF::DECISION::GOAL::Goal& _internal_goal() const;
  ::ADS_HF::DECISION::GOAL::Goal* PROTOBUF_NONNULL _internal_mutable_goal();

  public:
  // optional .ADS_HF.DECISION.CIPO.Cipo cipo = 5;
  bool has_cipo() const;
  void clear_cipo() ;
  const ::ADS_HF::DECISION::CIPO::Cipo& cipo() const;
  [[nodiscard]] ::ADS_HF::DECISION::CIPO::Cipo* PROTOBUF_NULLABLE release_cipo();
  ::ADS_HF::DECISION::CIPO::Cipo* PROTOBUF_NONNULL mutable_cipo();
  void set_allocated_cipo(::ADS_HF::DECISION::CIPO::Cipo* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_cipo(::ADS_HF::DECISION::CIPO::Cipo* PROTOBUF_NULLABLE value);
  ::ADS_HF::DECISION::CIPO::Cipo* PROTOBUF_NULLABLE unsafe_arena_release_cipo();

  private:
  const ::ADS_HF::DECISION::CIPO::Cipo& _internal_cipo() const;
  ::ADS_HF::DECISION::CIPO::Cipo* PROTOBUF_NONNULL _internal_mutable_cipo();

  public:
  // optional uint64 timestamp = 1 [(.validate.rules) = {
  bool has_timestamp() const;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // optional uint32 seq = 2 [(.validate.rules) = {
  bool has_seq() const;
  void clear_seq() ;
  ::uint32_t seq() const;
  void set_seq(::uint32_t value);

  private:
  ::uint32_t _internal_seq() const;
  void _internal_set_seq(::uint32_t value);

  public:
  // optional .ADS_HF.DECISION.Decision.Plan plan = 3 [(.validate.rules) = {
  bool has_plan() const;
  void clear_plan() ;
  ::ADS_HF::DECISION::Decision_Plan plan() const;
  void set_plan(::ADS_HF::DECISION::Decision_Plan value);

  private:
  ::ADS_HF::DECISION::Decision_Plan _internal_plan() const;
  void _internal_set_plan(::ADS_HF::DECISION::Decision_Plan value);

  public:
  // @@protoc_insertion_point(class_scope:ADS_HF.DECISION.Decision)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Decision& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::ADS_HF::DECISION::GOAL::Goal* PROTOBUF_NULLABLE goal_;
    ::ADS_HF::DECISION::CIPO::Cipo* PROTOBUF_NULLABLE cipo_;
    ::uint64_t timestamp_;
    ::uint32_t seq_;
    int plan_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ads_5fhf_2fdecision_2fdecision_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Decision_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Decision

// optional uint64 timestamp = 1 [(.validate.rules) = {
inline bool Decision::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Decision::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint64_t Decision::timestamp() const {
  // @@protoc_insertion_point(field_get:ADS_HF.DECISION.Decision.timestamp)
  return _internal_timestamp();
}
inline void Decision::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:ADS_HF.DECISION.Decision.timestamp)
}
inline ::uint64_t Decision::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void Decision::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// optional uint32 seq = 2 [(.validate.rules) = {
inline bool Decision::has_seq() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void Decision::clear_seq() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t Decision::seq() const {
  // @@protoc_insertion_point(field_get:ADS_HF.DECISION.Decision.seq)
  return _internal_seq();
}
inline void Decision::set_seq(::uint32_t value) {
  _internal_set_seq(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:ADS_HF.DECISION.Decision.seq)
}
inline ::uint32_t Decision::_internal_seq() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seq_;
}
inline void Decision::_internal_set_seq(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_ = value;
}

// optional .ADS_HF.DECISION.Decision.Plan plan = 3 [(.validate.rules) = {
inline bool Decision::has_plan() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void Decision::clear_plan() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.plan_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::ADS_HF::DECISION::Decision_Plan Decision::plan() const {
  // @@protoc_insertion_point(field_get:ADS_HF.DECISION.Decision.plan)
  return _internal_plan();
}
inline void Decision::set_plan(::ADS_HF::DECISION::Decision_Plan value) {
  _internal_set_plan(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:ADS_HF.DECISION.Decision.plan)
}
inline ::ADS_HF::DECISION::Decision_Plan Decision::_internal_plan() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ADS_HF::DECISION::Decision_Plan>(_impl_.plan_);
}
inline void Decision::_internal_set_plan(::ADS_HF::DECISION::Decision_Plan value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.plan_ = value;
}

// optional .ADS_HF.DECISION.GOAL.Goal goal = 4;
inline bool Decision::has_goal() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.goal_ != nullptr);
  return value;
}
inline const ::ADS_HF::DECISION::GOAL::Goal& Decision::_internal_goal() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ADS_HF::DECISION::GOAL::Goal* p = _impl_.goal_;
  return p != nullptr ? *p : reinterpret_cast<const ::ADS_HF::DECISION::GOAL::Goal&>(::ADS_HF::DECISION::GOAL::_Goal_default_instance_);
}
inline const ::ADS_HF::DECISION::GOAL::Goal& Decision::goal() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ADS_HF.DECISION.Decision.goal)
  return _internal_goal();
}
inline void Decision::unsafe_arena_set_allocated_goal(
    ::ADS_HF::DECISION::GOAL::Goal* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.goal_);
  }
  _impl_.goal_ = reinterpret_cast<::ADS_HF::DECISION::GOAL::Goal*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ADS_HF.DECISION.Decision.goal)
}
inline ::ADS_HF::DECISION::GOAL::Goal* PROTOBUF_NULLABLE Decision::release_goal() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ADS_HF::DECISION::GOAL::Goal* released = _impl_.goal_;
  _impl_.goal_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ADS_HF::DECISION::GOAL::Goal* PROTOBUF_NULLABLE Decision::unsafe_arena_release_goal() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ADS_HF.DECISION.Decision.goal)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ADS_HF::DECISION::GOAL::Goal* temp = _impl_.goal_;
  _impl_.goal_ = nullptr;
  return temp;
}
inline ::ADS_HF::DECISION::GOAL::Goal* PROTOBUF_NONNULL Decision::_internal_mutable_goal() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.goal_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ADS_HF::DECISION::GOAL::Goal>(GetArena());
    _impl_.goal_ = reinterpret_cast<::ADS_HF::DECISION::GOAL::Goal*>(p);
  }
  return _impl_.goal_;
}
inline ::ADS_HF::DECISION::GOAL::Goal* PROTOBUF_NONNULL Decision::mutable_goal()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::ADS_HF::DECISION::GOAL::Goal* _msg = _internal_mutable_goal();
  // @@protoc_insertion_point(field_mutable:ADS_HF.DECISION.Decision.goal)
  return _msg;
}
inline void Decision::set_allocated_goal(::ADS_HF::DECISION::GOAL::Goal* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.goal_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.goal_ = reinterpret_cast<::ADS_HF::DECISION::GOAL::Goal*>(value);
  // @@protoc_insertion_point(field_set_allocated:ADS_HF.DECISION.Decision.goal)
}

// optional .ADS_HF.DECISION.CIPO.Cipo cipo = 5;
inline bool Decision::has_cipo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cipo_ != nullptr);
  return value;
}
inline const ::ADS_HF::DECISION::CIPO::Cipo& Decision::_internal_cipo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ADS_HF::DECISION::CIPO::Cipo* p = _impl_.cipo_;
  return p != nullptr ? *p : reinterpret_cast<const ::ADS_HF::DECISION::CIPO::Cipo&>(::ADS_HF::DECISION::CIPO::_Cipo_default_instance_);
}
inline const ::ADS_HF::DECISION::CIPO::Cipo& Decision::cipo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ADS_HF.DECISION.Decision.cipo)
  return _internal_cipo();
}
inline void Decision::unsafe_arena_set_allocated_cipo(
    ::ADS_HF::DECISION::CIPO::Cipo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cipo_);
  }
  _impl_.cipo_ = reinterpret_cast<::ADS_HF::DECISION::CIPO::Cipo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ADS_HF.DECISION.Decision.cipo)
}
inline ::ADS_HF::DECISION::CIPO::Cipo* PROTOBUF_NULLABLE Decision::release_cipo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ADS_HF::DECISION::CIPO::Cipo* released = _impl_.cipo_;
  _impl_.cipo_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ADS_HF::DECISION::CIPO::Cipo* PROTOBUF_NULLABLE Decision::unsafe_arena_release_cipo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ADS_HF.DECISION.Decision.cipo)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ADS_HF::DECISION::CIPO::Cipo* temp = _impl_.cipo_;
  _impl_.cipo_ = nullptr;
  return temp;
}
inline ::ADS_HF::DECISION::CIPO::Cipo* PROTOBUF_NONNULL Decision::_internal_mutable_cipo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cipo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ADS_HF::DECISION::CIPO::Cipo>(GetArena());
    _impl_.cipo_ = reinterpret_cast<::ADS_HF::DECISION::CIPO::Cipo*>(p);
  }
  return _impl_.cipo_;
}
inline ::ADS_HF::DECISION::CIPO::Cipo* PROTOBUF_NONNULL Decision::mutable_cipo()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::ADS_HF::DECISION::CIPO::Cipo* _msg = _internal_mutable_cipo();
  // @@protoc_insertion_point(field_mutable:ADS_HF.DECISION.Decision.cipo)
  return _msg;
}
inline void Decision::set_allocated_cipo(::ADS_HF::DECISION::CIPO::Cipo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cipo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.cipo_ = reinterpret_cast<::ADS_HF::DECISION::CIPO::Cipo*>(value);
  // @@protoc_insertion_point(field_set_allocated:ADS_HF.DECISION.Decision.cipo)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace DECISION
}  // namespace ADS_HF


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::ADS_HF::DECISION::Decision_Plan> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::ADS_HF::DECISION::Decision_Plan>() {
  return ::ADS_HF::DECISION::Decision_Plan_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // ads_5fhf_2fdecision_2fdecision_2eproto_2epb_2eh
