// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ads_hf/obj/obj.proto
// Protobuf C++ Version: 6.31.1

#ifndef ads_5fhf_2fobj_2fobj_2eproto_2epb_2eh
#define ads_5fhf_2fobj_2fobj_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "validate/validate.pb.h"
#include "ads_hf/obj/speed/speed.pb.h"
#include "ads_hf/obj/corner_vector/corner_vector.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ads_5fhf_2fobj_2fobj_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ads_5fhf_2fobj_2fobj_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_ads_5fhf_2fobj_2fobj_2eproto;
}  // extern "C"
namespace ADS_HF {
namespace OBJ {
enum Obj_TypeEnum : int;
extern const uint32_t Obj_TypeEnum_internal_data_[];
class Obj;
struct ObjDefaultTypeInternal;
extern ObjDefaultTypeInternal _Obj_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Obj_class_data_;
}  // namespace OBJ
}  // namespace ADS_HF
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::ADS_HF::OBJ::Obj_TypeEnum_internal_data_>
    internal::EnumTraitsImpl::value<::ADS_HF::OBJ::Obj_TypeEnum>;
}  // namespace protobuf
}  // namespace google

namespace ADS_HF {
namespace OBJ {
enum Obj_TypeEnum : int {
  Obj_TypeEnum_TYPE_UNKNOWN = 0,
  Obj_TypeEnum_CAR = 1,
  Obj_TypeEnum_TRUCK = 2,
  Obj_TypeEnum_BUS = 3,
  Obj_TypeEnum_TRAILER = 4,
  Obj_TypeEnum_BICYCLE = 5,
  Obj_TypeEnum_MOTORCYCLE = 6,
  Obj_TypeEnum_PERSON = 7,
  Obj_TypeEnum_ANIMAL = 8,
  Obj_TypeEnum_POTHOLE = 9,
  Obj_TypeEnum_GARBAGE = 10,
  Obj_TypeEnum_Obj_TypeEnum_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  Obj_TypeEnum_Obj_TypeEnum_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t Obj_TypeEnum_internal_data_[];
inline constexpr Obj_TypeEnum Obj_TypeEnum_TypeEnum_MIN =
    static_cast<Obj_TypeEnum>(0);
inline constexpr Obj_TypeEnum Obj_TypeEnum_TypeEnum_MAX =
    static_cast<Obj_TypeEnum>(10);
inline bool Obj_TypeEnum_IsValid(int value) {
  return 0 <= value && value <= 10;
}
inline constexpr int Obj_TypeEnum_TypeEnum_ARRAYSIZE = 10 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Obj_TypeEnum_descriptor();
template <typename T>
const ::std::string& Obj_TypeEnum_Name(T value) {
  static_assert(::std::is_same<T, Obj_TypeEnum>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to TypeEnum_Name().");
  return Obj_TypeEnum_Name(static_cast<Obj_TypeEnum>(value));
}
template <>
inline const ::std::string& Obj_TypeEnum_Name(Obj_TypeEnum value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Obj_TypeEnum_descriptor, 0, 10>(
      static_cast<int>(value));
}
inline bool Obj_TypeEnum_Parse(
    ::absl::string_view name, Obj_TypeEnum* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<Obj_TypeEnum>(Obj_TypeEnum_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class Obj final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ADS_HF.OBJ.Obj) */ {
 public:
  inline Obj() : Obj(nullptr) {}
  ~Obj() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Obj* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Obj));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Obj(::google::protobuf::internal::ConstantInitialized);

  inline Obj(const Obj& from) : Obj(nullptr, from) {}
  inline Obj(Obj&& from) noexcept
      : Obj(nullptr, ::std::move(from)) {}
  inline Obj& operator=(const Obj& from) {
    CopyFrom(from);
    return *this;
  }
  inline Obj& operator=(Obj&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Obj& default_instance() {
    return *reinterpret_cast<const Obj*>(
        &_Obj_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Obj& a, Obj& b) { a.Swap(&b); }
  inline void Swap(Obj* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Obj* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Obj* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Obj>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Obj& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Obj& from) { Obj::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Obj* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ADS_HF.OBJ.Obj"; }

 protected:
  explicit Obj(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Obj(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Obj& from);
  Obj(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Obj&& from) noexcept
      : Obj(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using TypeEnum = Obj_TypeEnum;
  static constexpr TypeEnum TYPE_UNKNOWN = Obj_TypeEnum_TYPE_UNKNOWN;
  static constexpr TypeEnum CAR = Obj_TypeEnum_CAR;
  static constexpr TypeEnum TRUCK = Obj_TypeEnum_TRUCK;
  static constexpr TypeEnum BUS = Obj_TypeEnum_BUS;
  static constexpr TypeEnum TRAILER = Obj_TypeEnum_TRAILER;
  static constexpr TypeEnum BICYCLE = Obj_TypeEnum_BICYCLE;
  static constexpr TypeEnum MOTORCYCLE = Obj_TypeEnum_MOTORCYCLE;
  static constexpr TypeEnum PERSON = Obj_TypeEnum_PERSON;
  static constexpr TypeEnum ANIMAL = Obj_TypeEnum_ANIMAL;
  static constexpr TypeEnum POTHOLE = Obj_TypeEnum_POTHOLE;
  static constexpr TypeEnum GARBAGE = Obj_TypeEnum_GARBAGE;
  static inline bool TypeEnum_IsValid(int value) {
    return Obj_TypeEnum_IsValid(value);
  }
  static constexpr TypeEnum TypeEnum_MIN = Obj_TypeEnum_TypeEnum_MIN;
  static constexpr TypeEnum TypeEnum_MAX = Obj_TypeEnum_TypeEnum_MAX;
  static constexpr int TypeEnum_ARRAYSIZE = Obj_TypeEnum_TypeEnum_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL TypeEnum_descriptor() {
    return Obj_TypeEnum_descriptor();
  }
  template <typename T>
  static inline const ::std::string& TypeEnum_Name(T value) {
    return Obj_TypeEnum_Name(value);
  }
  static inline bool TypeEnum_Parse(
      ::absl::string_view name, TypeEnum* PROTOBUF_NONNULL value) {
    return Obj_TypeEnum_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 2,
    kSpeedFieldNumber = 5,
    kCornerVectorFieldNumber = 6,
    kTimestampFieldNumber = 1,
    kTypeFieldNumber = 3,
    kHeadingFieldNumber = 4,
  };
  // optional string id = 2 [(.validate.rules) = {
  bool has_id() const;
  void clear_id() ;
  const ::std::string& id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_id();
  void set_allocated_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_id();

  public:
  // optional .ADS_HF.OBJ.SPEED.Speed speed = 5;
  bool has_speed() const;
  void clear_speed() ;
  const ::ADS_HF::OBJ::SPEED::Speed& speed() const;
  [[nodiscard]] ::ADS_HF::OBJ::SPEED::Speed* PROTOBUF_NULLABLE release_speed();
  ::ADS_HF::OBJ::SPEED::Speed* PROTOBUF_NONNULL mutable_speed();
  void set_allocated_speed(::ADS_HF::OBJ::SPEED::Speed* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_speed(::ADS_HF::OBJ::SPEED::Speed* PROTOBUF_NULLABLE value);
  ::ADS_HF::OBJ::SPEED::Speed* PROTOBUF_NULLABLE unsafe_arena_release_speed();

  private:
  const ::ADS_HF::OBJ::SPEED::Speed& _internal_speed() const;
  ::ADS_HF::OBJ::SPEED::Speed* PROTOBUF_NONNULL _internal_mutable_speed();

  public:
  // optional .ADS_HF.OBJ.CORNER_VECTOR.CornerVector corner_vector = 6;
  bool has_corner_vector() const;
  void clear_corner_vector() ;
  const ::ADS_HF::OBJ::CORNER_VECTOR::CornerVector& corner_vector() const;
  [[nodiscard]] ::ADS_HF::OBJ::CORNER_VECTOR::CornerVector* PROTOBUF_NULLABLE release_corner_vector();
  ::ADS_HF::OBJ::CORNER_VECTOR::CornerVector* PROTOBUF_NONNULL mutable_corner_vector();
  void set_allocated_corner_vector(::ADS_HF::OBJ::CORNER_VECTOR::CornerVector* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_corner_vector(::ADS_HF::OBJ::CORNER_VECTOR::CornerVector* PROTOBUF_NULLABLE value);
  ::ADS_HF::OBJ::CORNER_VECTOR::CornerVector* PROTOBUF_NULLABLE unsafe_arena_release_corner_vector();

  private:
  const ::ADS_HF::OBJ::CORNER_VECTOR::CornerVector& _internal_corner_vector() const;
  ::ADS_HF::OBJ::CORNER_VECTOR::CornerVector* PROTOBUF_NONNULL _internal_mutable_corner_vector();

  public:
  // optional uint64 timestamp = 1 [(.validate.rules) = {
  bool has_timestamp() const;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // optional .ADS_HF.OBJ.Obj.TypeEnum type = 3 [(.validate.rules) = {
  bool has_type() const;
  void clear_type() ;
  ::ADS_HF::OBJ::Obj_TypeEnum type() const;
  void set_type(::ADS_HF::OBJ::Obj_TypeEnum value);

  private:
  ::ADS_HF::OBJ::Obj_TypeEnum _internal_type() const;
  void _internal_set_type(::ADS_HF::OBJ::Obj_TypeEnum value);

  public:
  // optional uint32 heading = 4 [(.validate.rules) = {
  bool has_heading() const;
  void clear_heading() ;
  ::uint32_t heading() const;
  void set_heading(::uint32_t value);

  private:
  ::uint32_t _internal_heading() const;
  void _internal_set_heading(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:ADS_HF.OBJ.Obj)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   2, 25,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Obj& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::ADS_HF::OBJ::SPEED::Speed* PROTOBUF_NULLABLE speed_;
    ::ADS_HF::OBJ::CORNER_VECTOR::CornerVector* PROTOBUF_NULLABLE corner_vector_;
    ::uint64_t timestamp_;
    int type_;
    ::uint32_t heading_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ads_5fhf_2fobj_2fobj_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Obj_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Obj

// optional uint64 timestamp = 1 [(.validate.rules) = {
inline bool Obj::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void Obj::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint64_t Obj::timestamp() const {
  // @@protoc_insertion_point(field_get:ADS_HF.OBJ.Obj.timestamp)
  return _internal_timestamp();
}
inline void Obj::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:ADS_HF.OBJ.Obj.timestamp)
}
inline ::uint64_t Obj::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void Obj::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// optional string id = 2 [(.validate.rules) = {
inline bool Obj::has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Obj::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& Obj::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ADS_HF.OBJ.Obj.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Obj::set_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ADS_HF.OBJ.Obj.id)
}
inline ::std::string* PROTOBUF_NONNULL Obj::mutable_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:ADS_HF.OBJ.Obj.id)
  return _s;
}
inline const ::std::string& Obj::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void Obj::_internal_set_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Obj::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Obj::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ADS_HF.OBJ.Obj.id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.id_.Set("", GetArena());
  }
  return released;
}
inline void Obj::set_allocated_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ADS_HF.OBJ.Obj.id)
}

// optional .ADS_HF.OBJ.Obj.TypeEnum type = 3 [(.validate.rules) = {
inline bool Obj::has_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void Obj::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::ADS_HF::OBJ::Obj_TypeEnum Obj::type() const {
  // @@protoc_insertion_point(field_get:ADS_HF.OBJ.Obj.type)
  return _internal_type();
}
inline void Obj::set_type(::ADS_HF::OBJ::Obj_TypeEnum value) {
  _internal_set_type(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:ADS_HF.OBJ.Obj.type)
}
inline ::ADS_HF::OBJ::Obj_TypeEnum Obj::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ADS_HF::OBJ::Obj_TypeEnum>(_impl_.type_);
}
inline void Obj::_internal_set_type(::ADS_HF::OBJ::Obj_TypeEnum value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// optional uint32 heading = 4 [(.validate.rules) = {
inline bool Obj::has_heading() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void Obj::clear_heading() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.heading_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t Obj::heading() const {
  // @@protoc_insertion_point(field_get:ADS_HF.OBJ.Obj.heading)
  return _internal_heading();
}
inline void Obj::set_heading(::uint32_t value) {
  _internal_set_heading(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:ADS_HF.OBJ.Obj.heading)
}
inline ::uint32_t Obj::_internal_heading() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.heading_;
}
inline void Obj::_internal_set_heading(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.heading_ = value;
}

// optional .ADS_HF.OBJ.SPEED.Speed speed = 5;
inline bool Obj::has_speed() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.speed_ != nullptr);
  return value;
}
inline const ::ADS_HF::OBJ::SPEED::Speed& Obj::_internal_speed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ADS_HF::OBJ::SPEED::Speed* p = _impl_.speed_;
  return p != nullptr ? *p : reinterpret_cast<const ::ADS_HF::OBJ::SPEED::Speed&>(::ADS_HF::OBJ::SPEED::_Speed_default_instance_);
}
inline const ::ADS_HF::OBJ::SPEED::Speed& Obj::speed() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ADS_HF.OBJ.Obj.speed)
  return _internal_speed();
}
inline void Obj::unsafe_arena_set_allocated_speed(
    ::ADS_HF::OBJ::SPEED::Speed* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.speed_);
  }
  _impl_.speed_ = reinterpret_cast<::ADS_HF::OBJ::SPEED::Speed*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ADS_HF.OBJ.Obj.speed)
}
inline ::ADS_HF::OBJ::SPEED::Speed* PROTOBUF_NULLABLE Obj::release_speed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ADS_HF::OBJ::SPEED::Speed* released = _impl_.speed_;
  _impl_.speed_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ADS_HF::OBJ::SPEED::Speed* PROTOBUF_NULLABLE Obj::unsafe_arena_release_speed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ADS_HF.OBJ.Obj.speed)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ADS_HF::OBJ::SPEED::Speed* temp = _impl_.speed_;
  _impl_.speed_ = nullptr;
  return temp;
}
inline ::ADS_HF::OBJ::SPEED::Speed* PROTOBUF_NONNULL Obj::_internal_mutable_speed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.speed_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ADS_HF::OBJ::SPEED::Speed>(GetArena());
    _impl_.speed_ = reinterpret_cast<::ADS_HF::OBJ::SPEED::Speed*>(p);
  }
  return _impl_.speed_;
}
inline ::ADS_HF::OBJ::SPEED::Speed* PROTOBUF_NONNULL Obj::mutable_speed()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::ADS_HF::OBJ::SPEED::Speed* _msg = _internal_mutable_speed();
  // @@protoc_insertion_point(field_mutable:ADS_HF.OBJ.Obj.speed)
  return _msg;
}
inline void Obj::set_allocated_speed(::ADS_HF::OBJ::SPEED::Speed* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.speed_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.speed_ = reinterpret_cast<::ADS_HF::OBJ::SPEED::Speed*>(value);
  // @@protoc_insertion_point(field_set_allocated:ADS_HF.OBJ.Obj.speed)
}

// optional .ADS_HF.OBJ.CORNER_VECTOR.CornerVector corner_vector = 6;
inline bool Obj::has_corner_vector() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.corner_vector_ != nullptr);
  return value;
}
inline const ::ADS_HF::OBJ::CORNER_VECTOR::CornerVector& Obj::_internal_corner_vector() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ADS_HF::OBJ::CORNER_VECTOR::CornerVector* p = _impl_.corner_vector_;
  return p != nullptr ? *p : reinterpret_cast<const ::ADS_HF::OBJ::CORNER_VECTOR::CornerVector&>(::ADS_HF::OBJ::CORNER_VECTOR::_CornerVector_default_instance_);
}
inline const ::ADS_HF::OBJ::CORNER_VECTOR::CornerVector& Obj::corner_vector() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ADS_HF.OBJ.Obj.corner_vector)
  return _internal_corner_vector();
}
inline void Obj::unsafe_arena_set_allocated_corner_vector(
    ::ADS_HF::OBJ::CORNER_VECTOR::CornerVector* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.corner_vector_);
  }
  _impl_.corner_vector_ = reinterpret_cast<::ADS_HF::OBJ::CORNER_VECTOR::CornerVector*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ADS_HF.OBJ.Obj.corner_vector)
}
inline ::ADS_HF::OBJ::CORNER_VECTOR::CornerVector* PROTOBUF_NULLABLE Obj::release_corner_vector() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::ADS_HF::OBJ::CORNER_VECTOR::CornerVector* released = _impl_.corner_vector_;
  _impl_.corner_vector_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ADS_HF::OBJ::CORNER_VECTOR::CornerVector* PROTOBUF_NULLABLE Obj::unsafe_arena_release_corner_vector() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ADS_HF.OBJ.Obj.corner_vector)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::ADS_HF::OBJ::CORNER_VECTOR::CornerVector* temp = _impl_.corner_vector_;
  _impl_.corner_vector_ = nullptr;
  return temp;
}
inline ::ADS_HF::OBJ::CORNER_VECTOR::CornerVector* PROTOBUF_NONNULL Obj::_internal_mutable_corner_vector() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.corner_vector_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ADS_HF::OBJ::CORNER_VECTOR::CornerVector>(GetArena());
    _impl_.corner_vector_ = reinterpret_cast<::ADS_HF::OBJ::CORNER_VECTOR::CornerVector*>(p);
  }
  return _impl_.corner_vector_;
}
inline ::ADS_HF::OBJ::CORNER_VECTOR::CornerVector* PROTOBUF_NONNULL Obj::mutable_corner_vector()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::ADS_HF::OBJ::CORNER_VECTOR::CornerVector* _msg = _internal_mutable_corner_vector();
  // @@protoc_insertion_point(field_mutable:ADS_HF.OBJ.Obj.corner_vector)
  return _msg;
}
inline void Obj::set_allocated_corner_vector(::ADS_HF::OBJ::CORNER_VECTOR::CornerVector* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.corner_vector_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.corner_vector_ = reinterpret_cast<::ADS_HF::OBJ::CORNER_VECTOR::CornerVector*>(value);
  // @@protoc_insertion_point(field_set_allocated:ADS_HF.OBJ.Obj.corner_vector)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace OBJ
}  // namespace ADS_HF


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::ADS_HF::OBJ::Obj_TypeEnum> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::ADS_HF::OBJ::Obj_TypeEnum>() {
  return ::ADS_HF::OBJ::Obj_TypeEnum_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // ads_5fhf_2fobj_2fobj_2eproto_2epb_2eh
