// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ads_hf/lane_bondary/lane_bondary.proto
// Protobuf C++ Version: 6.31.1

#ifndef ads_5fhf_2flane_5fbondary_2flane_5fbondary_2eproto_2epb_2eh
#define ads_5fhf_2flane_5fbondary_2flane_5fbondary_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "validate/validate.pb.h"
#include "ads_hf/lane_bondary/dist/dist.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ads_5fhf_2flane_5fbondary_2flane_5fbondary_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ads_5fhf_2flane_5fbondary_2flane_5fbondary_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_ads_5fhf_2flane_5fbondary_2flane_5fbondary_2eproto;
}  // extern "C"
namespace ADS_HF {
namespace LANE_BONDARY {
enum LaneBondary_PosRef : int;
extern const uint32_t LaneBondary_PosRef_internal_data_[];
enum LaneBondary_Type : int;
extern const uint32_t LaneBondary_Type_internal_data_[];
class LaneBondary;
struct LaneBondaryDefaultTypeInternal;
extern LaneBondaryDefaultTypeInternal _LaneBondary_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LaneBondary_class_data_;
}  // namespace LANE_BONDARY
}  // namespace ADS_HF
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::ADS_HF::LANE_BONDARY::LaneBondary_PosRef_internal_data_>
    internal::EnumTraitsImpl::value<::ADS_HF::LANE_BONDARY::LaneBondary_PosRef>;
template <>
internal::EnumTraitsT<::ADS_HF::LANE_BONDARY::LaneBondary_Type_internal_data_>
    internal::EnumTraitsImpl::value<::ADS_HF::LANE_BONDARY::LaneBondary_Type>;
}  // namespace protobuf
}  // namespace google

namespace ADS_HF {
namespace LANE_BONDARY {
enum LaneBondary_PosRef : int {
  LaneBondary_PosRef_POS_UNKNOWN = 0,
  LaneBondary_PosRef_LEFT = 1,
  LaneBondary_PosRef_CENTER = 2,
  LaneBondary_PosRef_RIGHT = 3,
  LaneBondary_PosRef_LaneBondary_PosRef_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  LaneBondary_PosRef_LaneBondary_PosRef_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t LaneBondary_PosRef_internal_data_[];
inline constexpr LaneBondary_PosRef LaneBondary_PosRef_PosRef_MIN =
    static_cast<LaneBondary_PosRef>(0);
inline constexpr LaneBondary_PosRef LaneBondary_PosRef_PosRef_MAX =
    static_cast<LaneBondary_PosRef>(3);
inline bool LaneBondary_PosRef_IsValid(int value) {
  return 0 <= value && value <= 3;
}
inline constexpr int LaneBondary_PosRef_PosRef_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL LaneBondary_PosRef_descriptor();
template <typename T>
const ::std::string& LaneBondary_PosRef_Name(T value) {
  static_assert(::std::is_same<T, LaneBondary_PosRef>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to PosRef_Name().");
  return LaneBondary_PosRef_Name(static_cast<LaneBondary_PosRef>(value));
}
template <>
inline const ::std::string& LaneBondary_PosRef_Name(LaneBondary_PosRef value) {
  return ::google::protobuf::internal::NameOfDenseEnum<LaneBondary_PosRef_descriptor, 0, 3>(
      static_cast<int>(value));
}
inline bool LaneBondary_PosRef_Parse(
    ::absl::string_view name, LaneBondary_PosRef* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<LaneBondary_PosRef>(LaneBondary_PosRef_descriptor(), name,
                                           value);
}
enum LaneBondary_Type : int {
  LaneBondary_Type_TB_UNKNOWN = 0,
  LaneBondary_Type_TB_DASHED = 1,
  LaneBondary_Type_TB_SOLID = 2,
  LaneBondary_Type_TB_DASHED_SOLID = 3,
  LaneBondary_Type_TB_DOUBLE_SOLID = 4,
  LaneBondary_Type_TB_WHITE_DASHED = 5,
  LaneBondary_Type_TB_WHITE_SOLID = 6,
  LaneBondary_Type_TB_WHITE_DASHED_SOLID = 7,
  LaneBondary_Type_TB_WHITE_DOUBLE_SOLID = 8,
  LaneBondary_Type_TB_YELLOW_DASHED = 9,
  LaneBondary_Type_TB_EXT_SOLID = 10,
  LaneBondary_Type_TB_YELLOW_DASHED_SOLID = 11,
  LaneBondary_Type_TB_YELLOW_DOUBLE_SOLID = 12,
  LaneBondary_Type_TB_STOP_LINE = 13,
  LaneBondary_Type_TB_CROSSWALK = 14,
  LaneBondary_Type_LaneBondary_Type_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  LaneBondary_Type_LaneBondary_Type_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t LaneBondary_Type_internal_data_[];
inline constexpr LaneBondary_Type LaneBondary_Type_Type_MIN =
    static_cast<LaneBondary_Type>(0);
inline constexpr LaneBondary_Type LaneBondary_Type_Type_MAX =
    static_cast<LaneBondary_Type>(14);
inline bool LaneBondary_Type_IsValid(int value) {
  return 0 <= value && value <= 14;
}
inline constexpr int LaneBondary_Type_Type_ARRAYSIZE = 14 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL LaneBondary_Type_descriptor();
template <typename T>
const ::std::string& LaneBondary_Type_Name(T value) {
  static_assert(::std::is_same<T, LaneBondary_Type>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to Type_Name().");
  return LaneBondary_Type_Name(static_cast<LaneBondary_Type>(value));
}
template <>
inline const ::std::string& LaneBondary_Type_Name(LaneBondary_Type value) {
  return ::google::protobuf::internal::NameOfDenseEnum<LaneBondary_Type_descriptor, 0, 14>(
      static_cast<int>(value));
}
inline bool LaneBondary_Type_Parse(
    ::absl::string_view name, LaneBondary_Type* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<LaneBondary_Type>(LaneBondary_Type_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class LaneBondary final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ADS_HF.LANE_BONDARY.LaneBondary) */ {
 public:
  inline LaneBondary() : LaneBondary(nullptr) {}
  ~LaneBondary() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LaneBondary* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LaneBondary));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LaneBondary(::google::protobuf::internal::ConstantInitialized);

  inline LaneBondary(const LaneBondary& from) : LaneBondary(nullptr, from) {}
  inline LaneBondary(LaneBondary&& from) noexcept
      : LaneBondary(nullptr, ::std::move(from)) {}
  inline LaneBondary& operator=(const LaneBondary& from) {
    CopyFrom(from);
    return *this;
  }
  inline LaneBondary& operator=(LaneBondary&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LaneBondary& default_instance() {
    return *reinterpret_cast<const LaneBondary*>(
        &_LaneBondary_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(LaneBondary& a, LaneBondary& b) { a.Swap(&b); }
  inline void Swap(LaneBondary* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LaneBondary* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LaneBondary* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LaneBondary>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LaneBondary& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LaneBondary& from) { LaneBondary::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LaneBondary* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ADS_HF.LANE_BONDARY.LaneBondary"; }

 protected:
  explicit LaneBondary(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LaneBondary(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LaneBondary& from);
  LaneBondary(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LaneBondary&& from) noexcept
      : LaneBondary(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using PosRef = LaneBondary_PosRef;
  static constexpr PosRef POS_UNKNOWN = LaneBondary_PosRef_POS_UNKNOWN;
  static constexpr PosRef LEFT = LaneBondary_PosRef_LEFT;
  static constexpr PosRef CENTER = LaneBondary_PosRef_CENTER;
  static constexpr PosRef RIGHT = LaneBondary_PosRef_RIGHT;
  static inline bool PosRef_IsValid(int value) {
    return LaneBondary_PosRef_IsValid(value);
  }
  static constexpr PosRef PosRef_MIN = LaneBondary_PosRef_PosRef_MIN;
  static constexpr PosRef PosRef_MAX = LaneBondary_PosRef_PosRef_MAX;
  static constexpr int PosRef_ARRAYSIZE = LaneBondary_PosRef_PosRef_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL PosRef_descriptor() {
    return LaneBondary_PosRef_descriptor();
  }
  template <typename T>
  static inline const ::std::string& PosRef_Name(T value) {
    return LaneBondary_PosRef_Name(value);
  }
  static inline bool PosRef_Parse(
      ::absl::string_view name, PosRef* PROTOBUF_NONNULL value) {
    return LaneBondary_PosRef_Parse(name, value);
  }
  using Type = LaneBondary_Type;
  static constexpr Type TB_UNKNOWN = LaneBondary_Type_TB_UNKNOWN;
  static constexpr Type TB_DASHED = LaneBondary_Type_TB_DASHED;
  static constexpr Type TB_SOLID = LaneBondary_Type_TB_SOLID;
  static constexpr Type TB_DASHED_SOLID = LaneBondary_Type_TB_DASHED_SOLID;
  static constexpr Type TB_DOUBLE_SOLID = LaneBondary_Type_TB_DOUBLE_SOLID;
  static constexpr Type TB_WHITE_DASHED = LaneBondary_Type_TB_WHITE_DASHED;
  static constexpr Type TB_WHITE_SOLID = LaneBondary_Type_TB_WHITE_SOLID;
  static constexpr Type TB_WHITE_DASHED_SOLID = LaneBondary_Type_TB_WHITE_DASHED_SOLID;
  static constexpr Type TB_WHITE_DOUBLE_SOLID = LaneBondary_Type_TB_WHITE_DOUBLE_SOLID;
  static constexpr Type TB_YELLOW_DASHED = LaneBondary_Type_TB_YELLOW_DASHED;
  static constexpr Type TB_EXT_SOLID = LaneBondary_Type_TB_EXT_SOLID;
  static constexpr Type TB_YELLOW_DASHED_SOLID = LaneBondary_Type_TB_YELLOW_DASHED_SOLID;
  static constexpr Type TB_YELLOW_DOUBLE_SOLID = LaneBondary_Type_TB_YELLOW_DOUBLE_SOLID;
  static constexpr Type TB_STOP_LINE = LaneBondary_Type_TB_STOP_LINE;
  static constexpr Type TB_CROSSWALK = LaneBondary_Type_TB_CROSSWALK;
  static inline bool Type_IsValid(int value) {
    return LaneBondary_Type_IsValid(value);
  }
  static constexpr Type Type_MIN = LaneBondary_Type_Type_MIN;
  static constexpr Type Type_MAX = LaneBondary_Type_Type_MAX;
  static constexpr int Type_ARRAYSIZE = LaneBondary_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Type_descriptor() {
    return LaneBondary_Type_descriptor();
  }
  template <typename T>
  static inline const ::std::string& Type_Name(T value) {
    return LaneBondary_Type_Name(value);
  }
  static inline bool Type_Parse(
      ::absl::string_view name, Type* PROTOBUF_NONNULL value) {
    return LaneBondary_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kDistFieldNumber = 4,
    kTimestampFieldNumber = 1,
    kLaneBoundaryNoFieldNumber = 2,
    kPosRefFieldNumber = 3,
    kTypeFieldNumber = 5,
  };
  // repeated .ADS_HF.LANE_BONDARY.DIST.Dist dist = 4 [(.validate.rules) = {
  int dist_size() const;
  private:
  int _internal_dist_size() const;

  public:
  void clear_dist() ;
  ::ADS_HF::LANE_BONDARY::DIST::Dist* PROTOBUF_NONNULL mutable_dist(int index);
  ::google::protobuf::RepeatedPtrField<::ADS_HF::LANE_BONDARY::DIST::Dist>* PROTOBUF_NONNULL mutable_dist();

  private:
  const ::google::protobuf::RepeatedPtrField<::ADS_HF::LANE_BONDARY::DIST::Dist>& _internal_dist() const;
  ::google::protobuf::RepeatedPtrField<::ADS_HF::LANE_BONDARY::DIST::Dist>* PROTOBUF_NONNULL _internal_mutable_dist();
  public:
  const ::ADS_HF::LANE_BONDARY::DIST::Dist& dist(int index) const;
  ::ADS_HF::LANE_BONDARY::DIST::Dist* PROTOBUF_NONNULL add_dist();
  const ::google::protobuf::RepeatedPtrField<::ADS_HF::LANE_BONDARY::DIST::Dist>& dist() const;
  // optional uint64 timestamp = 1 [(.validate.rules) = {
  bool has_timestamp() const;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // optional uint32 lane_boundary_no = 2 [(.validate.rules) = {
  bool has_lane_boundary_no() const;
  void clear_lane_boundary_no() ;
  ::uint32_t lane_boundary_no() const;
  void set_lane_boundary_no(::uint32_t value);

  private:
  ::uint32_t _internal_lane_boundary_no() const;
  void _internal_set_lane_boundary_no(::uint32_t value);

  public:
  // optional .ADS_HF.LANE_BONDARY.LaneBondary.PosRef pos_ref = 3 [(.validate.rules) = {
  bool has_pos_ref() const;
  void clear_pos_ref() ;
  ::ADS_HF::LANE_BONDARY::LaneBondary_PosRef pos_ref() const;
  void set_pos_ref(::ADS_HF::LANE_BONDARY::LaneBondary_PosRef value);

  private:
  ::ADS_HF::LANE_BONDARY::LaneBondary_PosRef _internal_pos_ref() const;
  void _internal_set_pos_ref(::ADS_HF::LANE_BONDARY::LaneBondary_PosRef value);

  public:
  // optional .ADS_HF.LANE_BONDARY.LaneBondary.Type type = 5 [(.validate.rules) = {
  bool has_type() const;
  void clear_type() ;
  ::ADS_HF::LANE_BONDARY::LaneBondary_Type type() const;
  void set_type(::ADS_HF::LANE_BONDARY::LaneBondary_Type value);

  private:
  ::ADS_HF::LANE_BONDARY::LaneBondary_Type _internal_type() const;
  void _internal_set_type(::ADS_HF::LANE_BONDARY::LaneBondary_Type value);

  public:
  // @@protoc_insertion_point(class_scope:ADS_HF.LANE_BONDARY.LaneBondary)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LaneBondary& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::ADS_HF::LANE_BONDARY::DIST::Dist > dist_;
    ::uint64_t timestamp_;
    ::uint32_t lane_boundary_no_;
    int pos_ref_;
    int type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ads_5fhf_2flane_5fbondary_2flane_5fbondary_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LaneBondary_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// LaneBondary

// optional uint64 timestamp = 1 [(.validate.rules) = {
inline bool LaneBondary::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void LaneBondary::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t LaneBondary::timestamp() const {
  // @@protoc_insertion_point(field_get:ADS_HF.LANE_BONDARY.LaneBondary.timestamp)
  return _internal_timestamp();
}
inline void LaneBondary::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:ADS_HF.LANE_BONDARY.LaneBondary.timestamp)
}
inline ::uint64_t LaneBondary::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void LaneBondary::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// optional uint32 lane_boundary_no = 2 [(.validate.rules) = {
inline bool LaneBondary::has_lane_boundary_no() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void LaneBondary::clear_lane_boundary_no() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lane_boundary_no_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t LaneBondary::lane_boundary_no() const {
  // @@protoc_insertion_point(field_get:ADS_HF.LANE_BONDARY.LaneBondary.lane_boundary_no)
  return _internal_lane_boundary_no();
}
inline void LaneBondary::set_lane_boundary_no(::uint32_t value) {
  _internal_set_lane_boundary_no(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:ADS_HF.LANE_BONDARY.LaneBondary.lane_boundary_no)
}
inline ::uint32_t LaneBondary::_internal_lane_boundary_no() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lane_boundary_no_;
}
inline void LaneBondary::_internal_set_lane_boundary_no(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lane_boundary_no_ = value;
}

// optional .ADS_HF.LANE_BONDARY.LaneBondary.PosRef pos_ref = 3 [(.validate.rules) = {
inline bool LaneBondary::has_pos_ref() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void LaneBondary::clear_pos_ref() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pos_ref_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::ADS_HF::LANE_BONDARY::LaneBondary_PosRef LaneBondary::pos_ref() const {
  // @@protoc_insertion_point(field_get:ADS_HF.LANE_BONDARY.LaneBondary.pos_ref)
  return _internal_pos_ref();
}
inline void LaneBondary::set_pos_ref(::ADS_HF::LANE_BONDARY::LaneBondary_PosRef value) {
  _internal_set_pos_ref(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:ADS_HF.LANE_BONDARY.LaneBondary.pos_ref)
}
inline ::ADS_HF::LANE_BONDARY::LaneBondary_PosRef LaneBondary::_internal_pos_ref() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ADS_HF::LANE_BONDARY::LaneBondary_PosRef>(_impl_.pos_ref_);
}
inline void LaneBondary::_internal_set_pos_ref(::ADS_HF::LANE_BONDARY::LaneBondary_PosRef value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pos_ref_ = value;
}

// repeated .ADS_HF.LANE_BONDARY.DIST.Dist dist = 4 [(.validate.rules) = {
inline int LaneBondary::_internal_dist_size() const {
  return _internal_dist().size();
}
inline int LaneBondary::dist_size() const {
  return _internal_dist_size();
}
inline ::ADS_HF::LANE_BONDARY::DIST::Dist* PROTOBUF_NONNULL LaneBondary::mutable_dist(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:ADS_HF.LANE_BONDARY.LaneBondary.dist)
  return _internal_mutable_dist()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::ADS_HF::LANE_BONDARY::DIST::Dist>* PROTOBUF_NONNULL LaneBondary::mutable_dist()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:ADS_HF.LANE_BONDARY.LaneBondary.dist)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_dist();
}
inline const ::ADS_HF::LANE_BONDARY::DIST::Dist& LaneBondary::dist(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ADS_HF.LANE_BONDARY.LaneBondary.dist)
  return _internal_dist().Get(index);
}
inline ::ADS_HF::LANE_BONDARY::DIST::Dist* PROTOBUF_NONNULL LaneBondary::add_dist()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::ADS_HF::LANE_BONDARY::DIST::Dist* _add = _internal_mutable_dist()->Add();
  // @@protoc_insertion_point(field_add:ADS_HF.LANE_BONDARY.LaneBondary.dist)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::ADS_HF::LANE_BONDARY::DIST::Dist>& LaneBondary::dist() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:ADS_HF.LANE_BONDARY.LaneBondary.dist)
  return _internal_dist();
}
inline const ::google::protobuf::RepeatedPtrField<::ADS_HF::LANE_BONDARY::DIST::Dist>&
LaneBondary::_internal_dist() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dist_;
}
inline ::google::protobuf::RepeatedPtrField<::ADS_HF::LANE_BONDARY::DIST::Dist>* PROTOBUF_NONNULL
LaneBondary::_internal_mutable_dist() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.dist_;
}

// optional .ADS_HF.LANE_BONDARY.LaneBondary.Type type = 5 [(.validate.rules) = {
inline bool LaneBondary::has_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void LaneBondary::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::ADS_HF::LANE_BONDARY::LaneBondary_Type LaneBondary::type() const {
  // @@protoc_insertion_point(field_get:ADS_HF.LANE_BONDARY.LaneBondary.type)
  return _internal_type();
}
inline void LaneBondary::set_type(::ADS_HF::LANE_BONDARY::LaneBondary_Type value) {
  _internal_set_type(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:ADS_HF.LANE_BONDARY.LaneBondary.type)
}
inline ::ADS_HF::LANE_BONDARY::LaneBondary_Type LaneBondary::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ADS_HF::LANE_BONDARY::LaneBondary_Type>(_impl_.type_);
}
inline void LaneBondary::_internal_set_type(::ADS_HF::LANE_BONDARY::LaneBondary_Type value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace LANE_BONDARY
}  // namespace ADS_HF


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::ADS_HF::LANE_BONDARY::LaneBondary_PosRef> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::ADS_HF::LANE_BONDARY::LaneBondary_PosRef>() {
  return ::ADS_HF::LANE_BONDARY::LaneBondary_PosRef_descriptor();
}
template <>
struct is_proto_enum<::ADS_HF::LANE_BONDARY::LaneBondary_Type> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::ADS_HF::LANE_BONDARY::LaneBondary_Type>() {
  return ::ADS_HF::LANE_BONDARY::LaneBondary_Type_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // ads_5fhf_2flane_5fbondary_2flane_5fbondary_2eproto_2epb_2eh
