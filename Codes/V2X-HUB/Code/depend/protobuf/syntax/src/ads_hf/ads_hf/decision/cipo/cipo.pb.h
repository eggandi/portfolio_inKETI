// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ads_hf/decision/cipo/cipo.proto
// Protobuf C++ Version: 6.31.1

#ifndef ads_5fhf_2fdecision_2fcipo_2fcipo_2eproto_2epb_2eh
#define ads_5fhf_2fdecision_2fcipo_2fcipo_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "validate/validate.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ads_5fhf_2fdecision_2fcipo_2fcipo_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ads_5fhf_2fdecision_2fcipo_2fcipo_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_ads_5fhf_2fdecision_2fcipo_2fcipo_2eproto;
}  // extern "C"
namespace ADS_HF {
namespace DECISION {
namespace CIPO {
enum Cipo_Predict : int;
extern const uint32_t Cipo_Predict_internal_data_[];
enum Cipo_Present : int;
extern const uint32_t Cipo_Present_internal_data_[];
class Cipo;
struct CipoDefaultTypeInternal;
extern CipoDefaultTypeInternal _Cipo_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Cipo_class_data_;
}  // namespace CIPO
}  // namespace DECISION
}  // namespace ADS_HF
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::ADS_HF::DECISION::CIPO::Cipo_Predict_internal_data_>
    internal::EnumTraitsImpl::value<::ADS_HF::DECISION::CIPO::Cipo_Predict>;
template <>
internal::EnumTraitsT<::ADS_HF::DECISION::CIPO::Cipo_Present_internal_data_>
    internal::EnumTraitsImpl::value<::ADS_HF::DECISION::CIPO::Cipo_Present>;
}  // namespace protobuf
}  // namespace google

namespace ADS_HF {
namespace DECISION {
namespace CIPO {
enum Cipo_Present : int {
  Cipo_Present_CIPO_PRESENT_NONE = 0,
  Cipo_Present_CIPO_PRESENT = 1,
  Cipo_Present_Cipo_Present_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  Cipo_Present_Cipo_Present_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t Cipo_Present_internal_data_[];
inline constexpr Cipo_Present Cipo_Present_Present_MIN =
    static_cast<Cipo_Present>(0);
inline constexpr Cipo_Present Cipo_Present_Present_MAX =
    static_cast<Cipo_Present>(1);
inline bool Cipo_Present_IsValid(int value) {
  return 0 <= value && value <= 1;
}
inline constexpr int Cipo_Present_Present_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Cipo_Present_descriptor();
template <typename T>
const ::std::string& Cipo_Present_Name(T value) {
  static_assert(::std::is_same<T, Cipo_Present>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to Present_Name().");
  return Cipo_Present_Name(static_cast<Cipo_Present>(value));
}
template <>
inline const ::std::string& Cipo_Present_Name(Cipo_Present value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Cipo_Present_descriptor, 0, 1>(
      static_cast<int>(value));
}
inline bool Cipo_Present_Parse(
    ::absl::string_view name, Cipo_Present* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<Cipo_Present>(Cipo_Present_descriptor(), name,
                                           value);
}
enum Cipo_Predict : int {
  Cipo_Predict_CIPO_PREDICT_NONE = 0,
  Cipo_Predict_CIPO_PREDICT_CUTIN = 1,
  Cipo_Predict_CIPO_PREDICT_CUTOUT = 2,
  Cipo_Predict_Cipo_Predict_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  Cipo_Predict_Cipo_Predict_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t Cipo_Predict_internal_data_[];
inline constexpr Cipo_Predict Cipo_Predict_Predict_MIN =
    static_cast<Cipo_Predict>(0);
inline constexpr Cipo_Predict Cipo_Predict_Predict_MAX =
    static_cast<Cipo_Predict>(2);
inline bool Cipo_Predict_IsValid(int value) {
  return 0 <= value && value <= 2;
}
inline constexpr int Cipo_Predict_Predict_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Cipo_Predict_descriptor();
template <typename T>
const ::std::string& Cipo_Predict_Name(T value) {
  static_assert(::std::is_same<T, Cipo_Predict>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to Predict_Name().");
  return Cipo_Predict_Name(static_cast<Cipo_Predict>(value));
}
template <>
inline const ::std::string& Cipo_Predict_Name(Cipo_Predict value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Cipo_Predict_descriptor, 0, 2>(
      static_cast<int>(value));
}
inline bool Cipo_Predict_Parse(
    ::absl::string_view name, Cipo_Predict* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<Cipo_Predict>(Cipo_Predict_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class Cipo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ADS_HF.DECISION.CIPO.Cipo) */ {
 public:
  inline Cipo() : Cipo(nullptr) {}
  ~Cipo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Cipo* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Cipo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Cipo(::google::protobuf::internal::ConstantInitialized);

  inline Cipo(const Cipo& from) : Cipo(nullptr, from) {}
  inline Cipo(Cipo&& from) noexcept
      : Cipo(nullptr, ::std::move(from)) {}
  inline Cipo& operator=(const Cipo& from) {
    CopyFrom(from);
    return *this;
  }
  inline Cipo& operator=(Cipo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Cipo& default_instance() {
    return *reinterpret_cast<const Cipo*>(
        &_Cipo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Cipo& a, Cipo& b) { a.Swap(&b); }
  inline void Swap(Cipo* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Cipo* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Cipo* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Cipo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Cipo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Cipo& from) { Cipo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Cipo* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ADS_HF.DECISION.CIPO.Cipo"; }

 protected:
  explicit Cipo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Cipo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Cipo& from);
  Cipo(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Cipo&& from) noexcept
      : Cipo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Present = Cipo_Present;
  static constexpr Present CIPO_PRESENT_NONE = Cipo_Present_CIPO_PRESENT_NONE;
  static constexpr Present CIPO_PRESENT = Cipo_Present_CIPO_PRESENT;
  static inline bool Present_IsValid(int value) {
    return Cipo_Present_IsValid(value);
  }
  static constexpr Present Present_MIN = Cipo_Present_Present_MIN;
  static constexpr Present Present_MAX = Cipo_Present_Present_MAX;
  static constexpr int Present_ARRAYSIZE = Cipo_Present_Present_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Present_descriptor() {
    return Cipo_Present_descriptor();
  }
  template <typename T>
  static inline const ::std::string& Present_Name(T value) {
    return Cipo_Present_Name(value);
  }
  static inline bool Present_Parse(
      ::absl::string_view name, Present* PROTOBUF_NONNULL value) {
    return Cipo_Present_Parse(name, value);
  }
  using Predict = Cipo_Predict;
  static constexpr Predict CIPO_PREDICT_NONE = Cipo_Predict_CIPO_PREDICT_NONE;
  static constexpr Predict CIPO_PREDICT_CUTIN = Cipo_Predict_CIPO_PREDICT_CUTIN;
  static constexpr Predict CIPO_PREDICT_CUTOUT = Cipo_Predict_CIPO_PREDICT_CUTOUT;
  static inline bool Predict_IsValid(int value) {
    return Cipo_Predict_IsValid(value);
  }
  static constexpr Predict Predict_MIN = Cipo_Predict_Predict_MIN;
  static constexpr Predict Predict_MAX = Cipo_Predict_Predict_MAX;
  static constexpr int Predict_ARRAYSIZE = Cipo_Predict_Predict_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Predict_descriptor() {
    return Cipo_Predict_descriptor();
  }
  template <typename T>
  static inline const ::std::string& Predict_Name(T value) {
    return Cipo_Predict_Name(value);
  }
  static inline bool Predict_Parse(
      ::absl::string_view name, Predict* PROTOBUF_NONNULL value) {
    return Cipo_Predict_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kPresentFieldNumber = 1,
    kDistFieldNumber = 2,
    kSpeedFieldNumber = 3,
    kPredictFieldNumber = 4,
  };
  // optional .ADS_HF.DECISION.CIPO.Cipo.Present present = 1 [(.validate.rules) = {
  bool has_present() const;
  void clear_present() ;
  ::ADS_HF::DECISION::CIPO::Cipo_Present present() const;
  void set_present(::ADS_HF::DECISION::CIPO::Cipo_Present value);

  private:
  ::ADS_HF::DECISION::CIPO::Cipo_Present _internal_present() const;
  void _internal_set_present(::ADS_HF::DECISION::CIPO::Cipo_Present value);

  public:
  // optional int32 dist = 2 [(.validate.rules) = {
  bool has_dist() const;
  void clear_dist() ;
  ::int32_t dist() const;
  void set_dist(::int32_t value);

  private:
  ::int32_t _internal_dist() const;
  void _internal_set_dist(::int32_t value);

  public:
  // optional uint32 speed = 3 [(.validate.rules) = {
  bool has_speed() const;
  void clear_speed() ;
  ::uint32_t speed() const;
  void set_speed(::uint32_t value);

  private:
  ::uint32_t _internal_speed() const;
  void _internal_set_speed(::uint32_t value);

  public:
  // optional .ADS_HF.DECISION.CIPO.Cipo.Predict predict = 4 [(.validate.rules) = {
  bool has_predict() const;
  void clear_predict() ;
  ::ADS_HF::DECISION::CIPO::Cipo_Predict predict() const;
  void set_predict(::ADS_HF::DECISION::CIPO::Cipo_Predict value);

  private:
  ::ADS_HF::DECISION::CIPO::Cipo_Predict _internal_predict() const;
  void _internal_set_predict(::ADS_HF::DECISION::CIPO::Cipo_Predict value);

  public:
  // @@protoc_insertion_point(class_scope:ADS_HF.DECISION.CIPO.Cipo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Cipo& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    int present_;
    ::int32_t dist_;
    ::uint32_t speed_;
    int predict_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ads_5fhf_2fdecision_2fcipo_2fcipo_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Cipo_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Cipo

// optional .ADS_HF.DECISION.CIPO.Cipo.Present present = 1 [(.validate.rules) = {
inline bool Cipo::has_present() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Cipo::clear_present() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.present_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::ADS_HF::DECISION::CIPO::Cipo_Present Cipo::present() const {
  // @@protoc_insertion_point(field_get:ADS_HF.DECISION.CIPO.Cipo.present)
  return _internal_present();
}
inline void Cipo::set_present(::ADS_HF::DECISION::CIPO::Cipo_Present value) {
  _internal_set_present(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:ADS_HF.DECISION.CIPO.Cipo.present)
}
inline ::ADS_HF::DECISION::CIPO::Cipo_Present Cipo::_internal_present() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ADS_HF::DECISION::CIPO::Cipo_Present>(_impl_.present_);
}
inline void Cipo::_internal_set_present(::ADS_HF::DECISION::CIPO::Cipo_Present value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.present_ = value;
}

// optional int32 dist = 2 [(.validate.rules) = {
inline bool Cipo::has_dist() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Cipo::clear_dist() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dist_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t Cipo::dist() const {
  // @@protoc_insertion_point(field_get:ADS_HF.DECISION.CIPO.Cipo.dist)
  return _internal_dist();
}
inline void Cipo::set_dist(::int32_t value) {
  _internal_set_dist(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:ADS_HF.DECISION.CIPO.Cipo.dist)
}
inline ::int32_t Cipo::_internal_dist() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dist_;
}
inline void Cipo::_internal_set_dist(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dist_ = value;
}

// optional uint32 speed = 3 [(.validate.rules) = {
inline bool Cipo::has_speed() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Cipo::clear_speed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t Cipo::speed() const {
  // @@protoc_insertion_point(field_get:ADS_HF.DECISION.CIPO.Cipo.speed)
  return _internal_speed();
}
inline void Cipo::set_speed(::uint32_t value) {
  _internal_set_speed(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:ADS_HF.DECISION.CIPO.Cipo.speed)
}
inline ::uint32_t Cipo::_internal_speed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.speed_;
}
inline void Cipo::_internal_set_speed(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_ = value;
}

// optional .ADS_HF.DECISION.CIPO.Cipo.Predict predict = 4 [(.validate.rules) = {
inline bool Cipo::has_predict() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void Cipo::clear_predict() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.predict_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::ADS_HF::DECISION::CIPO::Cipo_Predict Cipo::predict() const {
  // @@protoc_insertion_point(field_get:ADS_HF.DECISION.CIPO.Cipo.predict)
  return _internal_predict();
}
inline void Cipo::set_predict(::ADS_HF::DECISION::CIPO::Cipo_Predict value) {
  _internal_set_predict(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:ADS_HF.DECISION.CIPO.Cipo.predict)
}
inline ::ADS_HF::DECISION::CIPO::Cipo_Predict Cipo::_internal_predict() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ADS_HF::DECISION::CIPO::Cipo_Predict>(_impl_.predict_);
}
inline void Cipo::_internal_set_predict(::ADS_HF::DECISION::CIPO::Cipo_Predict value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.predict_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace CIPO
}  // namespace DECISION
}  // namespace ADS_HF


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::ADS_HF::DECISION::CIPO::Cipo_Present> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::ADS_HF::DECISION::CIPO::Cipo_Present>() {
  return ::ADS_HF::DECISION::CIPO::Cipo_Present_descriptor();
}
template <>
struct is_proto_enum<::ADS_HF::DECISION::CIPO::Cipo_Predict> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::ADS_HF::DECISION::CIPO::Cipo_Predict>() {
  return ::ADS_HF::DECISION::CIPO::Cipo_Predict_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // ads_5fhf_2fdecision_2fcipo_2fcipo_2eproto_2epb_2eh
