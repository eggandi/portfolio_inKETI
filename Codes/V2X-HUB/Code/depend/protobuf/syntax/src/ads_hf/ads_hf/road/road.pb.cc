// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ads_hf/road/road.proto
// Protobuf C++ Version: 6.31.1

#include "ads_hf/road/road.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace ADS_HF {
namespace ROAD {

inline constexpr Road::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        inclination_{nullptr},
        timestamp_{::uint64_t{0u}},
        no_{0u},
        curvature_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Road::Road(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Road_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RoadDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoadDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoadDefaultTypeInternal() {}
  union {
    Road _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoadDefaultTypeInternal _Road_default_instance_;
}  // namespace ROAD
}  // namespace ADS_HF
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_ads_5fhf_2froad_2froad_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_ads_5fhf_2froad_2froad_2eproto = nullptr;
const ::uint32_t
    TableStruct_ads_5fhf_2froad_2froad_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::ADS_HF::ROAD::Road, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::ADS_HF::ROAD::Road, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::ADS_HF::ROAD::Road, _impl_.no_),
        PROTOBUF_FIELD_OFFSET(::ADS_HF::ROAD::Road, _impl_.inclination_),
        PROTOBUF_FIELD_OFFSET(::ADS_HF::ROAD::Road, _impl_.curvature_),
        1,
        2,
        0,
        3,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::ADS_HF::ROAD::Road)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::ADS_HF::ROAD::_Road_default_instance_._instance,
};
const char descriptor_table_protodef_ads_5fhf_2froad_2froad_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\026ads_hf/road/road.proto\022\013ADS_HF.ROAD\032\027v"
    "alidate/validate.proto\032)ads_hf/road/incl"
    "ination/inclination.proto\"\317\001\n\004Road\022\037\n\tti"
    "mestamp\030\001 \001(\004B\007\372B\0042\002(\000H\000\210\001\001\022\033\n\002no\030\002 \001(\rB"
    "\n\372B\007*\005\030\200\001(\001H\001\210\001\001\022>\n\013inclination\030\003 \001(\0132$."
    "ADS_HF.ROAD.INCLINATION.InclinationH\002\210\001\001"
    "\022\026\n\tcurvature\030\004 \001(\005H\003\210\001\001B\014\n\n_timestampB\005"
    "\n\003_noB\016\n\014_inclinationB\014\n\n_curvatureb\006pro"
    "to3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_ads_5fhf_2froad_2froad_2eproto_deps[2] = {
        &::descriptor_table_ads_5fhf_2froad_2finclination_2finclination_2eproto,
        &::descriptor_table_validate_2fvalidate_2eproto,
};
static ::absl::once_flag descriptor_table_ads_5fhf_2froad_2froad_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_ads_5fhf_2froad_2froad_2eproto = {
    false,
    false,
    323,
    descriptor_table_protodef_ads_5fhf_2froad_2froad_2eproto,
    "ads_hf/road/road.proto",
    &descriptor_table_ads_5fhf_2froad_2froad_2eproto_once,
    descriptor_table_ads_5fhf_2froad_2froad_2eproto_deps,
    2,
    1,
    schemas,
    file_default_instances,
    TableStruct_ads_5fhf_2froad_2froad_2eproto::offsets,
    file_level_enum_descriptors_ads_5fhf_2froad_2froad_2eproto,
    file_level_service_descriptors_ads_5fhf_2froad_2froad_2eproto,
};
namespace ADS_HF {
namespace ROAD {
// ===================================================================

class Road::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Road>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Road, _impl_._has_bits_);
};

void Road::clear_inclination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.inclination_ != nullptr) _impl_.inclination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Road::Road(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Road_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ADS_HF.ROAD.Road)
}
PROTOBUF_NDEBUG_INLINE Road::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::ADS_HF::ROAD::Road& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Road::Road(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Road& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Road_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Road* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.inclination_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.inclination_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, curvature_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::curvature_));

  // @@protoc_insertion_point(copy_constructor:ADS_HF.ROAD.Road)
}
PROTOBUF_NDEBUG_INLINE Road::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Road::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, inclination_),
           0,
           offsetof(Impl_, curvature_) -
               offsetof(Impl_, inclination_) +
               sizeof(Impl_::curvature_));
}
Road::~Road() {
  // @@protoc_insertion_point(destructor:ADS_HF.ROAD.Road)
  SharedDtor(*this);
}
inline void Road::SharedDtor(MessageLite& self) {
  Road& this_ = static_cast<Road&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.inclination_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Road::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Road(arena);
}
constexpr auto Road::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Road),
                                            alignof(Road));
}
constexpr auto Road::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Road_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Road::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Road>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Road::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Road>(), &Road::ByteSizeLong,
              &Road::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Road, _impl_._cached_size_),
          false,
      },
      &Road::kDescriptorMethods,
      &descriptor_table_ads_5fhf_2froad_2froad_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Road_class_data_ =
        Road::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Road::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Road_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Road_class_data_.tc_table);
  return Road_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2>
Road::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Road, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Road_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ADS_HF::ROAD::Road>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 curvature = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Road, _impl_.curvature_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(Road, _impl_.curvature_)}},
    // optional uint64 timestamp = 1 [(.validate.rules) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Road, _impl_.timestamp_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(Road, _impl_.timestamp_)}},
    // optional uint32 no = 2 [(.validate.rules) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Road, _impl_.no_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(Road, _impl_.no_)}},
    // optional .ADS_HF.ROAD.INCLINATION.Inclination inclination = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Road, _impl_.inclination_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 timestamp = 1 [(.validate.rules) = {
    {PROTOBUF_FIELD_OFFSET(Road, _impl_.timestamp_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 no = 2 [(.validate.rules) = {
    {PROTOBUF_FIELD_OFFSET(Road, _impl_.no_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .ADS_HF.ROAD.INCLINATION.Inclination inclination = 3;
    {PROTOBUF_FIELD_OFFSET(Road, _impl_.inclination_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int32 curvature = 4;
    {PROTOBUF_FIELD_OFFSET(Road, _impl_.curvature_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::ADS_HF::ROAD::INCLINATION::Inclination>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Road::Clear() {
// @@protoc_insertion_point(message_clear_start:ADS_HF.ROAD.Road)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.inclination_ != nullptr);
    _impl_.inclination_->Clear();
  }
  if ((cached_has_bits & 0x0000000eu) != 0) {
    ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.curvature_) -
        reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.curvature_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Road::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Road& this_ = static_cast<const Road&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Road::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Road& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:ADS_HF.ROAD.Road)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint64 timestamp = 1 [(.validate.rules) = {
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this_._internal_timestamp(), target);
  }

  // optional uint32 no = 2 [(.validate.rules) = {
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_no(), target);
  }

  // optional .ADS_HF.ROAD.INCLINATION.Inclination inclination = 3;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.inclination_, this_._impl_.inclination_->GetCachedSize(), target,
        stream);
  }

  // optional int32 curvature = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
            stream, this_._internal_curvature(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADS_HF.ROAD.Road)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Road::ByteSizeLong(const MessageLite& base) {
  const Road& this_ = static_cast<const Road&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Road::ByteSizeLong() const {
  const Road& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:ADS_HF.ROAD.Road)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // optional .ADS_HF.ROAD.INCLINATION.Inclination inclination = 3;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.inclination_);
    }
    // optional uint64 timestamp = 1 [(.validate.rules) = {
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_timestamp());
    }
    // optional uint32 no = 2 [(.validate.rules) = {
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_no());
    }
    // optional int32 curvature = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_curvature());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Road::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Road*>(&to_msg);
  auto& from = static_cast<const Road&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ADS_HF.ROAD.Road)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.inclination_ != nullptr);
      if (_this->_impl_.inclination_ == nullptr) {
        _this->_impl_.inclination_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.inclination_);
      } else {
        _this->_impl_.inclination_->MergeFrom(*from._impl_.inclination_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.timestamp_ = from._impl_.timestamp_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.no_ = from._impl_.no_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.curvature_ = from._impl_.curvature_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Road::CopyFrom(const Road& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADS_HF.ROAD.Road)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Road::InternalSwap(Road* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Road, _impl_.curvature_)
      + sizeof(Road::_impl_.curvature_)
      - PROTOBUF_FIELD_OFFSET(Road, _impl_.inclination_)>(
          reinterpret_cast<char*>(&_impl_.inclination_),
          reinterpret_cast<char*>(&other->_impl_.inclination_));
}

::google::protobuf::Metadata Road::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace ROAD
}  // namespace ADS_HF
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_ads_5fhf_2froad_2froad_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
