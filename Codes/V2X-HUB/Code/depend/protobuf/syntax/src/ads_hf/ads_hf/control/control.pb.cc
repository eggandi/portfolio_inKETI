// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ads_hf/control/control.proto
// Protobuf C++ Version: 6.31.1

#include "ads_hf/control/control.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace ADS_HF {
namespace CONTROL {

inline constexpr Control::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        timestamp_{::uint64_t{0u}},
        lat_{::int64_t{0}},
        seq_{0u},
        speed_{0u},
        lon_{::int64_t{0}},
        accel_lon_{0},
        accel_lat_{0},
        dist_{0},
        angle_{0},
        ttc_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Control::Control(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Control_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ControlDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ControlDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ControlDefaultTypeInternal() {}
  union {
    Control _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ControlDefaultTypeInternal _Control_default_instance_;
}  // namespace CONTROL
}  // namespace ADS_HF
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_ads_5fhf_2fcontrol_2fcontrol_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_ads_5fhf_2fcontrol_2fcontrol_2eproto = nullptr;
const ::uint32_t
    TableStruct_ads_5fhf_2fcontrol_2fcontrol_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::ADS_HF::CONTROL::Control, _impl_._has_bits_),
        13, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::ADS_HF::CONTROL::Control, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::ADS_HF::CONTROL::Control, _impl_.seq_),
        PROTOBUF_FIELD_OFFSET(::ADS_HF::CONTROL::Control, _impl_.lat_),
        PROTOBUF_FIELD_OFFSET(::ADS_HF::CONTROL::Control, _impl_.lon_),
        PROTOBUF_FIELD_OFFSET(::ADS_HF::CONTROL::Control, _impl_.speed_),
        PROTOBUF_FIELD_OFFSET(::ADS_HF::CONTROL::Control, _impl_.accel_lon_),
        PROTOBUF_FIELD_OFFSET(::ADS_HF::CONTROL::Control, _impl_.accel_lat_),
        PROTOBUF_FIELD_OFFSET(::ADS_HF::CONTROL::Control, _impl_.dist_),
        PROTOBUF_FIELD_OFFSET(::ADS_HF::CONTROL::Control, _impl_.angle_),
        PROTOBUF_FIELD_OFFSET(::ADS_HF::CONTROL::Control, _impl_.ttc_),
        0,
        2,
        1,
        4,
        3,
        5,
        6,
        7,
        8,
        9,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::ADS_HF::CONTROL::Control)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::ADS_HF::CONTROL::_Control_default_instance_._instance,
};
const char descriptor_table_protodef_ads_5fhf_2fcontrol_2fcontrol_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\034ads_hf/control/control.proto\022\016ADS_HF.C"
    "ONTROL\032\027validate/validate.proto\"\352\003\n\007Cont"
    "rol\022\037\n\ttimestamp\030\001 \001(\004B\007\372B\0042\002(\000H\000\210\001\001\022\031\n\003"
    "seq\030\002 \001(\rB\007\372B\004*\002(\000H\001\210\001\001\022(\n\003lat\030\003 \001(\003B\026\372B"
    "\023\"\021\030\201\322\223\255\003(\200\256\354\322\374\377\377\377\377\001H\002\210\001\001\022(\n\003lon\030\004 \001(\003B\026"
    "\372B\023\"\021\030\201\244\247\332\006(\201\334\330\245\371\377\377\377\377\001H\003\210\001\001\022\036\n\005speed\030\005 \001"
    "(\rB\n\372B\007*\005\030\377\?(\000H\004\210\001\001\022+\n\taccel_lon\030\006 \001(\005B\023"
    "\372B\020\032\016\030\321\017(\260\360\377\377\377\377\377\377\377\001H\005\210\001\001\022+\n\taccel_lat\030\007 "
    "\001(\005B\023\372B\020\032\016\030\321\017(\260\360\377\377\377\377\377\377\377\001H\006\210\001\001\022\'\n\004dist\030\010 "
    "\001(\005B\024\372B\021\032\017\030\377\377\001(\201\200\376\377\377\377\377\377\377\001H\007\210\001\001\022&\n\005angle\030"
    "\t \001(\005B\022\372B\017\032\r\030\177(\202\377\377\377\377\377\377\377\377\001H\010\210\001\001\022\035\n\003ttc\030\n "
    "\001(\rB\013\372B\010*\006\030\377\377\003(\001H\t\210\001\001B\014\n\n_timestampB\006\n\004_"
    "seqB\006\n\004_latB\006\n\004_lonB\010\n\006_speedB\014\n\n_accel_"
    "lonB\014\n\n_accel_latB\007\n\005_distB\010\n\006_angleB\006\n\004"
    "_ttcb\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_ads_5fhf_2fcontrol_2fcontrol_2eproto_deps[1] = {
        &::descriptor_table_validate_2fvalidate_2eproto,
};
static ::absl::once_flag descriptor_table_ads_5fhf_2fcontrol_2fcontrol_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_ads_5fhf_2fcontrol_2fcontrol_2eproto = {
    false,
    false,
    572,
    descriptor_table_protodef_ads_5fhf_2fcontrol_2fcontrol_2eproto,
    "ads_hf/control/control.proto",
    &descriptor_table_ads_5fhf_2fcontrol_2fcontrol_2eproto_once,
    descriptor_table_ads_5fhf_2fcontrol_2fcontrol_2eproto_deps,
    1,
    1,
    schemas,
    file_default_instances,
    TableStruct_ads_5fhf_2fcontrol_2fcontrol_2eproto::offsets,
    file_level_enum_descriptors_ads_5fhf_2fcontrol_2fcontrol_2eproto,
    file_level_service_descriptors_ads_5fhf_2fcontrol_2fcontrol_2eproto,
};
namespace ADS_HF {
namespace CONTROL {
// ===================================================================

class Control::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Control>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Control, _impl_._has_bits_);
};

Control::Control(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Control_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ADS_HF.CONTROL.Control)
}
Control::Control(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Control& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Control_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE Control::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Control::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, ttc_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::ttc_));
}
Control::~Control() {
  // @@protoc_insertion_point(destructor:ADS_HF.CONTROL.Control)
  SharedDtor(*this);
}
inline void Control::SharedDtor(MessageLite& self) {
  Control& this_ = static_cast<Control&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Control::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Control(arena);
}
constexpr auto Control::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Control),
                                            alignof(Control));
}
constexpr auto Control::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Control_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Control::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Control>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Control::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Control>(), &Control::ByteSizeLong,
              &Control::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Control, _impl_._cached_size_),
          false,
      },
      &Control::kDescriptorMethods,
      &descriptor_table_ads_5fhf_2fcontrol_2fcontrol_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Control_class_data_ =
        Control::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Control::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Control_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Control_class_data_.tc_table);
  return Control_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 0, 0, 2>
Control::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Control, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Control_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ADS_HF::CONTROL::Control>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint64 timestamp = 1 [(.validate.rules) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Control, _impl_.timestamp_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Control, _impl_.timestamp_)}},
    // optional uint32 seq = 2 [(.validate.rules) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Control, _impl_.seq_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(Control, _impl_.seq_)}},
    // optional int64 lat = 3 [(.validate.rules) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Control, _impl_.lat_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(Control, _impl_.lat_)}},
    // optional int64 lon = 4 [(.validate.rules) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Control, _impl_.lon_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(Control, _impl_.lon_)}},
    // optional uint32 speed = 5 [(.validate.rules) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Control, _impl_.speed_), 3>(),
     {40, 3, 0, PROTOBUF_FIELD_OFFSET(Control, _impl_.speed_)}},
    // optional int32 accel_lon = 6 [(.validate.rules) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Control, _impl_.accel_lon_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(Control, _impl_.accel_lon_)}},
    // optional int32 accel_lat = 7 [(.validate.rules) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Control, _impl_.accel_lat_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(Control, _impl_.accel_lat_)}},
    // optional int32 dist = 8 [(.validate.rules) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Control, _impl_.dist_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(Control, _impl_.dist_)}},
    // optional int32 angle = 9 [(.validate.rules) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Control, _impl_.angle_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(Control, _impl_.angle_)}},
    // optional uint32 ttc = 10 [(.validate.rules) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Control, _impl_.ttc_), 9>(),
     {80, 9, 0, PROTOBUF_FIELD_OFFSET(Control, _impl_.ttc_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 timestamp = 1 [(.validate.rules) = {
    {PROTOBUF_FIELD_OFFSET(Control, _impl_.timestamp_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 seq = 2 [(.validate.rules) = {
    {PROTOBUF_FIELD_OFFSET(Control, _impl_.seq_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int64 lat = 3 [(.validate.rules) = {
    {PROTOBUF_FIELD_OFFSET(Control, _impl_.lat_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int64 lon = 4 [(.validate.rules) = {
    {PROTOBUF_FIELD_OFFSET(Control, _impl_.lon_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional uint32 speed = 5 [(.validate.rules) = {
    {PROTOBUF_FIELD_OFFSET(Control, _impl_.speed_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int32 accel_lon = 6 [(.validate.rules) = {
    {PROTOBUF_FIELD_OFFSET(Control, _impl_.accel_lon_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 accel_lat = 7 [(.validate.rules) = {
    {PROTOBUF_FIELD_OFFSET(Control, _impl_.accel_lat_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 dist = 8 [(.validate.rules) = {
    {PROTOBUF_FIELD_OFFSET(Control, _impl_.dist_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 angle = 9 [(.validate.rules) = {
    {PROTOBUF_FIELD_OFFSET(Control, _impl_.angle_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint32 ttc = 10 [(.validate.rules) = {
    {PROTOBUF_FIELD_OFFSET(Control, _impl_.ttc_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void Control::Clear() {
// @@protoc_insertion_point(message_clear_start:ADS_HF.CONTROL.Control)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.dist_) -
        reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.dist_));
  }
  if ((cached_has_bits & 0x00000300u) != 0) {
    ::memset(&_impl_.angle_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.ttc_) -
        reinterpret_cast<char*>(&_impl_.angle_)) + sizeof(_impl_.ttc_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Control::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Control& this_ = static_cast<const Control&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Control::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Control& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:ADS_HF.CONTROL.Control)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint64 timestamp = 1 [(.validate.rules) = {
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this_._internal_timestamp(), target);
  }

  // optional uint32 seq = 2 [(.validate.rules) = {
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_seq(), target);
  }

  // optional int64 lat = 3 [(.validate.rules) = {
  if ((cached_has_bits & 0x00000002u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<3>(
            stream, this_._internal_lat(), target);
  }

  // optional int64 lon = 4 [(.validate.rules) = {
  if ((cached_has_bits & 0x00000010u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<4>(
            stream, this_._internal_lon(), target);
  }

  // optional uint32 speed = 5 [(.validate.rules) = {
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this_._internal_speed(), target);
  }

  // optional int32 accel_lon = 6 [(.validate.rules) = {
  if ((cached_has_bits & 0x00000020u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<6>(
            stream, this_._internal_accel_lon(), target);
  }

  // optional int32 accel_lat = 7 [(.validate.rules) = {
  if ((cached_has_bits & 0x00000040u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<7>(
            stream, this_._internal_accel_lat(), target);
  }

  // optional int32 dist = 8 [(.validate.rules) = {
  if ((cached_has_bits & 0x00000080u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<8>(
            stream, this_._internal_dist(), target);
  }

  // optional int32 angle = 9 [(.validate.rules) = {
  if ((cached_has_bits & 0x00000100u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<9>(
            stream, this_._internal_angle(), target);
  }

  // optional uint32 ttc = 10 [(.validate.rules) = {
  if ((cached_has_bits & 0x00000200u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        10, this_._internal_ttc(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADS_HF.CONTROL.Control)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Control::ByteSizeLong(const MessageLite& base) {
  const Control& this_ = static_cast<const Control&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Control::ByteSizeLong() const {
  const Control& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:ADS_HF.CONTROL.Control)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // optional uint64 timestamp = 1 [(.validate.rules) = {
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_timestamp());
    }
    // optional int64 lat = 3 [(.validate.rules) = {
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this_._internal_lat());
    }
    // optional uint32 seq = 2 [(.validate.rules) = {
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_seq());
    }
    // optional uint32 speed = 5 [(.validate.rules) = {
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_speed());
    }
    // optional int64 lon = 4 [(.validate.rules) = {
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this_._internal_lon());
    }
    // optional int32 accel_lon = 6 [(.validate.rules) = {
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_accel_lon());
    }
    // optional int32 accel_lat = 7 [(.validate.rules) = {
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_accel_lat());
    }
    // optional int32 dist = 8 [(.validate.rules) = {
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_dist());
    }
  }
  if ((cached_has_bits & 0x00000300u) != 0) {
    // optional int32 angle = 9 [(.validate.rules) = {
    if ((cached_has_bits & 0x00000100u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_angle());
    }
    // optional uint32 ttc = 10 [(.validate.rules) = {
    if ((cached_has_bits & 0x00000200u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_ttc());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Control::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Control*>(&to_msg);
  auto& from = static_cast<const Control&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ADS_HF.CONTROL.Control)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.timestamp_ = from._impl_.timestamp_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.lat_ = from._impl_.lat_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.seq_ = from._impl_.seq_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.speed_ = from._impl_.speed_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.lon_ = from._impl_.lon_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.accel_lon_ = from._impl_.accel_lon_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.accel_lat_ = from._impl_.accel_lat_;
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_impl_.dist_ = from._impl_.dist_;
    }
  }
  if ((cached_has_bits & 0x00000300u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      _this->_impl_.angle_ = from._impl_.angle_;
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      _this->_impl_.ttc_ = from._impl_.ttc_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Control::CopyFrom(const Control& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADS_HF.CONTROL.Control)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Control::InternalSwap(Control* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Control, _impl_.ttc_)
      + sizeof(Control::_impl_.ttc_)
      - PROTOBUF_FIELD_OFFSET(Control, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata Control::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace CONTROL
}  // namespace ADS_HF
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_ads_5fhf_2fcontrol_2fcontrol_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
